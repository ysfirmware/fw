   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f10x_iwdg.c"
  21              	.Ltext0:
  22              		.align	2
  23              		.global	IWDG_WriteAccessCmd
  24              		.thumb
  25              		.thumb_func
  27              	IWDG_WriteAccessCmd:
  28              	.LFB0:
  29              		.file 1 "lib//src/stm32f10x_iwdg.c"
   1:lib//src/stm32f10x_iwdg.c **** /******************** (C) COPYRIGHT 2008 STMicroelectronics ********************
   2:lib//src/stm32f10x_iwdg.c **** * File Name          : stm32f10x_iwdg.c
   3:lib//src/stm32f10x_iwdg.c **** * Author             : MCD Application Team
   4:lib//src/stm32f10x_iwdg.c **** * Version            : V2.0
   5:lib//src/stm32f10x_iwdg.c **** * Date               : 05/23/2008
   6:lib//src/stm32f10x_iwdg.c **** * Description        : This file provides all the IWDG firmware functions.
   7:lib//src/stm32f10x_iwdg.c **** ********************************************************************************
   8:lib//src/stm32f10x_iwdg.c **** * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
   9:lib//src/stm32f10x_iwdg.c **** * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
  10:lib//src/stm32f10x_iwdg.c **** * AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
  11:lib//src/stm32f10x_iwdg.c **** * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
  12:lib//src/stm32f10x_iwdg.c **** * CONTENT OF SUCH SOFTWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
  13:lib//src/stm32f10x_iwdg.c **** * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  14:lib//src/stm32f10x_iwdg.c **** * FOR MORE INFORMATION PLEASE CAREFULLY READ THE LICENSE AGREEMENT FILE LOCATED 
  15:lib//src/stm32f10x_iwdg.c **** * IN THE ROOT DIRECTORY OF THIS FIRMWARE PACKAGE.
  16:lib//src/stm32f10x_iwdg.c **** *******************************************************************************/
  17:lib//src/stm32f10x_iwdg.c **** 
  18:lib//src/stm32f10x_iwdg.c **** /* Includes ------------------------------------------------------------------*/
  19:lib//src/stm32f10x_iwdg.c **** #include "stm32f10x_iwdg.h"
  20:lib//src/stm32f10x_iwdg.c **** 
  21:lib//src/stm32f10x_iwdg.c **** /* Private typedef -----------------------------------------------------------*/
  22:lib//src/stm32f10x_iwdg.c **** /* Private define ------------------------------------------------------------*/
  23:lib//src/stm32f10x_iwdg.c **** /* ---------------------- IWDG registers bit mask ------------------------ */
  24:lib//src/stm32f10x_iwdg.c **** /* KR register bit mask */
  25:lib//src/stm32f10x_iwdg.c **** #define KR_KEY_Reload    ((u16)0xAAAA)
  26:lib//src/stm32f10x_iwdg.c **** #define KR_KEY_Enable    ((u16)0xCCCC)
  27:lib//src/stm32f10x_iwdg.c **** 
  28:lib//src/stm32f10x_iwdg.c **** /* Private macro -------------------------------------------------------------*/
  29:lib//src/stm32f10x_iwdg.c **** /* Private variables ---------------------------------------------------------*/
  30:lib//src/stm32f10x_iwdg.c **** /* Private function prototypes -----------------------------------------------*/
  31:lib//src/stm32f10x_iwdg.c **** /* Private functions ---------------------------------------------------------*/
  32:lib//src/stm32f10x_iwdg.c **** 
  33:lib//src/stm32f10x_iwdg.c **** /*******************************************************************************
  34:lib//src/stm32f10x_iwdg.c **** * Function Name  : IWDG_WriteAccessCmd
  35:lib//src/stm32f10x_iwdg.c **** * Description    : Enables or disables write access to IWDG_PR and IWDG_RLR
  36:lib//src/stm32f10x_iwdg.c **** *                  registers.
  37:lib//src/stm32f10x_iwdg.c **** * Input          : - IWDG_WriteAccess: new state of write access to IWDG_PR and
  38:lib//src/stm32f10x_iwdg.c **** *                    IWDG_RLR registers.
  39:lib//src/stm32f10x_iwdg.c **** *                    This parameter can be one of the following values:
  40:lib//src/stm32f10x_iwdg.c **** *                       - IWDG_WriteAccess_Enable: Enable write access to 
  41:lib//src/stm32f10x_iwdg.c **** *                         IWDG_PR and IWDG_RLR registers
  42:lib//src/stm32f10x_iwdg.c **** *                       - IWDG_WriteAccess_Disable: Disable write access to
  43:lib//src/stm32f10x_iwdg.c **** *                         IWDG_PR and IWDG_RLR registers
  44:lib//src/stm32f10x_iwdg.c **** * Output         : None
  45:lib//src/stm32f10x_iwdg.c **** * Return         : None
  46:lib//src/stm32f10x_iwdg.c **** *******************************************************************************/
  47:lib//src/stm32f10x_iwdg.c **** void IWDG_WriteAccessCmd(u16 IWDG_WriteAccess)
  48:lib//src/stm32f10x_iwdg.c **** {
  30              		.loc 1 48 0
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  49:lib//src/stm32f10x_iwdg.c ****   /* Check the parameters */
  50:lib//src/stm32f10x_iwdg.c ****   assert_param(IS_IWDG_WRITE_ACCESS(IWDG_WriteAccess));
  51:lib//src/stm32f10x_iwdg.c **** 
  52:lib//src/stm32f10x_iwdg.c ****   IWDG->KR = IWDG_WriteAccess;
  35              		.loc 1 52 0
  36 0000 014B     		ldr	r3, .L3
  37 0002 1860     		str	r0, [r3, #0]
  53:lib//src/stm32f10x_iwdg.c **** }
  38              		.loc 1 53 0
  39 0004 7047     		bx	lr
  40              	.L4:
  41 0006 00BF     		.align	2
  42              	.L3:
  43 0008 00300040 		.word	1073754112
  44              	.LFE0:
  46              		.align	2
  47              		.global	IWDG_SetPrescaler
  48              		.thumb
  49              		.thumb_func
  51              	IWDG_SetPrescaler:
  52              	.LFB1:
  54:lib//src/stm32f10x_iwdg.c **** 
  55:lib//src/stm32f10x_iwdg.c **** /*******************************************************************************
  56:lib//src/stm32f10x_iwdg.c **** * Function Name  : IWDG_SetPrescaler
  57:lib//src/stm32f10x_iwdg.c **** * Description    : Sets IWDG Prescaler value.
  58:lib//src/stm32f10x_iwdg.c **** * Input          : - IWDG_Prescaler: specifies the IWDG Prescaler value.
  59:lib//src/stm32f10x_iwdg.c **** *                    This parameter can be one of the following values:
  60:lib//src/stm32f10x_iwdg.c **** *                       - IWDG_Prescaler_4: IWDG prescaler set to 4
  61:lib//src/stm32f10x_iwdg.c **** *                       - IWDG_Prescaler_8: IWDG prescaler set to 8
  62:lib//src/stm32f10x_iwdg.c **** *                       - IWDG_Prescaler_16: IWDG prescaler set to 16
  63:lib//src/stm32f10x_iwdg.c **** *                       - IWDG_Prescaler_32: IWDG prescaler set to 32
  64:lib//src/stm32f10x_iwdg.c **** *                       - IWDG_Prescaler_64: IWDG prescaler set to 64
  65:lib//src/stm32f10x_iwdg.c **** *                       - IWDG_Prescaler_128: IWDG prescaler set to 128
  66:lib//src/stm32f10x_iwdg.c **** *                       - IWDG_Prescaler_256: IWDG prescaler set to 256
  67:lib//src/stm32f10x_iwdg.c **** * Output         : None
  68:lib//src/stm32f10x_iwdg.c **** * Return         : None
  69:lib//src/stm32f10x_iwdg.c **** *******************************************************************************/
  70:lib//src/stm32f10x_iwdg.c **** void IWDG_SetPrescaler(u8 IWDG_Prescaler)
  71:lib//src/stm32f10x_iwdg.c **** {
  53              		.loc 1 71 0
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              	.LVL1:
  72:lib//src/stm32f10x_iwdg.c ****   /* Check the parameters */
  73:lib//src/stm32f10x_iwdg.c ****   assert_param(IS_IWDG_PRESCALER(IWDG_Prescaler));
  74:lib//src/stm32f10x_iwdg.c **** 
  75:lib//src/stm32f10x_iwdg.c ****   IWDG->PR = IWDG_Prescaler;
  58              		.loc 1 75 0
  59 000c 014B     		ldr	r3, .L7
  60 000e 5860     		str	r0, [r3, #4]
  76:lib//src/stm32f10x_iwdg.c **** }
  61              		.loc 1 76 0
  62 0010 7047     		bx	lr
  63              	.L8:
  64 0012 00BF     		.align	2
  65              	.L7:
  66 0014 00300040 		.word	1073754112
  67              	.LFE1:
  69              		.align	2
  70              		.global	IWDG_SetReload
  71              		.thumb
  72              		.thumb_func
  74              	IWDG_SetReload:
  75              	.LFB2:
  77:lib//src/stm32f10x_iwdg.c **** 
  78:lib//src/stm32f10x_iwdg.c **** /*******************************************************************************
  79:lib//src/stm32f10x_iwdg.c **** * Function Name  : IWDG_SetReload
  80:lib//src/stm32f10x_iwdg.c **** * Description    : Sets IWDG Reload value.
  81:lib//src/stm32f10x_iwdg.c **** * Input          : - Reload: specifies the IWDG Reload value.
  82:lib//src/stm32f10x_iwdg.c **** *                    This parameter must be a number between 0 and 0x0FFF.
  83:lib//src/stm32f10x_iwdg.c **** * Output         : None
  84:lib//src/stm32f10x_iwdg.c **** * Return         : None
  85:lib//src/stm32f10x_iwdg.c **** *******************************************************************************/
  86:lib//src/stm32f10x_iwdg.c **** void IWDG_SetReload(u16 Reload)
  87:lib//src/stm32f10x_iwdg.c **** {
  76              		.loc 1 87 0
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
  80              	.LVL2:
  88:lib//src/stm32f10x_iwdg.c ****   /* Check the parameters */
  89:lib//src/stm32f10x_iwdg.c ****   assert_param(IS_IWDG_RELOAD(Reload));
  90:lib//src/stm32f10x_iwdg.c **** 
  91:lib//src/stm32f10x_iwdg.c ****   IWDG->RLR = Reload;
  81              		.loc 1 91 0
  82 0018 014B     		ldr	r3, .L11
  83 001a 9860     		str	r0, [r3, #8]
  92:lib//src/stm32f10x_iwdg.c **** }
  84              		.loc 1 92 0
  85 001c 7047     		bx	lr
  86              	.L12:
  87 001e 00BF     		.align	2
  88              	.L11:
  89 0020 00300040 		.word	1073754112
  90              	.LFE2:
  92              		.align	2
  93              		.global	IWDG_ReloadCounter
  94              		.thumb
  95              		.thumb_func
  97              	IWDG_ReloadCounter:
  98              	.LFB3:
  93:lib//src/stm32f10x_iwdg.c **** 
  94:lib//src/stm32f10x_iwdg.c **** /*******************************************************************************
  95:lib//src/stm32f10x_iwdg.c **** * Function Name  : IWDG_ReloadCounter
  96:lib//src/stm32f10x_iwdg.c **** * Description    : Reloads IWDG counter with value defined in the reload register
  97:lib//src/stm32f10x_iwdg.c **** *                  (write access to IWDG_PR and IWDG_RLR registers disabled).
  98:lib//src/stm32f10x_iwdg.c **** * Input          : None
  99:lib//src/stm32f10x_iwdg.c **** * Output         : None
 100:lib//src/stm32f10x_iwdg.c **** * Return         : None
 101:lib//src/stm32f10x_iwdg.c **** *******************************************************************************/
 102:lib//src/stm32f10x_iwdg.c **** void IWDG_ReloadCounter(void)
 103:lib//src/stm32f10x_iwdg.c **** {
  99              		.loc 1 103 0
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 104:lib//src/stm32f10x_iwdg.c ****   IWDG->KR = KR_KEY_Reload;
 103              		.loc 1 104 0
 104 0024 024B     		ldr	r3, .L15
 105 0026 4AF6AA22 		movw	r2, #43690
 106 002a 1A60     		str	r2, [r3, #0]
 105:lib//src/stm32f10x_iwdg.c **** }
 107              		.loc 1 105 0
 108 002c 7047     		bx	lr
 109              	.L16:
 110 002e 00BF     		.align	2
 111              	.L15:
 112 0030 00300040 		.word	1073754112
 113              	.LFE3:
 115              		.align	2
 116              		.global	IWDG_Enable
 117              		.thumb
 118              		.thumb_func
 120              	IWDG_Enable:
 121              	.LFB4:
 106:lib//src/stm32f10x_iwdg.c **** 
 107:lib//src/stm32f10x_iwdg.c **** /*******************************************************************************
 108:lib//src/stm32f10x_iwdg.c **** * Function Name  : IWDG_Enable
 109:lib//src/stm32f10x_iwdg.c **** * Description    : Enables IWDG (write access to IWDG_PR and IWDG_RLR registers
 110:lib//src/stm32f10x_iwdg.c **** *                  disabled).
 111:lib//src/stm32f10x_iwdg.c **** * Input          : None
 112:lib//src/stm32f10x_iwdg.c **** * Output         : None
 113:lib//src/stm32f10x_iwdg.c **** * Return         : None
 114:lib//src/stm32f10x_iwdg.c **** *******************************************************************************/
 115:lib//src/stm32f10x_iwdg.c **** void IWDG_Enable(void)
 116:lib//src/stm32f10x_iwdg.c **** {
 122              		.loc 1 116 0
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 117:lib//src/stm32f10x_iwdg.c ****   IWDG->KR = KR_KEY_Enable;
 126              		.loc 1 117 0
 127 0034 024B     		ldr	r3, .L19
 128 0036 4CF6CC42 		movw	r2, #52428
 129 003a 1A60     		str	r2, [r3, #0]
 118:lib//src/stm32f10x_iwdg.c **** }
 130              		.loc 1 118 0
 131 003c 7047     		bx	lr
 132              	.L20:
 133 003e 00BF     		.align	2
 134              	.L19:
 135 0040 00300040 		.word	1073754112
 136              	.LFE4:
 138              		.align	2
 139              		.global	IWDG_GetFlagStatus
 140              		.thumb
 141              		.thumb_func
 143              	IWDG_GetFlagStatus:
 144              	.LFB5:
 119:lib//src/stm32f10x_iwdg.c **** 
 120:lib//src/stm32f10x_iwdg.c **** /*******************************************************************************
 121:lib//src/stm32f10x_iwdg.c **** * Function Name  : IWDG_GetFlagStatus
 122:lib//src/stm32f10x_iwdg.c **** * Description    : Checks whether the specified IWDG flag is set or not.
 123:lib//src/stm32f10x_iwdg.c **** * Input          : - IWDG_FLAG: specifies the flag to check.
 124:lib//src/stm32f10x_iwdg.c **** *                    This parameter can be one of the following values:
 125:lib//src/stm32f10x_iwdg.c **** *                       - IWDG_FLAG_PVU: Prescaler Value Update on going
 126:lib//src/stm32f10x_iwdg.c **** *                       - IWDG_FLAG_RVU: Reload Value Update on going
 127:lib//src/stm32f10x_iwdg.c **** * Output         : None
 128:lib//src/stm32f10x_iwdg.c **** * Return         : The new state of IWDG_FLAG (SET or RESET).
 129:lib//src/stm32f10x_iwdg.c **** *******************************************************************************/
 130:lib//src/stm32f10x_iwdg.c **** FlagStatus IWDG_GetFlagStatus(u16 IWDG_FLAG)
 131:lib//src/stm32f10x_iwdg.c **** {
 145              		.loc 1 131 0
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 149              	.LVL3:
 132:lib//src/stm32f10x_iwdg.c ****   FlagStatus bitstatus = RESET;
 133:lib//src/stm32f10x_iwdg.c **** 
 134:lib//src/stm32f10x_iwdg.c ****   /* Check the parameters */
 135:lib//src/stm32f10x_iwdg.c ****   assert_param(IS_IWDG_FLAG(IWDG_FLAG));
 136:lib//src/stm32f10x_iwdg.c **** 
 137:lib//src/stm32f10x_iwdg.c ****   if ((IWDG->SR & IWDG_FLAG) != (u32)RESET)
 150              		.loc 1 137 0
 151 0044 034B     		ldr	r3, .L23
 152 0046 DB68     		ldr	r3, [r3, #12]
 153 0048 1842     		tst	r0, r3
 138:lib//src/stm32f10x_iwdg.c ****   {
 139:lib//src/stm32f10x_iwdg.c ****     bitstatus = SET;
 140:lib//src/stm32f10x_iwdg.c ****   }
 141:lib//src/stm32f10x_iwdg.c ****   else
 142:lib//src/stm32f10x_iwdg.c ****   {
 143:lib//src/stm32f10x_iwdg.c ****     bitstatus = RESET;
 144:lib//src/stm32f10x_iwdg.c ****   }
 145:lib//src/stm32f10x_iwdg.c **** 
 146:lib//src/stm32f10x_iwdg.c ****   /* Return the flag status */
 147:lib//src/stm32f10x_iwdg.c ****   return bitstatus;
 148:lib//src/stm32f10x_iwdg.c **** }
 154              		.loc 1 148 0
 155 004a 0CBF     		ite	eq
 156 004c 0020     		moveq	r0, #0
 157 004e 0120     		movne	r0, #1
 158              	.LVL4:
 159 0050 7047     		bx	lr
 160              	.L24:
 161 0052 00BF     		.align	2
 162              	.L23:
 163 0054 00300040 		.word	1073754112
 164              	.LFE5:
 230              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_iwdg.c
C:\DOKUME~1\Kahlbaum\LOKALE~1\Temp\cc4DtSkm.s:22     .text:00000000 $t
C:\DOKUME~1\Kahlbaum\LOKALE~1\Temp\cc4DtSkm.s:27     .text:00000000 IWDG_WriteAccessCmd
C:\DOKUME~1\Kahlbaum\LOKALE~1\Temp\cc4DtSkm.s:43     .text:00000008 $d
C:\DOKUME~1\Kahlbaum\LOKALE~1\Temp\cc4DtSkm.s:46     .text:0000000c $t
C:\DOKUME~1\Kahlbaum\LOKALE~1\Temp\cc4DtSkm.s:51     .text:0000000c IWDG_SetPrescaler
C:\DOKUME~1\Kahlbaum\LOKALE~1\Temp\cc4DtSkm.s:66     .text:00000014 $d
C:\DOKUME~1\Kahlbaum\LOKALE~1\Temp\cc4DtSkm.s:69     .text:00000018 $t
C:\DOKUME~1\Kahlbaum\LOKALE~1\Temp\cc4DtSkm.s:74     .text:00000018 IWDG_SetReload
C:\DOKUME~1\Kahlbaum\LOKALE~1\Temp\cc4DtSkm.s:89     .text:00000020 $d
C:\DOKUME~1\Kahlbaum\LOKALE~1\Temp\cc4DtSkm.s:92     .text:00000024 $t
C:\DOKUME~1\Kahlbaum\LOKALE~1\Temp\cc4DtSkm.s:97     .text:00000024 IWDG_ReloadCounter
C:\DOKUME~1\Kahlbaum\LOKALE~1\Temp\cc4DtSkm.s:112    .text:00000030 $d
C:\DOKUME~1\Kahlbaum\LOKALE~1\Temp\cc4DtSkm.s:115    .text:00000034 $t
C:\DOKUME~1\Kahlbaum\LOKALE~1\Temp\cc4DtSkm.s:120    .text:00000034 IWDG_Enable
C:\DOKUME~1\Kahlbaum\LOKALE~1\Temp\cc4DtSkm.s:135    .text:00000040 $d
C:\DOKUME~1\Kahlbaum\LOKALE~1\Temp\cc4DtSkm.s:138    .text:00000044 $t
C:\DOKUME~1\Kahlbaum\LOKALE~1\Temp\cc4DtSkm.s:143    .text:00000044 IWDG_GetFlagStatus
C:\DOKUME~1\Kahlbaum\LOKALE~1\Temp\cc4DtSkm.s:163    .text:00000054 $d
C:\DOKUME~1\Kahlbaum\LOKALE~1\Temp\cc4DtSkm.s:179    .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
