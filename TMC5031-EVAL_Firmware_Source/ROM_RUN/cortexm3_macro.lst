   1              	# 1 "lib//src/cortexm3_macro.S"
   1              	/*;******************** (C) COPYRIGHT 2007 STMicroelectronics ******************
   0              	
   0              	
   2              	;* File Name          : cortexm3_macro.s
   3              	;* Author             : MCD Application Team
   4              	;* Version            : V1.0
   5              	;* Date               : 10/08/2007
   6              	;* Description        : Instruction wrappers for special Cortex-M3 instructions.                   
   7              	;*******************************************************************************
   8              	; THE PRESENT SOFTWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
   9              	; WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
  10              	; AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
  11              	; INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
  12              	; CONTENT OF SUCH SOFTWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
  13              	; INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  14              	;******************************************************************************/
  15              	 .cpu cortex-m3
  16              	.fpu softvfp   
  17              	.syntax unified
  18              	.thumb
  19              	.text	
  20              	
  21              	  /*; Exported functions*/	    
  22              	  .globl __WFI
  23              	  .globl __WFE
  24              	  .globl __SEV
  25              	  .globl __ISB 
  26              	  .globl __DSB
  27              	  .globl __DMB
  28              	  .globl __SVC
  29              	  .globl __MRS_CONTROL
  30              	  .globl __MSR_CONTROL
  31              	  .globl __MRS_PSP
  32              	  .globl __MSR_PSP
  33              	  .globl __MRS_MSP
  34              	  .globl __MSR_MSP    
  35              	  .globl __SETPRIMASK
  36              	  .globl __RESETPRIMASK
  37              	  .globl __SETFAULTMASK
  38              	  .globl __RESETFAULTMASK
  39              	  .globl __BASEPRICONFIG
  40              	  .globl __GetBASEPRI
  41              	  .globl __REV_HalfWord
  42              	  .globl __REV_Word  
  43              	
  44              	/*;*****************************************************************************
  45              	; Function Name  : __WFI
  46              	; Description    : Assembler function for the WFI instruction.
  47              	; Input          : None
  48              	; Return         : None
  49              	;******************************************************************************/
  50              	.thumb_func
  51              	__WFI: 
  52              	 
  53 0000 30BF     	    WFI
  54 0002 7047     	    BX r14
  55              	
  56              	/*;*****************************************************************************
  57              	; Function Name  : __WFE
  58              	; Description    : Assembler function for the WFE instruction.
  59              	; Input          : None
  60              	; Return         : None
  61              	;******************************************************************************/
  62              	.thumb_func
  63              	__WFE:
  64              	
  65 0004 20BF     	    WFE
  66 0006 7047     	    BX r14
  67              	
  68              	/*;*****************************************************************************
  69              	; Function Name  : __SEV
  70              	; Description    : Assembler function for the SEV instruction.
  71              	; Input          : None
  72              	; Return         : None
  73              	;******************************************************************************/
  74              	.thumb_func
  75              	__SEV:
  76              	
  77 0008 40BF     	    SEV
  78 000a 7047     	    BX r14
  79              	
  80              	/*;*****************************************************************************
  81              	; Function Name  : __ISB
  82              	; Description    : Assembler function for the ISB instruction.
  83              	; Input          : None
  84              	; Return         : None
  85              	;******************************************************************************/
  86              	.thumb_func
  87              	__ISB:
  88              	
  89 000c BFF36F8F 	    ISB
  90 0010 7047     	    BX r14
  91              	
  92              	/*;*****************************************************************************
  93              	; Function Name  : __DSB
  94              	; Description    : Assembler function for the DSB instruction.
  95              	; Input          : None
  96              	; Return         : None
  97              	;******************************************************************************/
  98              	.thumb_func
  99              	__DSB:
 100              	
 101 0012 BFF34F8F 	    DSB
 102 0016 7047     	    BX r14
 103              	
 104              	/*;*****************************************************************************
 105              	; Function Name  : __DMB
 106              	; Description    : Assembler function for the DMB instruction.
 107              	; Input          : None
 108              	; Return         : None
 109              	;******************************************************************************/
 110              	.thumb_func
 111              	__DMB:
 112              	
 113 0018 BFF35F8F 	    DMB
 114 001c 7047     	    BX r14
 115              	
 116              	/*;*****************************************************************************
 117              	; Function Name  : __SVC
 118              	; Description    : Assembler function for the SVC instruction.
 119              	; Input          : None
 120              	; Return         : None
 121              	;******************************************************************************/
 122              	.thumb_func
 123              	__SVC:
 124              	
 125 001e 01DF     	    SVC 0x01
 126 0020 7047     	    BX r14
 127              	
 128              	/*;*****************************************************************************
 129              	; Function Name  : __MRS_CONTROL
 130              	; Description    : Assembler function for the MRS instruction.
 131              	; Input          : None
 132              	; Return         : - r4 : Cortex-M3 CONTROL register value.
 133              	;******************************************************************************/
 134              	.thumb_func
 135              	__MRS_CONTROL:
 136              	
 137 0022 EFF31480 	  MRS  r0,control
 138 0026 7047     	  BX r14
 139              	
 140              	/*;*****************************************************************************
 141              	; Function Name  : __MSR_CONTROL
 142              	; Description    : Assembler function for the MSR instruction.
 143              	; Input          : - R0 : Cortex-M3 CONTROL register new value.  
 144              	; Return         : None
 145              	;******************************************************************************/
 146              	.thumb_func
 147              	__MSR_CONTROL:
 148              	
 149 0028 80F31488 	  MSR control, r0
 150 002c BFF36F8F 	  ISB
 151 0030 7047     	  BX r14
 152              	/*;*****************************************************************************
 153              	; Function Name  : __MRS_PSP
 154              	; Description    : Assembler function for the MRS instruction.
 155              	; Input          : None
 156              	; Return         : - r0 : Process Stack value.
 157              	;******************************************************************************/
 158              	.thumb_func
 159              	__MRS_PSP:
 160              	
 161 0032 EFF30980 	  MRS r0, psp
 162 0036 7047     	  BX r14
 163              	
 164              	/*;*****************************************************************************
 165              	; Function Name  : __MSR_PSP
 166              	; Description    : Assembler function for the MSR instruction.
 167              	; Input          : - r0 : Process Stack new value.  
 168              	; Return         : None
 169              	;******************************************************************************/
 170              	.thumb_func
 171              	__MSR_PSP:
 172              	 
 173 0038 80F30988 	    MSR psp,  r0      /* set Process Stack value*/
 174 003c 7047     	    BX r14
 175              	
 176              	/*;*****************************************************************************
 177              	; Function Name  : __MRS_MSP
 178              	; Description    : Assembler function for the MRS instruction.
 179              	; Input          : None
 180              	; Return         : - r0 : Main Stack value.
 181              	;******************************************************************************/
 182              	.thumb_func
 183              	__MRS_MSP:
 184              	
 185 003e EFF30880 	  MRS r0, msp
 186 0042 7047     	  BX r14
 187              	
 188              	/*;*****************************************************************************
 189              	; Function Name  : __MSR_MSP
 190              	; Description    : Assembler function for the MSR instruction.
 191              	; Input          : - r0 : Main Stack new value.  
 192              	; Return         : None
 193              	;******************************************************************************/
 194              	.thumb_func
 195              	__MSR_MSP: 
 196              	 
 197 0044 80F30888 	    MSR msp, r0  /*; set Main Stack value*/
 198 0048 7047     	    BX r14
 199              	/*;*****************************************************************************
 200              	; Function Name  : __SETPRIMASK
 201              	; Description    : Assembler function to set the PRIMASK.
 202              	; Input          : None 
 203              	; Return         : None
 204              	;******************************************************************************/
 205              	.thumb_func
 206              	__SETPRIMASK:
 207              	
 208 004a 72B6     	  CPSID i
 209 004c 7047     	  BX r14
 210              	
 211              	/*;*****************************************************************************
 212              	; Function Name  : __RESETPRIMASK
 213              	; Description    : Assembler function to reset the PRIMASK.
 214              	; Input          : None 
 215              	; Return         : None
 216              	;******************************************************************************/
 217              	.thumb_func
 218              	__RESETPRIMASK:
 219              	
 220 004e 62B6     	  CPSIE i
 221 0050 7047     	  BX r14
 222              	
 223              	/*;*****************************************************************************
 224              	; Function Name  : __SETFAULTMASK
 225              	; Description    : Assembler function to set the FAULTMASK.
 226              	; Input          : None 
 227              	; Return         : None
 228              	;******************************************************************************/
 229              	.thumb_func
 230              	__SETFAULTMASK:
 231              	
 232 0052 71B6     	  CPSID f
 233 0054 7047     	  BX r14
 234              	
 235              	/*;*****************************************************************************
 236              	; Function Name  : __RESETFAULTMASK
 237              	; Description    : Assembler function to reset the FAULTMASK.
 238              	; Input          : None 
 239              	; Return         : None
 240              	;******************************************************************************/
 241              	.thumb_func
 242              	__RESETFAULTMASK:
 243              	
 244 0056 61B6     	  CPSIE f
 245 0058 7047     	  BX r14
 246              	
 247              	/*;*****************************************************************************
 248              	; Function Name  : __BASEPRICONFIG
 249              	; Description    : Assembler function to set the Base Priority.
 250              	; Input          : - r0 : Base Priority new value  
 251              	; Return         : None
 252              	;******************************************************************************/
 253              	.thumb_func
 254              	__BASEPRICONFIG:
 255              	
 256 005a 80F31188 	  MSR basepri, r0
 257 005e 7047     	  BX r14
 258              	
 259              	/*;*****************************************************************************
 260              	; Function Name  : __GetBASEPRI
 261              	; Description    : Assembler function to get the Base Priority value.
 262              	; Input          : None 
 263              	; Return         : - r0 : Base Priority value 
 264              	;******************************************************************************/
 265              	.thumb_func
 266              	__GetBASEPRI:
 267              	
 268 0060 EFF31280 	  MRS r0, basepri_max
 269 0064 7047     	  BX r14
 270              	/*;*****************************************************************************
 271              	; Function Name  : __REV_HalfWord
 272              	; Description    : Reverses the byte order in HalfWord(16-bit) input variable.
 273              	; Input          : - r0 : specifies the input variable
 274              	; Return         : - r0 : holds tve variable value after byte reversing.
 275              	;******************************************************************************/
 276              	.thumb_func
 277              	__REV_HalfWord: 
 278              	 
 279 0066 40BA     	  REV16 r0, r0
 280 0068 7047     	  BX r14
 281              	
 282              	/*;*****************************************************************************
 283              	; Function Name  : __REV_Word
 284              	; Description    : Reverses the byte order in Word(32-bit) input variable.
 285              	; Input          : - r0 : specifies the input variable
 286              	; Return         : - r0 : holds tve variable value after byte reversing.
 287              	;******************************************************************************/
 288              	.thumb_func
 289              	__REV_Word: 
 290              	 
 291 006a 00BA     	  REV r0, r0
 292 006c 7047     	  BX r14
 293              	  
 294              	.end  
DEFINED SYMBOLS
lib//src/cortexm3_macro.S:51     .text:00000000 __WFI
lib//src/cortexm3_macro.S:63     .text:00000004 __WFE
lib//src/cortexm3_macro.S:75     .text:00000008 __SEV
lib//src/cortexm3_macro.S:87     .text:0000000c __ISB
lib//src/cortexm3_macro.S:99     .text:00000012 __DSB
lib//src/cortexm3_macro.S:111    .text:00000018 __DMB
lib//src/cortexm3_macro.S:123    .text:0000001e __SVC
lib//src/cortexm3_macro.S:135    .text:00000022 __MRS_CONTROL
lib//src/cortexm3_macro.S:147    .text:00000028 __MSR_CONTROL
lib//src/cortexm3_macro.S:159    .text:00000032 __MRS_PSP
lib//src/cortexm3_macro.S:171    .text:00000038 __MSR_PSP
lib//src/cortexm3_macro.S:183    .text:0000003e __MRS_MSP
lib//src/cortexm3_macro.S:195    .text:00000044 __MSR_MSP
lib//src/cortexm3_macro.S:206    .text:0000004a __SETPRIMASK
lib//src/cortexm3_macro.S:218    .text:0000004e __RESETPRIMASK
lib//src/cortexm3_macro.S:230    .text:00000052 __SETFAULTMASK
lib//src/cortexm3_macro.S:242    .text:00000056 __RESETFAULTMASK
lib//src/cortexm3_macro.S:254    .text:0000005a __BASEPRICONFIG
lib//src/cortexm3_macro.S:266    .text:00000060 __GetBASEPRI
lib//src/cortexm3_macro.S:277    .text:00000066 __REV_HalfWord
lib//src/cortexm3_macro.S:289    .text:0000006a __REV_Word
lib//src/cortexm3_macro.S:53     .text:00000000 $t
                   .debug_aranges:0000000c $d

NO UNDEFINED SYMBOLS
