
servo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800100  00000ce6  00000d7a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ce6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  00800120  00800120  00000d9a  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  00000d9a  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000000af  00000000  00000000  00000dba  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000002c3  00000000  00000000  00000e69  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000143  00000000  00000000  0000112c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000388  00000000  00000000  0000126f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000c0  00000000  00000000  000015f8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000142  00000000  00000000  000016b8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  38:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__vector_14>
  3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e6 ee       	ldi	r30, 0xE6	; 230
  a0:	fc e0       	ldi	r31, 0x0C	; 12
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 32       	cpi	r26, 0x20	; 32
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	11 e0       	ldi	r17, 0x01	; 1
  b4:	a0 e2       	ldi	r26, 0x20	; 32
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ae 32       	cpi	r26, 0x2E	; 46
  be:	b1 07       	cpc	r27, r17
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	0e 94 f5 01 	call	0x3ea	; 0x3ea <main>
  c6:	0c 94 71 06 	jmp	0xce2	; 0xce2 <_exit>

000000ca <__bad_interrupt>:
  ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <Putchar>:
static int Putchar(char c, FILE *stream);
void tx0Char(char message);
void tx1Char(char message);

static int Putchar(char c, FILE *stream)
{
  ce:	df 93       	push	r29
  d0:	cf 93       	push	r28
  d2:	00 d0       	rcall	.+0      	; 0xd4 <Putchar+0x6>
  d4:	0f 92       	push	r0
  d6:	cd b7       	in	r28, 0x3d	; 61
  d8:	de b7       	in	r29, 0x3e	; 62
  da:	89 83       	std	Y+1, r24	; 0x01
  dc:	7b 83       	std	Y+3, r23	; 0x03
  de:	6a 83       	std	Y+2, r22	; 0x02
	tx0Char(c);
  e0:	89 81       	ldd	r24, Y+1	; 0x01
  e2:	0e 94 7e 00 	call	0xfc	; 0xfc <tx0Char>
    tx1Char(c);
  e6:	89 81       	ldd	r24, Y+1	; 0x01
  e8:	0e 94 98 00 	call	0x130	; 0x130 <tx1Char>
	return 0;
  ec:	80 e0       	ldi	r24, 0x00	; 0
  ee:	90 e0       	ldi	r25, 0x00	; 0
      
}
  f0:	0f 90       	pop	r0
  f2:	0f 90       	pop	r0
  f4:	0f 90       	pop	r0
  f6:	cf 91       	pop	r28
  f8:	df 91       	pop	r29
  fa:	08 95       	ret

000000fc <tx0Char>:

// UART0 을 이용한 출력
void tx0Char(char message)
{
  fc:	df 93       	push	r29
  fe:	cf 93       	push	r28
 100:	0f 92       	push	r0
 102:	cd b7       	in	r28, 0x3d	; 61
 104:	de b7       	in	r29, 0x3e	; 62
 106:	89 83       	std	Y+1, r24	; 0x01
	while (((UCSR0A>>UDRE0)&0x01) == 0) ;  // UDRE, data register empty        
 108:	eb e2       	ldi	r30, 0x2B	; 43
 10a:	f0 e0       	ldi	r31, 0x00	; 0
 10c:	80 81       	ld	r24, Z
 10e:	82 95       	swap	r24
 110:	86 95       	lsr	r24
 112:	87 70       	andi	r24, 0x07	; 7
 114:	88 2f       	mov	r24, r24
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	81 70       	andi	r24, 0x01	; 1
 11a:	90 70       	andi	r25, 0x00	; 0
 11c:	00 97       	sbiw	r24, 0x00	; 0
 11e:	a1 f3       	breq	.-24     	; 0x108 <tx0Char+0xc>
    UDR0 = message;
 120:	ec e2       	ldi	r30, 0x2C	; 44
 122:	f0 e0       	ldi	r31, 0x00	; 0
 124:	89 81       	ldd	r24, Y+1	; 0x01
 126:	80 83       	st	Z, r24
}
 128:	0f 90       	pop	r0
 12a:	cf 91       	pop	r28
 12c:	df 91       	pop	r29
 12e:	08 95       	ret

00000130 <tx1Char>:

// UART1 을 이용한 출력
void tx1Char(char message)
{
 130:	df 93       	push	r29
 132:	cf 93       	push	r28
 134:	0f 92       	push	r0
 136:	cd b7       	in	r28, 0x3d	; 61
 138:	de b7       	in	r29, 0x3e	; 62
 13a:	89 83       	std	Y+1, r24	; 0x01
	while (((UCSR1A>>UDRE1)&0x01) == 0) ;  // UDRE, data register empty        
 13c:	eb e9       	ldi	r30, 0x9B	; 155
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	80 81       	ld	r24, Z
 142:	82 95       	swap	r24
 144:	86 95       	lsr	r24
 146:	87 70       	andi	r24, 0x07	; 7
 148:	88 2f       	mov	r24, r24
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	81 70       	andi	r24, 0x01	; 1
 14e:	90 70       	andi	r25, 0x00	; 0
 150:	00 97       	sbiw	r24, 0x00	; 0
 152:	a1 f3       	breq	.-24     	; 0x13c <tx1Char+0xc>
    UDR1 = message;
 154:	ec e9       	ldi	r30, 0x9C	; 156
 156:	f0 e0       	ldi	r31, 0x00	; 0
 158:	89 81       	ldd	r24, Y+1	; 0x01
 15a:	80 83       	st	Z, r24
}
 15c:	0f 90       	pop	r0
 15e:	cf 91       	pop	r28
 160:	df 91       	pop	r29
 162:	08 95       	ret

00000164 <Getchar>:
// scanf 함수 사용시 추가할 것.
int Getchar(void)
{
 164:	df 93       	push	r29
 166:	cf 93       	push	r28
 168:	cd b7       	in	r28, 0x3d	; 61
 16a:	de b7       	in	r29, 0x3e	; 62
    while ((UCSR0A & 0x80) == 0);
 16c:	eb e2       	ldi	r30, 0x2B	; 43
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	80 81       	ld	r24, Z
 172:	88 23       	and	r24, r24
 174:	dc f7       	brge	.-10     	; 0x16c <Getchar+0x8>
    return UDR0;
 176:	ec e2       	ldi	r30, 0x2C	; 44
 178:	f0 e0       	ldi	r31, 0x00	; 0
 17a:	80 81       	ld	r24, Z
 17c:	88 2f       	mov	r24, r24
 17e:	90 e0       	ldi	r25, 0x00	; 0
}
 180:	cf 91       	pop	r28
 182:	df 91       	pop	r29
 184:	08 95       	ret

00000186 <port_init>:


void port_init(void)
{
 186:	df 93       	push	r29
 188:	cf 93       	push	r28
 18a:	cd b7       	in	r28, 0x3d	; 61
 18c:	de b7       	in	r29, 0x3e	; 62
 PORTA = 0x00;
 18e:	eb e3       	ldi	r30, 0x3B	; 59
 190:	f0 e0       	ldi	r31, 0x00	; 0
 192:	10 82       	st	Z, r1
 DDRA  = 0x03;
 194:	ea e3       	ldi	r30, 0x3A	; 58
 196:	f0 e0       	ldi	r31, 0x00	; 0
 198:	83 e0       	ldi	r24, 0x03	; 3
 19a:	80 83       	st	Z, r24
 PORTB = 0x00;
 19c:	e8 e3       	ldi	r30, 0x38	; 56
 19e:	f0 e0       	ldi	r31, 0x00	; 0
 1a0:	10 82       	st	Z, r1
 DDRB  = 0xFF;
 1a2:	e7 e3       	ldi	r30, 0x37	; 55
 1a4:	f0 e0       	ldi	r31, 0x00	; 0
 1a6:	8f ef       	ldi	r24, 0xFF	; 255
 1a8:	80 83       	st	Z, r24
 PORTC = 0x00; //m103 output only
 1aa:	e5 e3       	ldi	r30, 0x35	; 53
 1ac:	f0 e0       	ldi	r31, 0x00	; 0
 1ae:	10 82       	st	Z, r1
 DDRC  = 0x00;
 1b0:	e4 e3       	ldi	r30, 0x34	; 52
 1b2:	f0 e0       	ldi	r31, 0x00	; 0
 1b4:	10 82       	st	Z, r1
 PORTD = 0x00;
 1b6:	e2 e3       	ldi	r30, 0x32	; 50
 1b8:	f0 e0       	ldi	r31, 0x00	; 0
 1ba:	10 82       	st	Z, r1
 DDRD  = 0x00;
 1bc:	e1 e3       	ldi	r30, 0x31	; 49
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	10 82       	st	Z, r1
 PORTE = 0x00;
 1c2:	e3 e2       	ldi	r30, 0x23	; 35
 1c4:	f0 e0       	ldi	r31, 0x00	; 0
 1c6:	10 82       	st	Z, r1
 DDRE  = 0x01;
 1c8:	e2 e2       	ldi	r30, 0x22	; 34
 1ca:	f0 e0       	ldi	r31, 0x00	; 0
 1cc:	81 e0       	ldi	r24, 0x01	; 1
 1ce:	80 83       	st	Z, r24
 PORTF = 0x00;
 1d0:	e2 e6       	ldi	r30, 0x62	; 98
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	10 82       	st	Z, r1
 DDRF  = 0x00;
 1d6:	e1 e6       	ldi	r30, 0x61	; 97
 1d8:	f0 e0       	ldi	r31, 0x00	; 0
 1da:	10 82       	st	Z, r1
 PORTG = 0x00;
 1dc:	e5 e6       	ldi	r30, 0x65	; 101
 1de:	f0 e0       	ldi	r31, 0x00	; 0
 1e0:	10 82       	st	Z, r1
 DDRG  = 0x03;
 1e2:	e4 e6       	ldi	r30, 0x64	; 100
 1e4:	f0 e0       	ldi	r31, 0x00	; 0
 1e6:	83 e0       	ldi	r24, 0x03	; 3
 1e8:	80 83       	st	Z, r24
}
 1ea:	cf 91       	pop	r28
 1ec:	df 91       	pop	r29
 1ee:	08 95       	ret

000001f0 <timer1_init>:
//TIMER1 initialize - prescale:8
// WGM: 0) Normal, TOP=0xFFFF
// desired value: 1uSec
// actual value:  1.000uSec (0.0%)
void timer1_init(void)
{
 1f0:	df 93       	push	r29
 1f2:	cf 93       	push	r28
 1f4:	cd b7       	in	r28, 0x3d	; 61
 1f6:	de b7       	in	r29, 0x3e	; 62
 TCCR1B = 0x00; //stop
 1f8:	ee e4       	ldi	r30, 0x4E	; 78
 1fa:	f0 e0       	ldi	r31, 0x00	; 0
 1fc:	10 82       	st	Z, r1
 TCNT1H = 0xFF; //setup
 1fe:	ed e4       	ldi	r30, 0x4D	; 77
 200:	f0 e0       	ldi	r31, 0x00	; 0
 202:	8f ef       	ldi	r24, 0xFF	; 255
 204:	80 83       	st	Z, r24
 TCNT1L = 0xFE;
 206:	ec e4       	ldi	r30, 0x4C	; 76
 208:	f0 e0       	ldi	r31, 0x00	; 0
 20a:	8e ef       	ldi	r24, 0xFE	; 254
 20c:	80 83       	st	Z, r24
 OCR1AH = 0x00;
 20e:	eb e4       	ldi	r30, 0x4B	; 75
 210:	f0 e0       	ldi	r31, 0x00	; 0
 212:	10 82       	st	Z, r1
 OCR1AL = 0x02;
 214:	ea e4       	ldi	r30, 0x4A	; 74
 216:	f0 e0       	ldi	r31, 0x00	; 0
 218:	82 e0       	ldi	r24, 0x02	; 2
 21a:	80 83       	st	Z, r24
 OCR1BH = 0x00;
 21c:	e9 e4       	ldi	r30, 0x49	; 73
 21e:	f0 e0       	ldi	r31, 0x00	; 0
 220:	10 82       	st	Z, r1
 OCR1BL = 0x02;
 222:	e8 e4       	ldi	r30, 0x48	; 72
 224:	f0 e0       	ldi	r31, 0x00	; 0
 226:	82 e0       	ldi	r24, 0x02	; 2
 228:	80 83       	st	Z, r24
 OCR1CH = 0x00;
 22a:	e9 e7       	ldi	r30, 0x79	; 121
 22c:	f0 e0       	ldi	r31, 0x00	; 0
 22e:	10 82       	st	Z, r1
 OCR1CL = 0x02;
 230:	e8 e7       	ldi	r30, 0x78	; 120
 232:	f0 e0       	ldi	r31, 0x00	; 0
 234:	82 e0       	ldi	r24, 0x02	; 2
 236:	80 83       	st	Z, r24
 ICR1H  = 0x00;
 238:	e7 e4       	ldi	r30, 0x47	; 71
 23a:	f0 e0       	ldi	r31, 0x00	; 0
 23c:	10 82       	st	Z, r1
 ICR1L  = 0x02;
 23e:	e6 e4       	ldi	r30, 0x46	; 70
 240:	f0 e0       	ldi	r31, 0x00	; 0
 242:	82 e0       	ldi	r24, 0x02	; 2
 244:	80 83       	st	Z, r24
 TCCR1A = 0x00;
 246:	ef e4       	ldi	r30, 0x4F	; 79
 248:	f0 e0       	ldi	r31, 0x00	; 0
 24a:	10 82       	st	Z, r1
 TCCR1B = 0x02; //start Timer
 24c:	ee e4       	ldi	r30, 0x4E	; 78
 24e:	f0 e0       	ldi	r31, 0x00	; 0
 250:	82 e0       	ldi	r24, 0x02	; 2
 252:	80 83       	st	Z, r24
}
 254:	cf 91       	pop	r28
 256:	df 91       	pop	r29
 258:	08 95       	ret

0000025a <__vector_14>:

ISR(TIMER1_OVF_vect)
{
 25a:	1f 92       	push	r1
 25c:	0f 92       	push	r0
 25e:	0f b6       	in	r0, 0x3f	; 63
 260:	0f 92       	push	r0
 262:	00 90 5b 00 	lds	r0, 0x005B
 266:	0f 92       	push	r0
 268:	11 24       	eor	r1, r1
 26a:	2f 93       	push	r18
 26c:	3f 93       	push	r19
 26e:	8f 93       	push	r24
 270:	9f 93       	push	r25
 272:	af 93       	push	r26
 274:	bf 93       	push	r27
 276:	ef 93       	push	r30
 278:	ff 93       	push	r31
 27a:	df 93       	push	r29
 27c:	cf 93       	push	r28
 27e:	cd b7       	in	r28, 0x3d	; 61
 280:	de b7       	in	r29, 0x3e	; 62
 //TIMER1 has overflowed
 //PORTE^=1;
 PORTB^=1;
 282:	a8 e3       	ldi	r26, 0x38	; 56
 284:	b0 e0       	ldi	r27, 0x00	; 0
 286:	e8 e3       	ldi	r30, 0x38	; 56
 288:	f0 e0       	ldi	r31, 0x00	; 0
 28a:	90 81       	ld	r25, Z
 28c:	81 e0       	ldi	r24, 0x01	; 1
 28e:	89 27       	eor	r24, r25
 290:	8c 93       	st	X, r24
 if(PORTB&0x01)
 292:	e8 e3       	ldi	r30, 0x38	; 56
 294:	f0 e0       	ldi	r31, 0x00	; 0
 296:	80 81       	ld	r24, Z
 298:	88 2f       	mov	r24, r24
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	81 70       	andi	r24, 0x01	; 1
 29e:	90 70       	andi	r25, 0x00	; 0
 2a0:	88 23       	and	r24, r24
 2a2:	69 f0       	breq	.+26     	; 0x2be <__vector_14+0x64>
 {
 TCNT1=0xFA89-servo_val;
 2a4:	ec e4       	ldi	r30, 0x4C	; 76
 2a6:	f0 e0       	ldi	r31, 0x00	; 0
 2a8:	20 91 22 01 	lds	r18, 0x0122
 2ac:	30 91 23 01 	lds	r19, 0x0123
 2b0:	89 e8       	ldi	r24, 0x89	; 137
 2b2:	9a ef       	ldi	r25, 0xFA	; 250
 2b4:	82 1b       	sub	r24, r18
 2b6:	93 0b       	sbc	r25, r19
 2b8:	91 83       	std	Z+1, r25	; 0x01
 2ba:	80 83       	st	Z, r24
 2bc:	0a c0       	rjmp	.+20     	; 0x2d2 <__vector_14+0x78>
 }
 else
 {
 TCNT1=0x63c0+servo_val;
 2be:	ec e4       	ldi	r30, 0x4C	; 76
 2c0:	f0 e0       	ldi	r31, 0x00	; 0
 2c2:	80 91 22 01 	lds	r24, 0x0122
 2c6:	90 91 23 01 	lds	r25, 0x0123
 2ca:	80 54       	subi	r24, 0x40	; 64
 2cc:	9c 49       	sbci	r25, 0x9C	; 156
 2ce:	91 83       	std	Z+1, r25	; 0x01
 2d0:	80 83       	st	Z, r24
 }
}
 2d2:	cf 91       	pop	r28
 2d4:	df 91       	pop	r29
 2d6:	ff 91       	pop	r31
 2d8:	ef 91       	pop	r30
 2da:	bf 91       	pop	r27
 2dc:	af 91       	pop	r26
 2de:	9f 91       	pop	r25
 2e0:	8f 91       	pop	r24
 2e2:	3f 91       	pop	r19
 2e4:	2f 91       	pop	r18
 2e6:	0f 90       	pop	r0
 2e8:	00 92 5b 00 	sts	0x005B, r0
 2ec:	0f 90       	pop	r0
 2ee:	0f be       	out	0x3f, r0	; 63
 2f0:	0f 90       	pop	r0
 2f2:	1f 90       	pop	r1
 2f4:	18 95       	reti

000002f6 <uart0_init>:
// desired baud rate: 9600
// actual: baud rate:9615 (0.2%)
// char size: 8 bit
// parity: Disabled
void uart0_init(void)
{
 2f6:	df 93       	push	r29
 2f8:	cf 93       	push	r28
 2fa:	cd b7       	in	r28, 0x3d	; 61
 2fc:	de b7       	in	r29, 0x3e	; 62
 UCSR0B = 0x00; //disable while setting baud rate
 2fe:	ea e2       	ldi	r30, 0x2A	; 42
 300:	f0 e0       	ldi	r31, 0x00	; 0
 302:	10 82       	st	Z, r1
 UCSR0A = 0x00;
 304:	eb e2       	ldi	r30, 0x2B	; 43
 306:	f0 e0       	ldi	r31, 0x00	; 0
 308:	10 82       	st	Z, r1
 UCSR0C = 0x06;
 30a:	e5 e9       	ldi	r30, 0x95	; 149
 30c:	f0 e0       	ldi	r31, 0x00	; 0
 30e:	86 e0       	ldi	r24, 0x06	; 6
 310:	80 83       	st	Z, r24
 UBRR0L = 0x67; //set baud rate lo
 312:	e9 e2       	ldi	r30, 0x29	; 41
 314:	f0 e0       	ldi	r31, 0x00	; 0
 316:	87 e6       	ldi	r24, 0x67	; 103
 318:	80 83       	st	Z, r24
 UBRR0H = 0x00; //set baud rate hi
 31a:	e0 e9       	ldi	r30, 0x90	; 144
 31c:	f0 e0       	ldi	r31, 0x00	; 0
 31e:	10 82       	st	Z, r1
 UCSR0B = 0x08;
 320:	ea e2       	ldi	r30, 0x2A	; 42
 322:	f0 e0       	ldi	r31, 0x00	; 0
 324:	88 e0       	ldi	r24, 0x08	; 8
 326:	80 83       	st	Z, r24
}
 328:	cf 91       	pop	r28
 32a:	df 91       	pop	r29
 32c:	08 95       	ret

0000032e <init_devices>:

//call this routine to initialize all peripherals
void init_devices(void)
{
 32e:	df 93       	push	r29
 330:	cf 93       	push	r28
 332:	cd b7       	in	r28, 0x3d	; 61
 334:	de b7       	in	r29, 0x3e	; 62
 //stop errant interrupts until set up
 cli(); //disable all interrupts
 336:	f8 94       	cli
 XMCRA = 0x00; //external memory
 338:	ed e6       	ldi	r30, 0x6D	; 109
 33a:	f0 e0       	ldi	r31, 0x00	; 0
 33c:	10 82       	st	Z, r1
 XMCRB = 0x00; //external memory
 33e:	ec e6       	ldi	r30, 0x6C	; 108
 340:	f0 e0       	ldi	r31, 0x00	; 0
 342:	10 82       	st	Z, r1
 port_init();
 344:	0e 94 c3 00 	call	0x186	; 0x186 <port_init>
 timer1_init();
 348:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <timer1_init>
 uart0_init();
 34c:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <uart0_init>
 fdevopen(Putchar,0);
 350:	87 e6       	ldi	r24, 0x67	; 103
 352:	90 e0       	ldi	r25, 0x00	; 0
 354:	60 e0       	ldi	r22, 0x00	; 0
 356:	70 e0       	ldi	r23, 0x00	; 0
 358:	0e 94 45 02 	call	0x48a	; 0x48a <fdevopen>

 MCUCR = 0x00;
 35c:	e5 e5       	ldi	r30, 0x55	; 85
 35e:	f0 e0       	ldi	r31, 0x00	; 0
 360:	10 82       	st	Z, r1
 EICRA = 0x00; //extended ext ints
 362:	ea e6       	ldi	r30, 0x6A	; 106
 364:	f0 e0       	ldi	r31, 0x00	; 0
 366:	10 82       	st	Z, r1
 EICRB = 0x00; //extended ext ints
 368:	ea e5       	ldi	r30, 0x5A	; 90
 36a:	f0 e0       	ldi	r31, 0x00	; 0
 36c:	10 82       	st	Z, r1
 EIMSK = 0x00;
 36e:	e9 e5       	ldi	r30, 0x59	; 89
 370:	f0 e0       	ldi	r31, 0x00	; 0
 372:	10 82       	st	Z, r1
 TIMSK = 0x05; //timer interrupt sources
 374:	e7 e5       	ldi	r30, 0x57	; 87
 376:	f0 e0       	ldi	r31, 0x00	; 0
 378:	85 e0       	ldi	r24, 0x05	; 5
 37a:	80 83       	st	Z, r24
 ETIMSK = 0x00; //extended timer interrupt sources
 37c:	ed e7       	ldi	r30, 0x7D	; 125
 37e:	f0 e0       	ldi	r31, 0x00	; 0
 380:	10 82       	st	Z, r1
 
 sei(); //re-enable interrupts
 382:	78 94       	sei
}
 384:	cf 91       	pop	r28
 386:	df 91       	pop	r29
 388:	08 95       	ret

0000038a <delay>:

void delay(int n)
{
 38a:	df 93       	push	r29
 38c:	cf 93       	push	r28
 38e:	00 d0       	rcall	.+0      	; 0x390 <delay+0x6>
 390:	00 d0       	rcall	.+0      	; 0x392 <delay+0x8>
 392:	00 d0       	rcall	.+0      	; 0x394 <delay+0xa>
 394:	cd b7       	in	r28, 0x3d	; 61
 396:	de b7       	in	r29, 0x3e	; 62
 398:	9e 83       	std	Y+6, r25	; 0x06
 39a:	8d 83       	std	Y+5, r24	; 0x05
	volatile int i,j;

	for(i=0;i<n;i++)
 39c:	1a 82       	std	Y+2, r1	; 0x02
 39e:	19 82       	std	Y+1, r1	; 0x01
 3a0:	14 c0       	rjmp	.+40     	; 0x3ca <delay+0x40>
	{
    	for(j=1;j<100;j++);
 3a2:	81 e0       	ldi	r24, 0x01	; 1
 3a4:	90 e0       	ldi	r25, 0x00	; 0
 3a6:	9c 83       	std	Y+4, r25	; 0x04
 3a8:	8b 83       	std	Y+3, r24	; 0x03
 3aa:	05 c0       	rjmp	.+10     	; 0x3b6 <delay+0x2c>
 3ac:	8b 81       	ldd	r24, Y+3	; 0x03
 3ae:	9c 81       	ldd	r25, Y+4	; 0x04
 3b0:	01 96       	adiw	r24, 0x01	; 1
 3b2:	9c 83       	std	Y+4, r25	; 0x04
 3b4:	8b 83       	std	Y+3, r24	; 0x03
 3b6:	8b 81       	ldd	r24, Y+3	; 0x03
 3b8:	9c 81       	ldd	r25, Y+4	; 0x04
 3ba:	84 36       	cpi	r24, 0x64	; 100
 3bc:	91 05       	cpc	r25, r1
 3be:	b4 f3       	brlt	.-20     	; 0x3ac <delay+0x22>

void delay(int n)
{
	volatile int i,j;

	for(i=0;i<n;i++)
 3c0:	89 81       	ldd	r24, Y+1	; 0x01
 3c2:	9a 81       	ldd	r25, Y+2	; 0x02
 3c4:	01 96       	adiw	r24, 0x01	; 1
 3c6:	9a 83       	std	Y+2, r25	; 0x02
 3c8:	89 83       	std	Y+1, r24	; 0x01
 3ca:	29 81       	ldd	r18, Y+1	; 0x01
 3cc:	3a 81       	ldd	r19, Y+2	; 0x02
 3ce:	8d 81       	ldd	r24, Y+5	; 0x05
 3d0:	9e 81       	ldd	r25, Y+6	; 0x06
 3d2:	28 17       	cp	r18, r24
 3d4:	39 07       	cpc	r19, r25
 3d6:	2c f3       	brlt	.-54     	; 0x3a2 <delay+0x18>
	{
    	for(j=1;j<100;j++);
	}
}
 3d8:	26 96       	adiw	r28, 0x06	; 6
 3da:	0f b6       	in	r0, 0x3f	; 63
 3dc:	f8 94       	cli
 3de:	de bf       	out	0x3e, r29	; 62
 3e0:	0f be       	out	0x3f, r0	; 63
 3e2:	cd bf       	out	0x3d, r28	; 61
 3e4:	cf 91       	pop	r28
 3e6:	df 91       	pop	r29
 3e8:	08 95       	ret

000003ea <main>:

void main(void)
{
 3ea:	df 93       	push	r29
 3ec:	cf 93       	push	r28
 3ee:	00 d0       	rcall	.+0      	; 0x3f0 <main+0x6>
 3f0:	cd b7       	in	r28, 0x3d	; 61
 3f2:	de b7       	in	r29, 0x3e	; 62
	int val=1;
 3f4:	81 e0       	ldi	r24, 0x01	; 1
 3f6:	90 e0       	ldi	r25, 0x00	; 0
 3f8:	9a 83       	std	Y+2, r25	; 0x02
 3fa:	89 83       	std	Y+1, r24	; 0x01

    init_devices();
 3fc:	0e 94 97 01 	call	0x32e	; 0x32e <init_devices>
	
	printf("\n\rServo Motor test....\n\r");
 400:	00 d0       	rcall	.+0      	; 0x402 <main+0x18>
 402:	ed b7       	in	r30, 0x3d	; 61
 404:	fe b7       	in	r31, 0x3e	; 62
 406:	31 96       	adiw	r30, 0x01	; 1
 408:	80 e0       	ldi	r24, 0x00	; 0
 40a:	91 e0       	ldi	r25, 0x01	; 1
 40c:	91 83       	std	Z+1, r25	; 0x01
 40e:	80 83       	st	Z, r24
 410:	0e 94 91 02 	call	0x522	; 0x522 <printf>
 414:	0f 90       	pop	r0
 416:	0f 90       	pop	r0
    
	
    while(1)            
	{
	 if(PING&0x04)
 418:	e3 e6       	ldi	r30, 0x63	; 99
 41a:	f0 e0       	ldi	r31, 0x00	; 0
 41c:	80 81       	ld	r24, Z
 41e:	88 2f       	mov	r24, r24
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	84 70       	andi	r24, 0x04	; 4
 424:	90 70       	andi	r25, 0x00	; 0
 426:	00 97       	sbiw	r24, 0x00	; 0
 428:	31 f0       	breq	.+12     	; 0x436 <main+0x4c>
	 {
	  val++;
 42a:	89 81       	ldd	r24, Y+1	; 0x01
 42c:	9a 81       	ldd	r25, Y+2	; 0x02
 42e:	01 96       	adiw	r24, 0x01	; 1
 430:	9a 83       	std	Y+2, r25	; 0x02
 432:	89 83       	std	Y+1, r24	; 0x01
 434:	0e c0       	rjmp	.+28     	; 0x452 <main+0x68>
	 }
	 else if(PING&0x08)
 436:	e3 e6       	ldi	r30, 0x63	; 99
 438:	f0 e0       	ldi	r31, 0x00	; 0
 43a:	80 81       	ld	r24, Z
 43c:	88 2f       	mov	r24, r24
 43e:	90 e0       	ldi	r25, 0x00	; 0
 440:	88 70       	andi	r24, 0x08	; 8
 442:	90 70       	andi	r25, 0x00	; 0
 444:	00 97       	sbiw	r24, 0x00	; 0
 446:	29 f0       	breq	.+10     	; 0x452 <main+0x68>
	 {
	  val--;
 448:	89 81       	ldd	r24, Y+1	; 0x01
 44a:	9a 81       	ldd	r25, Y+2	; 0x02
 44c:	01 97       	sbiw	r24, 0x01	; 1
 44e:	9a 83       	std	Y+2, r25	; 0x02
 450:	89 83       	std	Y+1, r24	; 0x01
	 }
	 if(val>=3500) val=3500;
 452:	89 81       	ldd	r24, Y+1	; 0x01
 454:	9a 81       	ldd	r25, Y+2	; 0x02
 456:	2d e0       	ldi	r18, 0x0D	; 13
 458:	8c 3a       	cpi	r24, 0xAC	; 172
 45a:	92 07       	cpc	r25, r18
 45c:	24 f0       	brlt	.+8      	; 0x466 <main+0x7c>
 45e:	8c ea       	ldi	r24, 0xAC	; 172
 460:	9d e0       	ldi	r25, 0x0D	; 13
 462:	9a 83       	std	Y+2, r25	; 0x02
 464:	89 83       	std	Y+1, r24	; 0x01
	 if(val<=0) val=0;
 466:	89 81       	ldd	r24, Y+1	; 0x01
 468:	9a 81       	ldd	r25, Y+2	; 0x02
 46a:	18 16       	cp	r1, r24
 46c:	19 06       	cpc	r1, r25
 46e:	14 f0       	brlt	.+4      	; 0x474 <main+0x8a>
 470:	1a 82       	std	Y+2, r1	; 0x02
 472:	19 82       	std	Y+1, r1	; 0x01
	 servo_val=val;
 474:	89 81       	ldd	r24, Y+1	; 0x01
 476:	9a 81       	ldd	r25, Y+2	; 0x02
 478:	90 93 23 01 	sts	0x0123, r25
 47c:	80 93 22 01 	sts	0x0122, r24
	 
	 delay(5);
 480:	85 e0       	ldi	r24, 0x05	; 5
 482:	90 e0       	ldi	r25, 0x00	; 0
 484:	0e 94 c5 01 	call	0x38a	; 0x38a <delay>
 488:	c7 cf       	rjmp	.-114    	; 0x418 <main+0x2e>

0000048a <fdevopen>:
 48a:	0f 93       	push	r16
 48c:	1f 93       	push	r17
 48e:	cf 93       	push	r28
 490:	df 93       	push	r29
 492:	8c 01       	movw	r16, r24
 494:	eb 01       	movw	r28, r22
 496:	00 97       	sbiw	r24, 0x00	; 0
 498:	31 f4       	brne	.+12     	; 0x4a6 <fdevopen+0x1c>
 49a:	61 15       	cp	r22, r1
 49c:	71 05       	cpc	r23, r1
 49e:	19 f4       	brne	.+6      	; 0x4a6 <fdevopen+0x1c>
 4a0:	20 e0       	ldi	r18, 0x00	; 0
 4a2:	30 e0       	ldi	r19, 0x00	; 0
 4a4:	38 c0       	rjmp	.+112    	; 0x516 <fdevopen+0x8c>
 4a6:	81 e0       	ldi	r24, 0x01	; 1
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	6e e0       	ldi	r22, 0x0E	; 14
 4ac:	70 e0       	ldi	r23, 0x00	; 0
 4ae:	0e 94 a9 04 	call	0x952	; 0x952 <calloc>
 4b2:	fc 01       	movw	r30, r24
 4b4:	9c 01       	movw	r18, r24
 4b6:	00 97       	sbiw	r24, 0x00	; 0
 4b8:	71 f1       	breq	.+92     	; 0x516 <fdevopen+0x8c>
 4ba:	80 e8       	ldi	r24, 0x80	; 128
 4bc:	83 83       	std	Z+3, r24	; 0x03
 4be:	20 97       	sbiw	r28, 0x00	; 0
 4c0:	71 f0       	breq	.+28     	; 0x4de <fdevopen+0x54>
 4c2:	d3 87       	std	Z+11, r29	; 0x0b
 4c4:	c2 87       	std	Z+10, r28	; 0x0a
 4c6:	81 e8       	ldi	r24, 0x81	; 129
 4c8:	83 83       	std	Z+3, r24	; 0x03
 4ca:	80 91 24 01 	lds	r24, 0x0124
 4ce:	90 91 25 01 	lds	r25, 0x0125
 4d2:	89 2b       	or	r24, r25
 4d4:	21 f4       	brne	.+8      	; 0x4de <fdevopen+0x54>
 4d6:	f0 93 25 01 	sts	0x0125, r31
 4da:	e0 93 24 01 	sts	0x0124, r30
 4de:	01 15       	cp	r16, r1
 4e0:	11 05       	cpc	r17, r1
 4e2:	c9 f0       	breq	.+50     	; 0x516 <fdevopen+0x8c>
 4e4:	11 87       	std	Z+9, r17	; 0x09
 4e6:	00 87       	std	Z+8, r16	; 0x08
 4e8:	83 81       	ldd	r24, Z+3	; 0x03
 4ea:	82 60       	ori	r24, 0x02	; 2
 4ec:	83 83       	std	Z+3, r24	; 0x03
 4ee:	80 91 26 01 	lds	r24, 0x0126
 4f2:	90 91 27 01 	lds	r25, 0x0127
 4f6:	89 2b       	or	r24, r25
 4f8:	71 f4       	brne	.+28     	; 0x516 <fdevopen+0x8c>
 4fa:	f0 93 27 01 	sts	0x0127, r31
 4fe:	e0 93 26 01 	sts	0x0126, r30
 502:	80 91 28 01 	lds	r24, 0x0128
 506:	90 91 29 01 	lds	r25, 0x0129
 50a:	89 2b       	or	r24, r25
 50c:	21 f4       	brne	.+8      	; 0x516 <fdevopen+0x8c>
 50e:	f0 93 29 01 	sts	0x0129, r31
 512:	e0 93 28 01 	sts	0x0128, r30
 516:	c9 01       	movw	r24, r18
 518:	df 91       	pop	r29
 51a:	cf 91       	pop	r28
 51c:	1f 91       	pop	r17
 51e:	0f 91       	pop	r16
 520:	08 95       	ret

00000522 <printf>:
 522:	df 93       	push	r29
 524:	cf 93       	push	r28
 526:	cd b7       	in	r28, 0x3d	; 61
 528:	de b7       	in	r29, 0x3e	; 62
 52a:	fe 01       	movw	r30, r28
 52c:	35 96       	adiw	r30, 0x05	; 5
 52e:	61 91       	ld	r22, Z+
 530:	71 91       	ld	r23, Z+
 532:	80 91 26 01 	lds	r24, 0x0126
 536:	90 91 27 01 	lds	r25, 0x0127
 53a:	af 01       	movw	r20, r30
 53c:	0e 94 a3 02 	call	0x546	; 0x546 <vfprintf>
 540:	cf 91       	pop	r28
 542:	df 91       	pop	r29
 544:	08 95       	ret

00000546 <vfprintf>:
 546:	2f 92       	push	r2
 548:	3f 92       	push	r3
 54a:	4f 92       	push	r4
 54c:	5f 92       	push	r5
 54e:	6f 92       	push	r6
 550:	7f 92       	push	r7
 552:	8f 92       	push	r8
 554:	9f 92       	push	r9
 556:	af 92       	push	r10
 558:	bf 92       	push	r11
 55a:	cf 92       	push	r12
 55c:	df 92       	push	r13
 55e:	ef 92       	push	r14
 560:	ff 92       	push	r15
 562:	0f 93       	push	r16
 564:	1f 93       	push	r17
 566:	df 93       	push	r29
 568:	cf 93       	push	r28
 56a:	cd b7       	in	r28, 0x3d	; 61
 56c:	de b7       	in	r29, 0x3e	; 62
 56e:	2b 97       	sbiw	r28, 0x0b	; 11
 570:	0f b6       	in	r0, 0x3f	; 63
 572:	f8 94       	cli
 574:	de bf       	out	0x3e, r29	; 62
 576:	0f be       	out	0x3f, r0	; 63
 578:	cd bf       	out	0x3d, r28	; 61
 57a:	3c 01       	movw	r6, r24
 57c:	2b 01       	movw	r4, r22
 57e:	5a 01       	movw	r10, r20
 580:	fc 01       	movw	r30, r24
 582:	17 82       	std	Z+7, r1	; 0x07
 584:	16 82       	std	Z+6, r1	; 0x06
 586:	83 81       	ldd	r24, Z+3	; 0x03
 588:	81 fd       	sbrc	r24, 1
 58a:	03 c0       	rjmp	.+6      	; 0x592 <vfprintf+0x4c>
 58c:	6f ef       	ldi	r22, 0xFF	; 255
 58e:	7f ef       	ldi	r23, 0xFF	; 255
 590:	c6 c1       	rjmp	.+908    	; 0x91e <vfprintf+0x3d8>
 592:	9a e0       	ldi	r25, 0x0A	; 10
 594:	89 2e       	mov	r8, r25
 596:	1e 01       	movw	r2, r28
 598:	08 94       	sec
 59a:	21 1c       	adc	r2, r1
 59c:	31 1c       	adc	r3, r1
 59e:	f3 01       	movw	r30, r6
 5a0:	23 81       	ldd	r18, Z+3	; 0x03
 5a2:	f2 01       	movw	r30, r4
 5a4:	23 fd       	sbrc	r18, 3
 5a6:	85 91       	lpm	r24, Z+
 5a8:	23 ff       	sbrs	r18, 3
 5aa:	81 91       	ld	r24, Z+
 5ac:	2f 01       	movw	r4, r30
 5ae:	88 23       	and	r24, r24
 5b0:	09 f4       	brne	.+2      	; 0x5b4 <vfprintf+0x6e>
 5b2:	b2 c1       	rjmp	.+868    	; 0x918 <vfprintf+0x3d2>
 5b4:	85 32       	cpi	r24, 0x25	; 37
 5b6:	39 f4       	brne	.+14     	; 0x5c6 <vfprintf+0x80>
 5b8:	23 fd       	sbrc	r18, 3
 5ba:	85 91       	lpm	r24, Z+
 5bc:	23 ff       	sbrs	r18, 3
 5be:	81 91       	ld	r24, Z+
 5c0:	2f 01       	movw	r4, r30
 5c2:	85 32       	cpi	r24, 0x25	; 37
 5c4:	29 f4       	brne	.+10     	; 0x5d0 <vfprintf+0x8a>
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	b3 01       	movw	r22, r6
 5ca:	0e 94 e7 05 	call	0xbce	; 0xbce <fputc>
 5ce:	e7 cf       	rjmp	.-50     	; 0x59e <vfprintf+0x58>
 5d0:	98 2f       	mov	r25, r24
 5d2:	ff 24       	eor	r15, r15
 5d4:	ee 24       	eor	r14, r14
 5d6:	99 24       	eor	r9, r9
 5d8:	ff e1       	ldi	r31, 0x1F	; 31
 5da:	ff 15       	cp	r31, r15
 5dc:	d0 f0       	brcs	.+52     	; 0x612 <vfprintf+0xcc>
 5de:	9b 32       	cpi	r25, 0x2B	; 43
 5e0:	69 f0       	breq	.+26     	; 0x5fc <vfprintf+0xb6>
 5e2:	9c 32       	cpi	r25, 0x2C	; 44
 5e4:	28 f4       	brcc	.+10     	; 0x5f0 <vfprintf+0xaa>
 5e6:	90 32       	cpi	r25, 0x20	; 32
 5e8:	59 f0       	breq	.+22     	; 0x600 <vfprintf+0xba>
 5ea:	93 32       	cpi	r25, 0x23	; 35
 5ec:	91 f4       	brne	.+36     	; 0x612 <vfprintf+0xcc>
 5ee:	0e c0       	rjmp	.+28     	; 0x60c <vfprintf+0xc6>
 5f0:	9d 32       	cpi	r25, 0x2D	; 45
 5f2:	49 f0       	breq	.+18     	; 0x606 <vfprintf+0xc0>
 5f4:	90 33       	cpi	r25, 0x30	; 48
 5f6:	69 f4       	brne	.+26     	; 0x612 <vfprintf+0xcc>
 5f8:	41 e0       	ldi	r20, 0x01	; 1
 5fa:	24 c0       	rjmp	.+72     	; 0x644 <vfprintf+0xfe>
 5fc:	52 e0       	ldi	r21, 0x02	; 2
 5fe:	f5 2a       	or	r15, r21
 600:	84 e0       	ldi	r24, 0x04	; 4
 602:	f8 2a       	or	r15, r24
 604:	28 c0       	rjmp	.+80     	; 0x656 <vfprintf+0x110>
 606:	98 e0       	ldi	r25, 0x08	; 8
 608:	f9 2a       	or	r15, r25
 60a:	25 c0       	rjmp	.+74     	; 0x656 <vfprintf+0x110>
 60c:	e0 e1       	ldi	r30, 0x10	; 16
 60e:	fe 2a       	or	r15, r30
 610:	22 c0       	rjmp	.+68     	; 0x656 <vfprintf+0x110>
 612:	f7 fc       	sbrc	r15, 7
 614:	29 c0       	rjmp	.+82     	; 0x668 <vfprintf+0x122>
 616:	89 2f       	mov	r24, r25
 618:	80 53       	subi	r24, 0x30	; 48
 61a:	8a 30       	cpi	r24, 0x0A	; 10
 61c:	70 f4       	brcc	.+28     	; 0x63a <vfprintf+0xf4>
 61e:	f6 fe       	sbrs	r15, 6
 620:	05 c0       	rjmp	.+10     	; 0x62c <vfprintf+0xe6>
 622:	98 9c       	mul	r9, r8
 624:	90 2c       	mov	r9, r0
 626:	11 24       	eor	r1, r1
 628:	98 0e       	add	r9, r24
 62a:	15 c0       	rjmp	.+42     	; 0x656 <vfprintf+0x110>
 62c:	e8 9c       	mul	r14, r8
 62e:	e0 2c       	mov	r14, r0
 630:	11 24       	eor	r1, r1
 632:	e8 0e       	add	r14, r24
 634:	f0 e2       	ldi	r31, 0x20	; 32
 636:	ff 2a       	or	r15, r31
 638:	0e c0       	rjmp	.+28     	; 0x656 <vfprintf+0x110>
 63a:	9e 32       	cpi	r25, 0x2E	; 46
 63c:	29 f4       	brne	.+10     	; 0x648 <vfprintf+0x102>
 63e:	f6 fc       	sbrc	r15, 6
 640:	6b c1       	rjmp	.+726    	; 0x918 <vfprintf+0x3d2>
 642:	40 e4       	ldi	r20, 0x40	; 64
 644:	f4 2a       	or	r15, r20
 646:	07 c0       	rjmp	.+14     	; 0x656 <vfprintf+0x110>
 648:	9c 36       	cpi	r25, 0x6C	; 108
 64a:	19 f4       	brne	.+6      	; 0x652 <vfprintf+0x10c>
 64c:	50 e8       	ldi	r21, 0x80	; 128
 64e:	f5 2a       	or	r15, r21
 650:	02 c0       	rjmp	.+4      	; 0x656 <vfprintf+0x110>
 652:	98 36       	cpi	r25, 0x68	; 104
 654:	49 f4       	brne	.+18     	; 0x668 <vfprintf+0x122>
 656:	f2 01       	movw	r30, r4
 658:	23 fd       	sbrc	r18, 3
 65a:	95 91       	lpm	r25, Z+
 65c:	23 ff       	sbrs	r18, 3
 65e:	91 91       	ld	r25, Z+
 660:	2f 01       	movw	r4, r30
 662:	99 23       	and	r25, r25
 664:	09 f0       	breq	.+2      	; 0x668 <vfprintf+0x122>
 666:	b8 cf       	rjmp	.-144    	; 0x5d8 <vfprintf+0x92>
 668:	89 2f       	mov	r24, r25
 66a:	85 54       	subi	r24, 0x45	; 69
 66c:	83 30       	cpi	r24, 0x03	; 3
 66e:	18 f0       	brcs	.+6      	; 0x676 <vfprintf+0x130>
 670:	80 52       	subi	r24, 0x20	; 32
 672:	83 30       	cpi	r24, 0x03	; 3
 674:	38 f4       	brcc	.+14     	; 0x684 <vfprintf+0x13e>
 676:	44 e0       	ldi	r20, 0x04	; 4
 678:	50 e0       	ldi	r21, 0x00	; 0
 67a:	a4 0e       	add	r10, r20
 67c:	b5 1e       	adc	r11, r21
 67e:	5f e3       	ldi	r21, 0x3F	; 63
 680:	59 83       	std	Y+1, r21	; 0x01
 682:	0f c0       	rjmp	.+30     	; 0x6a2 <vfprintf+0x15c>
 684:	93 36       	cpi	r25, 0x63	; 99
 686:	31 f0       	breq	.+12     	; 0x694 <vfprintf+0x14e>
 688:	93 37       	cpi	r25, 0x73	; 115
 68a:	79 f0       	breq	.+30     	; 0x6aa <vfprintf+0x164>
 68c:	93 35       	cpi	r25, 0x53	; 83
 68e:	09 f0       	breq	.+2      	; 0x692 <vfprintf+0x14c>
 690:	56 c0       	rjmp	.+172    	; 0x73e <vfprintf+0x1f8>
 692:	20 c0       	rjmp	.+64     	; 0x6d4 <vfprintf+0x18e>
 694:	f5 01       	movw	r30, r10
 696:	80 81       	ld	r24, Z
 698:	89 83       	std	Y+1, r24	; 0x01
 69a:	42 e0       	ldi	r20, 0x02	; 2
 69c:	50 e0       	ldi	r21, 0x00	; 0
 69e:	a4 0e       	add	r10, r20
 6a0:	b5 1e       	adc	r11, r21
 6a2:	61 01       	movw	r12, r2
 6a4:	01 e0       	ldi	r16, 0x01	; 1
 6a6:	10 e0       	ldi	r17, 0x00	; 0
 6a8:	12 c0       	rjmp	.+36     	; 0x6ce <vfprintf+0x188>
 6aa:	f5 01       	movw	r30, r10
 6ac:	c0 80       	ld	r12, Z
 6ae:	d1 80       	ldd	r13, Z+1	; 0x01
 6b0:	f6 fc       	sbrc	r15, 6
 6b2:	03 c0       	rjmp	.+6      	; 0x6ba <vfprintf+0x174>
 6b4:	6f ef       	ldi	r22, 0xFF	; 255
 6b6:	7f ef       	ldi	r23, 0xFF	; 255
 6b8:	02 c0       	rjmp	.+4      	; 0x6be <vfprintf+0x178>
 6ba:	69 2d       	mov	r22, r9
 6bc:	70 e0       	ldi	r23, 0x00	; 0
 6be:	42 e0       	ldi	r20, 0x02	; 2
 6c0:	50 e0       	ldi	r21, 0x00	; 0
 6c2:	a4 0e       	add	r10, r20
 6c4:	b5 1e       	adc	r11, r21
 6c6:	c6 01       	movw	r24, r12
 6c8:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <strnlen>
 6cc:	8c 01       	movw	r16, r24
 6ce:	5f e7       	ldi	r21, 0x7F	; 127
 6d0:	f5 22       	and	r15, r21
 6d2:	14 c0       	rjmp	.+40     	; 0x6fc <vfprintf+0x1b6>
 6d4:	f5 01       	movw	r30, r10
 6d6:	c0 80       	ld	r12, Z
 6d8:	d1 80       	ldd	r13, Z+1	; 0x01
 6da:	f6 fc       	sbrc	r15, 6
 6dc:	03 c0       	rjmp	.+6      	; 0x6e4 <vfprintf+0x19e>
 6de:	6f ef       	ldi	r22, 0xFF	; 255
 6e0:	7f ef       	ldi	r23, 0xFF	; 255
 6e2:	02 c0       	rjmp	.+4      	; 0x6e8 <vfprintf+0x1a2>
 6e4:	69 2d       	mov	r22, r9
 6e6:	70 e0       	ldi	r23, 0x00	; 0
 6e8:	42 e0       	ldi	r20, 0x02	; 2
 6ea:	50 e0       	ldi	r21, 0x00	; 0
 6ec:	a4 0e       	add	r10, r20
 6ee:	b5 1e       	adc	r11, r21
 6f0:	c6 01       	movw	r24, r12
 6f2:	0e 94 ca 05 	call	0xb94	; 0xb94 <strnlen_P>
 6f6:	8c 01       	movw	r16, r24
 6f8:	50 e8       	ldi	r21, 0x80	; 128
 6fa:	f5 2a       	or	r15, r21
 6fc:	f3 fe       	sbrs	r15, 3
 6fe:	07 c0       	rjmp	.+14     	; 0x70e <vfprintf+0x1c8>
 700:	1a c0       	rjmp	.+52     	; 0x736 <vfprintf+0x1f0>
 702:	80 e2       	ldi	r24, 0x20	; 32
 704:	90 e0       	ldi	r25, 0x00	; 0
 706:	b3 01       	movw	r22, r6
 708:	0e 94 e7 05 	call	0xbce	; 0xbce <fputc>
 70c:	ea 94       	dec	r14
 70e:	8e 2d       	mov	r24, r14
 710:	90 e0       	ldi	r25, 0x00	; 0
 712:	08 17       	cp	r16, r24
 714:	19 07       	cpc	r17, r25
 716:	a8 f3       	brcs	.-22     	; 0x702 <vfprintf+0x1bc>
 718:	0e c0       	rjmp	.+28     	; 0x736 <vfprintf+0x1f0>
 71a:	f6 01       	movw	r30, r12
 71c:	f7 fc       	sbrc	r15, 7
 71e:	85 91       	lpm	r24, Z+
 720:	f7 fe       	sbrs	r15, 7
 722:	81 91       	ld	r24, Z+
 724:	6f 01       	movw	r12, r30
 726:	90 e0       	ldi	r25, 0x00	; 0
 728:	b3 01       	movw	r22, r6
 72a:	0e 94 e7 05 	call	0xbce	; 0xbce <fputc>
 72e:	e1 10       	cpse	r14, r1
 730:	ea 94       	dec	r14
 732:	01 50       	subi	r16, 0x01	; 1
 734:	10 40       	sbci	r17, 0x00	; 0
 736:	01 15       	cp	r16, r1
 738:	11 05       	cpc	r17, r1
 73a:	79 f7       	brne	.-34     	; 0x71a <vfprintf+0x1d4>
 73c:	ea c0       	rjmp	.+468    	; 0x912 <vfprintf+0x3cc>
 73e:	94 36       	cpi	r25, 0x64	; 100
 740:	11 f0       	breq	.+4      	; 0x746 <vfprintf+0x200>
 742:	99 36       	cpi	r25, 0x69	; 105
 744:	69 f5       	brne	.+90     	; 0x7a0 <vfprintf+0x25a>
 746:	f7 fe       	sbrs	r15, 7
 748:	08 c0       	rjmp	.+16     	; 0x75a <vfprintf+0x214>
 74a:	f5 01       	movw	r30, r10
 74c:	20 81       	ld	r18, Z
 74e:	31 81       	ldd	r19, Z+1	; 0x01
 750:	42 81       	ldd	r20, Z+2	; 0x02
 752:	53 81       	ldd	r21, Z+3	; 0x03
 754:	84 e0       	ldi	r24, 0x04	; 4
 756:	90 e0       	ldi	r25, 0x00	; 0
 758:	0a c0       	rjmp	.+20     	; 0x76e <vfprintf+0x228>
 75a:	f5 01       	movw	r30, r10
 75c:	80 81       	ld	r24, Z
 75e:	91 81       	ldd	r25, Z+1	; 0x01
 760:	9c 01       	movw	r18, r24
 762:	44 27       	eor	r20, r20
 764:	37 fd       	sbrc	r19, 7
 766:	40 95       	com	r20
 768:	54 2f       	mov	r21, r20
 76a:	82 e0       	ldi	r24, 0x02	; 2
 76c:	90 e0       	ldi	r25, 0x00	; 0
 76e:	a8 0e       	add	r10, r24
 770:	b9 1e       	adc	r11, r25
 772:	9f e6       	ldi	r25, 0x6F	; 111
 774:	f9 22       	and	r15, r25
 776:	57 ff       	sbrs	r21, 7
 778:	09 c0       	rjmp	.+18     	; 0x78c <vfprintf+0x246>
 77a:	50 95       	com	r21
 77c:	40 95       	com	r20
 77e:	30 95       	com	r19
 780:	21 95       	neg	r18
 782:	3f 4f       	sbci	r19, 0xFF	; 255
 784:	4f 4f       	sbci	r20, 0xFF	; 255
 786:	5f 4f       	sbci	r21, 0xFF	; 255
 788:	e0 e8       	ldi	r30, 0x80	; 128
 78a:	fe 2a       	or	r15, r30
 78c:	ca 01       	movw	r24, r20
 78e:	b9 01       	movw	r22, r18
 790:	a1 01       	movw	r20, r2
 792:	2a e0       	ldi	r18, 0x0A	; 10
 794:	30 e0       	ldi	r19, 0x00	; 0
 796:	0e 94 13 06 	call	0xc26	; 0xc26 <__ultoa_invert>
 79a:	d8 2e       	mov	r13, r24
 79c:	d2 18       	sub	r13, r2
 79e:	40 c0       	rjmp	.+128    	; 0x820 <vfprintf+0x2da>
 7a0:	95 37       	cpi	r25, 0x75	; 117
 7a2:	29 f4       	brne	.+10     	; 0x7ae <vfprintf+0x268>
 7a4:	1f 2d       	mov	r17, r15
 7a6:	1f 7e       	andi	r17, 0xEF	; 239
 7a8:	2a e0       	ldi	r18, 0x0A	; 10
 7aa:	30 e0       	ldi	r19, 0x00	; 0
 7ac:	1d c0       	rjmp	.+58     	; 0x7e8 <vfprintf+0x2a2>
 7ae:	1f 2d       	mov	r17, r15
 7b0:	19 7f       	andi	r17, 0xF9	; 249
 7b2:	9f 36       	cpi	r25, 0x6F	; 111
 7b4:	61 f0       	breq	.+24     	; 0x7ce <vfprintf+0x288>
 7b6:	90 37       	cpi	r25, 0x70	; 112
 7b8:	20 f4       	brcc	.+8      	; 0x7c2 <vfprintf+0x27c>
 7ba:	98 35       	cpi	r25, 0x58	; 88
 7bc:	09 f0       	breq	.+2      	; 0x7c0 <vfprintf+0x27a>
 7be:	ac c0       	rjmp	.+344    	; 0x918 <vfprintf+0x3d2>
 7c0:	0f c0       	rjmp	.+30     	; 0x7e0 <vfprintf+0x29a>
 7c2:	90 37       	cpi	r25, 0x70	; 112
 7c4:	39 f0       	breq	.+14     	; 0x7d4 <vfprintf+0x28e>
 7c6:	98 37       	cpi	r25, 0x78	; 120
 7c8:	09 f0       	breq	.+2      	; 0x7cc <vfprintf+0x286>
 7ca:	a6 c0       	rjmp	.+332    	; 0x918 <vfprintf+0x3d2>
 7cc:	04 c0       	rjmp	.+8      	; 0x7d6 <vfprintf+0x290>
 7ce:	28 e0       	ldi	r18, 0x08	; 8
 7d0:	30 e0       	ldi	r19, 0x00	; 0
 7d2:	0a c0       	rjmp	.+20     	; 0x7e8 <vfprintf+0x2a2>
 7d4:	10 61       	ori	r17, 0x10	; 16
 7d6:	14 fd       	sbrc	r17, 4
 7d8:	14 60       	ori	r17, 0x04	; 4
 7da:	20 e1       	ldi	r18, 0x10	; 16
 7dc:	30 e0       	ldi	r19, 0x00	; 0
 7de:	04 c0       	rjmp	.+8      	; 0x7e8 <vfprintf+0x2a2>
 7e0:	14 fd       	sbrc	r17, 4
 7e2:	16 60       	ori	r17, 0x06	; 6
 7e4:	20 e1       	ldi	r18, 0x10	; 16
 7e6:	32 e0       	ldi	r19, 0x02	; 2
 7e8:	17 ff       	sbrs	r17, 7
 7ea:	08 c0       	rjmp	.+16     	; 0x7fc <vfprintf+0x2b6>
 7ec:	f5 01       	movw	r30, r10
 7ee:	60 81       	ld	r22, Z
 7f0:	71 81       	ldd	r23, Z+1	; 0x01
 7f2:	82 81       	ldd	r24, Z+2	; 0x02
 7f4:	93 81       	ldd	r25, Z+3	; 0x03
 7f6:	44 e0       	ldi	r20, 0x04	; 4
 7f8:	50 e0       	ldi	r21, 0x00	; 0
 7fa:	08 c0       	rjmp	.+16     	; 0x80c <vfprintf+0x2c6>
 7fc:	f5 01       	movw	r30, r10
 7fe:	80 81       	ld	r24, Z
 800:	91 81       	ldd	r25, Z+1	; 0x01
 802:	bc 01       	movw	r22, r24
 804:	80 e0       	ldi	r24, 0x00	; 0
 806:	90 e0       	ldi	r25, 0x00	; 0
 808:	42 e0       	ldi	r20, 0x02	; 2
 80a:	50 e0       	ldi	r21, 0x00	; 0
 80c:	a4 0e       	add	r10, r20
 80e:	b5 1e       	adc	r11, r21
 810:	a1 01       	movw	r20, r2
 812:	0e 94 13 06 	call	0xc26	; 0xc26 <__ultoa_invert>
 816:	d8 2e       	mov	r13, r24
 818:	d2 18       	sub	r13, r2
 81a:	8f e7       	ldi	r24, 0x7F	; 127
 81c:	f8 2e       	mov	r15, r24
 81e:	f1 22       	and	r15, r17
 820:	f6 fe       	sbrs	r15, 6
 822:	0b c0       	rjmp	.+22     	; 0x83a <vfprintf+0x2f4>
 824:	5e ef       	ldi	r21, 0xFE	; 254
 826:	f5 22       	and	r15, r21
 828:	d9 14       	cp	r13, r9
 82a:	38 f4       	brcc	.+14     	; 0x83a <vfprintf+0x2f4>
 82c:	f4 fe       	sbrs	r15, 4
 82e:	07 c0       	rjmp	.+14     	; 0x83e <vfprintf+0x2f8>
 830:	f2 fc       	sbrc	r15, 2
 832:	05 c0       	rjmp	.+10     	; 0x83e <vfprintf+0x2f8>
 834:	8f ee       	ldi	r24, 0xEF	; 239
 836:	f8 22       	and	r15, r24
 838:	02 c0       	rjmp	.+4      	; 0x83e <vfprintf+0x2f8>
 83a:	1d 2d       	mov	r17, r13
 83c:	01 c0       	rjmp	.+2      	; 0x840 <vfprintf+0x2fa>
 83e:	19 2d       	mov	r17, r9
 840:	f4 fe       	sbrs	r15, 4
 842:	0d c0       	rjmp	.+26     	; 0x85e <vfprintf+0x318>
 844:	fe 01       	movw	r30, r28
 846:	ed 0d       	add	r30, r13
 848:	f1 1d       	adc	r31, r1
 84a:	80 81       	ld	r24, Z
 84c:	80 33       	cpi	r24, 0x30	; 48
 84e:	19 f4       	brne	.+6      	; 0x856 <vfprintf+0x310>
 850:	99 ee       	ldi	r25, 0xE9	; 233
 852:	f9 22       	and	r15, r25
 854:	08 c0       	rjmp	.+16     	; 0x866 <vfprintf+0x320>
 856:	1f 5f       	subi	r17, 0xFF	; 255
 858:	f2 fe       	sbrs	r15, 2
 85a:	05 c0       	rjmp	.+10     	; 0x866 <vfprintf+0x320>
 85c:	03 c0       	rjmp	.+6      	; 0x864 <vfprintf+0x31e>
 85e:	8f 2d       	mov	r24, r15
 860:	86 78       	andi	r24, 0x86	; 134
 862:	09 f0       	breq	.+2      	; 0x866 <vfprintf+0x320>
 864:	1f 5f       	subi	r17, 0xFF	; 255
 866:	0f 2d       	mov	r16, r15
 868:	f3 fc       	sbrc	r15, 3
 86a:	14 c0       	rjmp	.+40     	; 0x894 <vfprintf+0x34e>
 86c:	f0 fe       	sbrs	r15, 0
 86e:	0f c0       	rjmp	.+30     	; 0x88e <vfprintf+0x348>
 870:	1e 15       	cp	r17, r14
 872:	10 f0       	brcs	.+4      	; 0x878 <vfprintf+0x332>
 874:	9d 2c       	mov	r9, r13
 876:	0b c0       	rjmp	.+22     	; 0x88e <vfprintf+0x348>
 878:	9d 2c       	mov	r9, r13
 87a:	9e 0c       	add	r9, r14
 87c:	91 1a       	sub	r9, r17
 87e:	1e 2d       	mov	r17, r14
 880:	06 c0       	rjmp	.+12     	; 0x88e <vfprintf+0x348>
 882:	80 e2       	ldi	r24, 0x20	; 32
 884:	90 e0       	ldi	r25, 0x00	; 0
 886:	b3 01       	movw	r22, r6
 888:	0e 94 e7 05 	call	0xbce	; 0xbce <fputc>
 88c:	1f 5f       	subi	r17, 0xFF	; 255
 88e:	1e 15       	cp	r17, r14
 890:	c0 f3       	brcs	.-16     	; 0x882 <vfprintf+0x33c>
 892:	04 c0       	rjmp	.+8      	; 0x89c <vfprintf+0x356>
 894:	1e 15       	cp	r17, r14
 896:	10 f4       	brcc	.+4      	; 0x89c <vfprintf+0x356>
 898:	e1 1a       	sub	r14, r17
 89a:	01 c0       	rjmp	.+2      	; 0x89e <vfprintf+0x358>
 89c:	ee 24       	eor	r14, r14
 89e:	04 ff       	sbrs	r16, 4
 8a0:	0f c0       	rjmp	.+30     	; 0x8c0 <vfprintf+0x37a>
 8a2:	80 e3       	ldi	r24, 0x30	; 48
 8a4:	90 e0       	ldi	r25, 0x00	; 0
 8a6:	b3 01       	movw	r22, r6
 8a8:	0e 94 e7 05 	call	0xbce	; 0xbce <fputc>
 8ac:	02 ff       	sbrs	r16, 2
 8ae:	1d c0       	rjmp	.+58     	; 0x8ea <vfprintf+0x3a4>
 8b0:	01 fd       	sbrc	r16, 1
 8b2:	03 c0       	rjmp	.+6      	; 0x8ba <vfprintf+0x374>
 8b4:	88 e7       	ldi	r24, 0x78	; 120
 8b6:	90 e0       	ldi	r25, 0x00	; 0
 8b8:	0e c0       	rjmp	.+28     	; 0x8d6 <vfprintf+0x390>
 8ba:	88 e5       	ldi	r24, 0x58	; 88
 8bc:	90 e0       	ldi	r25, 0x00	; 0
 8be:	0b c0       	rjmp	.+22     	; 0x8d6 <vfprintf+0x390>
 8c0:	80 2f       	mov	r24, r16
 8c2:	86 78       	andi	r24, 0x86	; 134
 8c4:	91 f0       	breq	.+36     	; 0x8ea <vfprintf+0x3a4>
 8c6:	01 ff       	sbrs	r16, 1
 8c8:	02 c0       	rjmp	.+4      	; 0x8ce <vfprintf+0x388>
 8ca:	8b e2       	ldi	r24, 0x2B	; 43
 8cc:	01 c0       	rjmp	.+2      	; 0x8d0 <vfprintf+0x38a>
 8ce:	80 e2       	ldi	r24, 0x20	; 32
 8d0:	f7 fc       	sbrc	r15, 7
 8d2:	8d e2       	ldi	r24, 0x2D	; 45
 8d4:	90 e0       	ldi	r25, 0x00	; 0
 8d6:	b3 01       	movw	r22, r6
 8d8:	0e 94 e7 05 	call	0xbce	; 0xbce <fputc>
 8dc:	06 c0       	rjmp	.+12     	; 0x8ea <vfprintf+0x3a4>
 8de:	80 e3       	ldi	r24, 0x30	; 48
 8e0:	90 e0       	ldi	r25, 0x00	; 0
 8e2:	b3 01       	movw	r22, r6
 8e4:	0e 94 e7 05 	call	0xbce	; 0xbce <fputc>
 8e8:	9a 94       	dec	r9
 8ea:	d9 14       	cp	r13, r9
 8ec:	c0 f3       	brcs	.-16     	; 0x8de <vfprintf+0x398>
 8ee:	da 94       	dec	r13
 8f0:	f1 01       	movw	r30, r2
 8f2:	ed 0d       	add	r30, r13
 8f4:	f1 1d       	adc	r31, r1
 8f6:	80 81       	ld	r24, Z
 8f8:	90 e0       	ldi	r25, 0x00	; 0
 8fa:	b3 01       	movw	r22, r6
 8fc:	0e 94 e7 05 	call	0xbce	; 0xbce <fputc>
 900:	dd 20       	and	r13, r13
 902:	a9 f7       	brne	.-22     	; 0x8ee <vfprintf+0x3a8>
 904:	06 c0       	rjmp	.+12     	; 0x912 <vfprintf+0x3cc>
 906:	80 e2       	ldi	r24, 0x20	; 32
 908:	90 e0       	ldi	r25, 0x00	; 0
 90a:	b3 01       	movw	r22, r6
 90c:	0e 94 e7 05 	call	0xbce	; 0xbce <fputc>
 910:	ea 94       	dec	r14
 912:	ee 20       	and	r14, r14
 914:	c1 f7       	brne	.-16     	; 0x906 <vfprintf+0x3c0>
 916:	43 ce       	rjmp	.-890    	; 0x59e <vfprintf+0x58>
 918:	f3 01       	movw	r30, r6
 91a:	66 81       	ldd	r22, Z+6	; 0x06
 91c:	77 81       	ldd	r23, Z+7	; 0x07
 91e:	cb 01       	movw	r24, r22
 920:	2b 96       	adiw	r28, 0x0b	; 11
 922:	0f b6       	in	r0, 0x3f	; 63
 924:	f8 94       	cli
 926:	de bf       	out	0x3e, r29	; 62
 928:	0f be       	out	0x3f, r0	; 63
 92a:	cd bf       	out	0x3d, r28	; 61
 92c:	cf 91       	pop	r28
 92e:	df 91       	pop	r29
 930:	1f 91       	pop	r17
 932:	0f 91       	pop	r16
 934:	ff 90       	pop	r15
 936:	ef 90       	pop	r14
 938:	df 90       	pop	r13
 93a:	cf 90       	pop	r12
 93c:	bf 90       	pop	r11
 93e:	af 90       	pop	r10
 940:	9f 90       	pop	r9
 942:	8f 90       	pop	r8
 944:	7f 90       	pop	r7
 946:	6f 90       	pop	r6
 948:	5f 90       	pop	r5
 94a:	4f 90       	pop	r4
 94c:	3f 90       	pop	r3
 94e:	2f 90       	pop	r2
 950:	08 95       	ret

00000952 <calloc>:
 952:	0f 93       	push	r16
 954:	1f 93       	push	r17
 956:	cf 93       	push	r28
 958:	df 93       	push	r29
 95a:	68 9f       	mul	r22, r24
 95c:	80 01       	movw	r16, r0
 95e:	69 9f       	mul	r22, r25
 960:	10 0d       	add	r17, r0
 962:	78 9f       	mul	r23, r24
 964:	10 0d       	add	r17, r0
 966:	11 24       	eor	r1, r1
 968:	c8 01       	movw	r24, r16
 96a:	0e 94 c5 04 	call	0x98a	; 0x98a <malloc>
 96e:	ec 01       	movw	r28, r24
 970:	00 97       	sbiw	r24, 0x00	; 0
 972:	29 f0       	breq	.+10     	; 0x97e <calloc+0x2c>
 974:	60 e0       	ldi	r22, 0x00	; 0
 976:	70 e0       	ldi	r23, 0x00	; 0
 978:	a8 01       	movw	r20, r16
 97a:	0e 94 d5 05 	call	0xbaa	; 0xbaa <memset>
 97e:	ce 01       	movw	r24, r28
 980:	df 91       	pop	r29
 982:	cf 91       	pop	r28
 984:	1f 91       	pop	r17
 986:	0f 91       	pop	r16
 988:	08 95       	ret

0000098a <malloc>:
 98a:	cf 93       	push	r28
 98c:	df 93       	push	r29
 98e:	bc 01       	movw	r22, r24
 990:	82 30       	cpi	r24, 0x02	; 2
 992:	91 05       	cpc	r25, r1
 994:	10 f4       	brcc	.+4      	; 0x99a <malloc+0x10>
 996:	62 e0       	ldi	r22, 0x02	; 2
 998:	70 e0       	ldi	r23, 0x00	; 0
 99a:	a0 91 2c 01 	lds	r26, 0x012C
 99e:	b0 91 2d 01 	lds	r27, 0x012D
 9a2:	ed 01       	movw	r28, r26
 9a4:	e0 e0       	ldi	r30, 0x00	; 0
 9a6:	f0 e0       	ldi	r31, 0x00	; 0
 9a8:	40 e0       	ldi	r20, 0x00	; 0
 9aa:	50 e0       	ldi	r21, 0x00	; 0
 9ac:	21 c0       	rjmp	.+66     	; 0x9f0 <malloc+0x66>
 9ae:	88 81       	ld	r24, Y
 9b0:	99 81       	ldd	r25, Y+1	; 0x01
 9b2:	86 17       	cp	r24, r22
 9b4:	97 07       	cpc	r25, r23
 9b6:	69 f4       	brne	.+26     	; 0x9d2 <malloc+0x48>
 9b8:	8a 81       	ldd	r24, Y+2	; 0x02
 9ba:	9b 81       	ldd	r25, Y+3	; 0x03
 9bc:	30 97       	sbiw	r30, 0x00	; 0
 9be:	19 f0       	breq	.+6      	; 0x9c6 <malloc+0x3c>
 9c0:	93 83       	std	Z+3, r25	; 0x03
 9c2:	82 83       	std	Z+2, r24	; 0x02
 9c4:	04 c0       	rjmp	.+8      	; 0x9ce <malloc+0x44>
 9c6:	90 93 2d 01 	sts	0x012D, r25
 9ca:	80 93 2c 01 	sts	0x012C, r24
 9ce:	fe 01       	movw	r30, r28
 9d0:	34 c0       	rjmp	.+104    	; 0xa3a <malloc+0xb0>
 9d2:	68 17       	cp	r22, r24
 9d4:	79 07       	cpc	r23, r25
 9d6:	38 f4       	brcc	.+14     	; 0x9e6 <malloc+0x5c>
 9d8:	41 15       	cp	r20, r1
 9da:	51 05       	cpc	r21, r1
 9dc:	19 f0       	breq	.+6      	; 0x9e4 <malloc+0x5a>
 9de:	84 17       	cp	r24, r20
 9e0:	95 07       	cpc	r25, r21
 9e2:	08 f4       	brcc	.+2      	; 0x9e6 <malloc+0x5c>
 9e4:	ac 01       	movw	r20, r24
 9e6:	fe 01       	movw	r30, r28
 9e8:	8a 81       	ldd	r24, Y+2	; 0x02
 9ea:	9b 81       	ldd	r25, Y+3	; 0x03
 9ec:	9c 01       	movw	r18, r24
 9ee:	e9 01       	movw	r28, r18
 9f0:	20 97       	sbiw	r28, 0x00	; 0
 9f2:	e9 f6       	brne	.-70     	; 0x9ae <malloc+0x24>
 9f4:	41 15       	cp	r20, r1
 9f6:	51 05       	cpc	r21, r1
 9f8:	a9 f1       	breq	.+106    	; 0xa64 <malloc+0xda>
 9fa:	ca 01       	movw	r24, r20
 9fc:	86 1b       	sub	r24, r22
 9fe:	97 0b       	sbc	r25, r23
 a00:	04 97       	sbiw	r24, 0x04	; 4
 a02:	08 f4       	brcc	.+2      	; 0xa06 <malloc+0x7c>
 a04:	ba 01       	movw	r22, r20
 a06:	e0 e0       	ldi	r30, 0x00	; 0
 a08:	f0 e0       	ldi	r31, 0x00	; 0
 a0a:	2a c0       	rjmp	.+84     	; 0xa60 <malloc+0xd6>
 a0c:	8d 91       	ld	r24, X+
 a0e:	9c 91       	ld	r25, X
 a10:	11 97       	sbiw	r26, 0x01	; 1
 a12:	84 17       	cp	r24, r20
 a14:	95 07       	cpc	r25, r21
 a16:	f9 f4       	brne	.+62     	; 0xa56 <malloc+0xcc>
 a18:	64 17       	cp	r22, r20
 a1a:	75 07       	cpc	r23, r21
 a1c:	81 f4       	brne	.+32     	; 0xa3e <malloc+0xb4>
 a1e:	12 96       	adiw	r26, 0x02	; 2
 a20:	8d 91       	ld	r24, X+
 a22:	9c 91       	ld	r25, X
 a24:	13 97       	sbiw	r26, 0x03	; 3
 a26:	30 97       	sbiw	r30, 0x00	; 0
 a28:	19 f0       	breq	.+6      	; 0xa30 <malloc+0xa6>
 a2a:	93 83       	std	Z+3, r25	; 0x03
 a2c:	82 83       	std	Z+2, r24	; 0x02
 a2e:	04 c0       	rjmp	.+8      	; 0xa38 <malloc+0xae>
 a30:	90 93 2d 01 	sts	0x012D, r25
 a34:	80 93 2c 01 	sts	0x012C, r24
 a38:	fd 01       	movw	r30, r26
 a3a:	32 96       	adiw	r30, 0x02	; 2
 a3c:	4f c0       	rjmp	.+158    	; 0xadc <malloc+0x152>
 a3e:	ca 01       	movw	r24, r20
 a40:	86 1b       	sub	r24, r22
 a42:	97 0b       	sbc	r25, r23
 a44:	fd 01       	movw	r30, r26
 a46:	e8 0f       	add	r30, r24
 a48:	f9 1f       	adc	r31, r25
 a4a:	61 93       	st	Z+, r22
 a4c:	71 93       	st	Z+, r23
 a4e:	02 97       	sbiw	r24, 0x02	; 2
 a50:	8d 93       	st	X+, r24
 a52:	9c 93       	st	X, r25
 a54:	43 c0       	rjmp	.+134    	; 0xadc <malloc+0x152>
 a56:	fd 01       	movw	r30, r26
 a58:	82 81       	ldd	r24, Z+2	; 0x02
 a5a:	93 81       	ldd	r25, Z+3	; 0x03
 a5c:	9c 01       	movw	r18, r24
 a5e:	d9 01       	movw	r26, r18
 a60:	10 97       	sbiw	r26, 0x00	; 0
 a62:	a1 f6       	brne	.-88     	; 0xa0c <malloc+0x82>
 a64:	80 91 2a 01 	lds	r24, 0x012A
 a68:	90 91 2b 01 	lds	r25, 0x012B
 a6c:	89 2b       	or	r24, r25
 a6e:	41 f4       	brne	.+16     	; 0xa80 <malloc+0xf6>
 a70:	80 91 1b 01 	lds	r24, 0x011B
 a74:	90 91 1c 01 	lds	r25, 0x011C
 a78:	90 93 2b 01 	sts	0x012B, r25
 a7c:	80 93 2a 01 	sts	0x012A, r24
 a80:	40 91 1d 01 	lds	r20, 0x011D
 a84:	50 91 1e 01 	lds	r21, 0x011E
 a88:	41 15       	cp	r20, r1
 a8a:	51 05       	cpc	r21, r1
 a8c:	41 f4       	brne	.+16     	; 0xa9e <malloc+0x114>
 a8e:	4d b7       	in	r20, 0x3d	; 61
 a90:	5e b7       	in	r21, 0x3e	; 62
 a92:	80 91 19 01 	lds	r24, 0x0119
 a96:	90 91 1a 01 	lds	r25, 0x011A
 a9a:	48 1b       	sub	r20, r24
 a9c:	59 0b       	sbc	r21, r25
 a9e:	20 91 2a 01 	lds	r18, 0x012A
 aa2:	30 91 2b 01 	lds	r19, 0x012B
 aa6:	24 17       	cp	r18, r20
 aa8:	35 07       	cpc	r19, r21
 aaa:	b0 f4       	brcc	.+44     	; 0xad8 <malloc+0x14e>
 aac:	ca 01       	movw	r24, r20
 aae:	82 1b       	sub	r24, r18
 ab0:	93 0b       	sbc	r25, r19
 ab2:	86 17       	cp	r24, r22
 ab4:	97 07       	cpc	r25, r23
 ab6:	80 f0       	brcs	.+32     	; 0xad8 <malloc+0x14e>
 ab8:	ab 01       	movw	r20, r22
 aba:	4e 5f       	subi	r20, 0xFE	; 254
 abc:	5f 4f       	sbci	r21, 0xFF	; 255
 abe:	84 17       	cp	r24, r20
 ac0:	95 07       	cpc	r25, r21
 ac2:	50 f0       	brcs	.+20     	; 0xad8 <malloc+0x14e>
 ac4:	42 0f       	add	r20, r18
 ac6:	53 1f       	adc	r21, r19
 ac8:	50 93 2b 01 	sts	0x012B, r21
 acc:	40 93 2a 01 	sts	0x012A, r20
 ad0:	f9 01       	movw	r30, r18
 ad2:	61 93       	st	Z+, r22
 ad4:	71 93       	st	Z+, r23
 ad6:	02 c0       	rjmp	.+4      	; 0xadc <malloc+0x152>
 ad8:	e0 e0       	ldi	r30, 0x00	; 0
 ada:	f0 e0       	ldi	r31, 0x00	; 0
 adc:	cf 01       	movw	r24, r30
 ade:	df 91       	pop	r29
 ae0:	cf 91       	pop	r28
 ae2:	08 95       	ret

00000ae4 <free>:
 ae4:	cf 93       	push	r28
 ae6:	df 93       	push	r29
 ae8:	00 97       	sbiw	r24, 0x00	; 0
 aea:	09 f4       	brne	.+2      	; 0xaee <free+0xa>
 aec:	50 c0       	rjmp	.+160    	; 0xb8e <free+0xaa>
 aee:	ec 01       	movw	r28, r24
 af0:	22 97       	sbiw	r28, 0x02	; 2
 af2:	1b 82       	std	Y+3, r1	; 0x03
 af4:	1a 82       	std	Y+2, r1	; 0x02
 af6:	a0 91 2c 01 	lds	r26, 0x012C
 afa:	b0 91 2d 01 	lds	r27, 0x012D
 afe:	10 97       	sbiw	r26, 0x00	; 0
 b00:	09 f1       	breq	.+66     	; 0xb44 <free+0x60>
 b02:	40 e0       	ldi	r20, 0x00	; 0
 b04:	50 e0       	ldi	r21, 0x00	; 0
 b06:	ac 17       	cp	r26, r28
 b08:	bd 07       	cpc	r27, r29
 b0a:	08 f1       	brcs	.+66     	; 0xb4e <free+0x6a>
 b0c:	bb 83       	std	Y+3, r27	; 0x03
 b0e:	aa 83       	std	Y+2, r26	; 0x02
 b10:	fe 01       	movw	r30, r28
 b12:	21 91       	ld	r18, Z+
 b14:	31 91       	ld	r19, Z+
 b16:	e2 0f       	add	r30, r18
 b18:	f3 1f       	adc	r31, r19
 b1a:	ae 17       	cp	r26, r30
 b1c:	bf 07       	cpc	r27, r31
 b1e:	79 f4       	brne	.+30     	; 0xb3e <free+0x5a>
 b20:	8d 91       	ld	r24, X+
 b22:	9c 91       	ld	r25, X
 b24:	11 97       	sbiw	r26, 0x01	; 1
 b26:	28 0f       	add	r18, r24
 b28:	39 1f       	adc	r19, r25
 b2a:	2e 5f       	subi	r18, 0xFE	; 254
 b2c:	3f 4f       	sbci	r19, 0xFF	; 255
 b2e:	39 83       	std	Y+1, r19	; 0x01
 b30:	28 83       	st	Y, r18
 b32:	12 96       	adiw	r26, 0x02	; 2
 b34:	8d 91       	ld	r24, X+
 b36:	9c 91       	ld	r25, X
 b38:	13 97       	sbiw	r26, 0x03	; 3
 b3a:	9b 83       	std	Y+3, r25	; 0x03
 b3c:	8a 83       	std	Y+2, r24	; 0x02
 b3e:	41 15       	cp	r20, r1
 b40:	51 05       	cpc	r21, r1
 b42:	71 f4       	brne	.+28     	; 0xb60 <free+0x7c>
 b44:	d0 93 2d 01 	sts	0x012D, r29
 b48:	c0 93 2c 01 	sts	0x012C, r28
 b4c:	20 c0       	rjmp	.+64     	; 0xb8e <free+0xaa>
 b4e:	12 96       	adiw	r26, 0x02	; 2
 b50:	8d 91       	ld	r24, X+
 b52:	9c 91       	ld	r25, X
 b54:	13 97       	sbiw	r26, 0x03	; 3
 b56:	ad 01       	movw	r20, r26
 b58:	00 97       	sbiw	r24, 0x00	; 0
 b5a:	11 f0       	breq	.+4      	; 0xb60 <free+0x7c>
 b5c:	dc 01       	movw	r26, r24
 b5e:	d3 cf       	rjmp	.-90     	; 0xb06 <free+0x22>
 b60:	fa 01       	movw	r30, r20
 b62:	d3 83       	std	Z+3, r29	; 0x03
 b64:	c2 83       	std	Z+2, r28	; 0x02
 b66:	21 91       	ld	r18, Z+
 b68:	31 91       	ld	r19, Z+
 b6a:	e2 0f       	add	r30, r18
 b6c:	f3 1f       	adc	r31, r19
 b6e:	ce 17       	cp	r28, r30
 b70:	df 07       	cpc	r29, r31
 b72:	69 f4       	brne	.+26     	; 0xb8e <free+0xaa>
 b74:	88 81       	ld	r24, Y
 b76:	99 81       	ldd	r25, Y+1	; 0x01
 b78:	28 0f       	add	r18, r24
 b7a:	39 1f       	adc	r19, r25
 b7c:	2e 5f       	subi	r18, 0xFE	; 254
 b7e:	3f 4f       	sbci	r19, 0xFF	; 255
 b80:	fa 01       	movw	r30, r20
 b82:	31 83       	std	Z+1, r19	; 0x01
 b84:	20 83       	st	Z, r18
 b86:	8a 81       	ldd	r24, Y+2	; 0x02
 b88:	9b 81       	ldd	r25, Y+3	; 0x03
 b8a:	93 83       	std	Z+3, r25	; 0x03
 b8c:	82 83       	std	Z+2, r24	; 0x02
 b8e:	df 91       	pop	r29
 b90:	cf 91       	pop	r28
 b92:	08 95       	ret

00000b94 <strnlen_P>:
 b94:	fc 01       	movw	r30, r24
 b96:	05 90       	lpm	r0, Z+
 b98:	61 50       	subi	r22, 0x01	; 1
 b9a:	70 40       	sbci	r23, 0x00	; 0
 b9c:	01 10       	cpse	r0, r1
 b9e:	d8 f7       	brcc	.-10     	; 0xb96 <strnlen_P+0x2>
 ba0:	80 95       	com	r24
 ba2:	90 95       	com	r25
 ba4:	8e 0f       	add	r24, r30
 ba6:	9f 1f       	adc	r25, r31
 ba8:	08 95       	ret

00000baa <memset>:
 baa:	dc 01       	movw	r26, r24
 bac:	01 c0       	rjmp	.+2      	; 0xbb0 <memset+0x6>
 bae:	6d 93       	st	X+, r22
 bb0:	41 50       	subi	r20, 0x01	; 1
 bb2:	50 40       	sbci	r21, 0x00	; 0
 bb4:	e0 f7       	brcc	.-8      	; 0xbae <memset+0x4>
 bb6:	08 95       	ret

00000bb8 <strnlen>:
 bb8:	fc 01       	movw	r30, r24
 bba:	61 50       	subi	r22, 0x01	; 1
 bbc:	70 40       	sbci	r23, 0x00	; 0
 bbe:	01 90       	ld	r0, Z+
 bc0:	01 10       	cpse	r0, r1
 bc2:	d8 f7       	brcc	.-10     	; 0xbba <strnlen+0x2>
 bc4:	80 95       	com	r24
 bc6:	90 95       	com	r25
 bc8:	8e 0f       	add	r24, r30
 bca:	9f 1f       	adc	r25, r31
 bcc:	08 95       	ret

00000bce <fputc>:
 bce:	0f 93       	push	r16
 bd0:	1f 93       	push	r17
 bd2:	cf 93       	push	r28
 bd4:	df 93       	push	r29
 bd6:	8c 01       	movw	r16, r24
 bd8:	eb 01       	movw	r28, r22
 bda:	8b 81       	ldd	r24, Y+3	; 0x03
 bdc:	81 ff       	sbrs	r24, 1
 bde:	1b c0       	rjmp	.+54     	; 0xc16 <fputc+0x48>
 be0:	82 ff       	sbrs	r24, 2
 be2:	0d c0       	rjmp	.+26     	; 0xbfe <fputc+0x30>
 be4:	2e 81       	ldd	r18, Y+6	; 0x06
 be6:	3f 81       	ldd	r19, Y+7	; 0x07
 be8:	8c 81       	ldd	r24, Y+4	; 0x04
 bea:	9d 81       	ldd	r25, Y+5	; 0x05
 bec:	28 17       	cp	r18, r24
 bee:	39 07       	cpc	r19, r25
 bf0:	64 f4       	brge	.+24     	; 0xc0a <fputc+0x3c>
 bf2:	e8 81       	ld	r30, Y
 bf4:	f9 81       	ldd	r31, Y+1	; 0x01
 bf6:	01 93       	st	Z+, r16
 bf8:	f9 83       	std	Y+1, r31	; 0x01
 bfa:	e8 83       	st	Y, r30
 bfc:	06 c0       	rjmp	.+12     	; 0xc0a <fputc+0x3c>
 bfe:	e8 85       	ldd	r30, Y+8	; 0x08
 c00:	f9 85       	ldd	r31, Y+9	; 0x09
 c02:	80 2f       	mov	r24, r16
 c04:	09 95       	icall
 c06:	89 2b       	or	r24, r25
 c08:	31 f4       	brne	.+12     	; 0xc16 <fputc+0x48>
 c0a:	8e 81       	ldd	r24, Y+6	; 0x06
 c0c:	9f 81       	ldd	r25, Y+7	; 0x07
 c0e:	01 96       	adiw	r24, 0x01	; 1
 c10:	9f 83       	std	Y+7, r25	; 0x07
 c12:	8e 83       	std	Y+6, r24	; 0x06
 c14:	02 c0       	rjmp	.+4      	; 0xc1a <fputc+0x4c>
 c16:	0f ef       	ldi	r16, 0xFF	; 255
 c18:	1f ef       	ldi	r17, 0xFF	; 255
 c1a:	c8 01       	movw	r24, r16
 c1c:	df 91       	pop	r29
 c1e:	cf 91       	pop	r28
 c20:	1f 91       	pop	r17
 c22:	0f 91       	pop	r16
 c24:	08 95       	ret

00000c26 <__ultoa_invert>:
 c26:	fa 01       	movw	r30, r20
 c28:	aa 27       	eor	r26, r26
 c2a:	28 30       	cpi	r18, 0x08	; 8
 c2c:	51 f1       	breq	.+84     	; 0xc82 <__ultoa_invert+0x5c>
 c2e:	20 31       	cpi	r18, 0x10	; 16
 c30:	81 f1       	breq	.+96     	; 0xc92 <__ultoa_invert+0x6c>
 c32:	e8 94       	clt
 c34:	6f 93       	push	r22
 c36:	6e 7f       	andi	r22, 0xFE	; 254
 c38:	6e 5f       	subi	r22, 0xFE	; 254
 c3a:	7f 4f       	sbci	r23, 0xFF	; 255
 c3c:	8f 4f       	sbci	r24, 0xFF	; 255
 c3e:	9f 4f       	sbci	r25, 0xFF	; 255
 c40:	af 4f       	sbci	r26, 0xFF	; 255
 c42:	b1 e0       	ldi	r27, 0x01	; 1
 c44:	3e d0       	rcall	.+124    	; 0xcc2 <__ultoa_invert+0x9c>
 c46:	b4 e0       	ldi	r27, 0x04	; 4
 c48:	3c d0       	rcall	.+120    	; 0xcc2 <__ultoa_invert+0x9c>
 c4a:	67 0f       	add	r22, r23
 c4c:	78 1f       	adc	r23, r24
 c4e:	89 1f       	adc	r24, r25
 c50:	9a 1f       	adc	r25, r26
 c52:	a1 1d       	adc	r26, r1
 c54:	68 0f       	add	r22, r24
 c56:	79 1f       	adc	r23, r25
 c58:	8a 1f       	adc	r24, r26
 c5a:	91 1d       	adc	r25, r1
 c5c:	a1 1d       	adc	r26, r1
 c5e:	6a 0f       	add	r22, r26
 c60:	71 1d       	adc	r23, r1
 c62:	81 1d       	adc	r24, r1
 c64:	91 1d       	adc	r25, r1
 c66:	a1 1d       	adc	r26, r1
 c68:	20 d0       	rcall	.+64     	; 0xcaa <__ultoa_invert+0x84>
 c6a:	09 f4       	brne	.+2      	; 0xc6e <__ultoa_invert+0x48>
 c6c:	68 94       	set
 c6e:	3f 91       	pop	r19
 c70:	2a e0       	ldi	r18, 0x0A	; 10
 c72:	26 9f       	mul	r18, r22
 c74:	11 24       	eor	r1, r1
 c76:	30 19       	sub	r19, r0
 c78:	30 5d       	subi	r19, 0xD0	; 208
 c7a:	31 93       	st	Z+, r19
 c7c:	de f6       	brtc	.-74     	; 0xc34 <__ultoa_invert+0xe>
 c7e:	cf 01       	movw	r24, r30
 c80:	08 95       	ret
 c82:	46 2f       	mov	r20, r22
 c84:	47 70       	andi	r20, 0x07	; 7
 c86:	40 5d       	subi	r20, 0xD0	; 208
 c88:	41 93       	st	Z+, r20
 c8a:	b3 e0       	ldi	r27, 0x03	; 3
 c8c:	0f d0       	rcall	.+30     	; 0xcac <__ultoa_invert+0x86>
 c8e:	c9 f7       	brne	.-14     	; 0xc82 <__ultoa_invert+0x5c>
 c90:	f6 cf       	rjmp	.-20     	; 0xc7e <__ultoa_invert+0x58>
 c92:	46 2f       	mov	r20, r22
 c94:	4f 70       	andi	r20, 0x0F	; 15
 c96:	40 5d       	subi	r20, 0xD0	; 208
 c98:	4a 33       	cpi	r20, 0x3A	; 58
 c9a:	18 f0       	brcs	.+6      	; 0xca2 <__ultoa_invert+0x7c>
 c9c:	49 5d       	subi	r20, 0xD9	; 217
 c9e:	31 fd       	sbrc	r19, 1
 ca0:	40 52       	subi	r20, 0x20	; 32
 ca2:	41 93       	st	Z+, r20
 ca4:	02 d0       	rcall	.+4      	; 0xcaa <__ultoa_invert+0x84>
 ca6:	a9 f7       	brne	.-22     	; 0xc92 <__ultoa_invert+0x6c>
 ca8:	ea cf       	rjmp	.-44     	; 0xc7e <__ultoa_invert+0x58>
 caa:	b4 e0       	ldi	r27, 0x04	; 4
 cac:	a6 95       	lsr	r26
 cae:	97 95       	ror	r25
 cb0:	87 95       	ror	r24
 cb2:	77 95       	ror	r23
 cb4:	67 95       	ror	r22
 cb6:	ba 95       	dec	r27
 cb8:	c9 f7       	brne	.-14     	; 0xcac <__ultoa_invert+0x86>
 cba:	00 97       	sbiw	r24, 0x00	; 0
 cbc:	61 05       	cpc	r22, r1
 cbe:	71 05       	cpc	r23, r1
 cc0:	08 95       	ret
 cc2:	9b 01       	movw	r18, r22
 cc4:	ac 01       	movw	r20, r24
 cc6:	0a 2e       	mov	r0, r26
 cc8:	06 94       	lsr	r0
 cca:	57 95       	ror	r21
 ccc:	47 95       	ror	r20
 cce:	37 95       	ror	r19
 cd0:	27 95       	ror	r18
 cd2:	ba 95       	dec	r27
 cd4:	c9 f7       	brne	.-14     	; 0xcc8 <__ultoa_invert+0xa2>
 cd6:	62 0f       	add	r22, r18
 cd8:	73 1f       	adc	r23, r19
 cda:	84 1f       	adc	r24, r20
 cdc:	95 1f       	adc	r25, r21
 cde:	a0 1d       	adc	r26, r0
 ce0:	08 95       	ret

00000ce2 <_exit>:
 ce2:	f8 94       	cli

00000ce4 <__stop_program>:
 ce4:	ff cf       	rjmp	.-2      	; 0xce4 <__stop_program>
