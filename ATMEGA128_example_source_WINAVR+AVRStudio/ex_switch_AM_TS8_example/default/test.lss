
test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  0000073e  000007d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000073e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800106  00800106  000007d8  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  000007d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000005f  00000000  00000000  000007f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000239  00000000  00000000  00000857  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000143  00000000  00000000  00000a90  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000031f  00000000  00000000  00000bd3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000080  00000000  00000000  00000ef4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000f9  00000000  00000000  00000f74  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee e3       	ldi	r30, 0x3E	; 62
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a6 30       	cpi	r26, 0x06	; 6
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	11 e0       	ldi	r17, 0x01	; 1
  b4:	a6 e0       	ldi	r26, 0x06	; 6
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 31       	cpi	r26, 0x10	; 16
  be:	b1 07       	cpc	r27, r17
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	0e 94 3d 01 	call	0x27a	; 0x27a <main>
  c6:	0c 94 9d 03 	jmp	0x73a	; 0x73a <_exit>

000000ca <__bad_interrupt>:
  ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <port_init>:
#include <stdio.h>

void tx0Char(char message);

void port_init(void)
{
  ce:	df 93       	push	r29
  d0:	cf 93       	push	r28
  d2:	cd b7       	in	r28, 0x3d	; 61
  d4:	de b7       	in	r29, 0x3e	; 62
 PORTA = 0x00;
  d6:	eb e3       	ldi	r30, 0x3B	; 59
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	10 82       	st	Z, r1
 DDRA  = 0x00;
  dc:	ea e3       	ldi	r30, 0x3A	; 58
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	10 82       	st	Z, r1
 PORTB = 0x00;
  e2:	e8 e3       	ldi	r30, 0x38	; 56
  e4:	f0 e0       	ldi	r31, 0x00	; 0
  e6:	10 82       	st	Z, r1
 DDRB  = 0x00;
  e8:	e7 e3       	ldi	r30, 0x37	; 55
  ea:	f0 e0       	ldi	r31, 0x00	; 0
  ec:	10 82       	st	Z, r1
 PORTC = 0x00; //m103 output only
  ee:	e5 e3       	ldi	r30, 0x35	; 53
  f0:	f0 e0       	ldi	r31, 0x00	; 0
  f2:	10 82       	st	Z, r1
 DDRC  = 0x00;
  f4:	e4 e3       	ldi	r30, 0x34	; 52
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	10 82       	st	Z, r1
 PORTD = 0x00;
  fa:	e2 e3       	ldi	r30, 0x32	; 50
  fc:	f0 e0       	ldi	r31, 0x00	; 0
  fe:	10 82       	st	Z, r1
 DDRD  = 0x00;
 100:	e1 e3       	ldi	r30, 0x31	; 49
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	10 82       	st	Z, r1
 PORTE = 0x00;
 106:	e3 e2       	ldi	r30, 0x23	; 35
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	10 82       	st	Z, r1
 DDRE  = 0x00;
 10c:	e2 e2       	ldi	r30, 0x22	; 34
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	10 82       	st	Z, r1
 PORTF = 0x00;
 112:	e2 e6       	ldi	r30, 0x62	; 98
 114:	f0 e0       	ldi	r31, 0x00	; 0
 116:	10 82       	st	Z, r1
 DDRF  = 0x00;
 118:	e1 e6       	ldi	r30, 0x61	; 97
 11a:	f0 e0       	ldi	r31, 0x00	; 0
 11c:	10 82       	st	Z, r1
 PORTG = 0x00;
 11e:	e5 e6       	ldi	r30, 0x65	; 101
 120:	f0 e0       	ldi	r31, 0x00	; 0
 122:	10 82       	st	Z, r1
 DDRG  = 0xff;
 124:	e4 e6       	ldi	r30, 0x64	; 100
 126:	f0 e0       	ldi	r31, 0x00	; 0
 128:	8f ef       	ldi	r24, 0xFF	; 255
 12a:	80 83       	st	Z, r24
}
 12c:	cf 91       	pop	r28
 12e:	df 91       	pop	r29
 130:	08 95       	ret

00000132 <tx0Char>:

// UART0 을 이용한 출력
void tx0Char(char message)
{
 132:	df 93       	push	r29
 134:	cf 93       	push	r28
 136:	0f 92       	push	r0
 138:	cd b7       	in	r28, 0x3d	; 61
 13a:	de b7       	in	r29, 0x3e	; 62
 13c:	89 83       	std	Y+1, r24	; 0x01
	while (((UCSR0A>>UDRE0)&0x01) == 0) ;  // UDRE, data register empty        
 13e:	eb e2       	ldi	r30, 0x2B	; 43
 140:	f0 e0       	ldi	r31, 0x00	; 0
 142:	80 81       	ld	r24, Z
 144:	82 95       	swap	r24
 146:	86 95       	lsr	r24
 148:	87 70       	andi	r24, 0x07	; 7
 14a:	88 2f       	mov	r24, r24
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	81 70       	andi	r24, 0x01	; 1
 150:	90 70       	andi	r25, 0x00	; 0
 152:	00 97       	sbiw	r24, 0x00	; 0
 154:	a1 f3       	breq	.-24     	; 0x13e <tx0Char+0xc>
    UDR0 = message;
 156:	ec e2       	ldi	r30, 0x2C	; 44
 158:	f0 e0       	ldi	r31, 0x00	; 0
 15a:	89 81       	ldd	r24, Y+1	; 0x01
 15c:	80 83       	st	Z, r24
}
 15e:	0f 90       	pop	r0
 160:	cf 91       	pop	r28
 162:	df 91       	pop	r29
 164:	08 95       	ret

00000166 <Putchar>:


static int Putchar(char c, FILE *stream)
{
 166:	df 93       	push	r29
 168:	cf 93       	push	r28
 16a:	00 d0       	rcall	.+0      	; 0x16c <Putchar+0x6>
 16c:	0f 92       	push	r0
 16e:	cd b7       	in	r28, 0x3d	; 61
 170:	de b7       	in	r29, 0x3e	; 62
 172:	89 83       	std	Y+1, r24	; 0x01
 174:	7b 83       	std	Y+3, r23	; 0x03
 176:	6a 83       	std	Y+2, r22	; 0x02
	tx0Char(c);
 178:	89 81       	ldd	r24, Y+1	; 0x01
 17a:	0e 94 99 00 	call	0x132	; 0x132 <tx0Char>
    return 0;
 17e:	80 e0       	ldi	r24, 0x00	; 0
 180:	90 e0       	ldi	r25, 0x00	; 0
      
}
 182:	0f 90       	pop	r0
 184:	0f 90       	pop	r0
 186:	0f 90       	pop	r0
 188:	cf 91       	pop	r28
 18a:	df 91       	pop	r29
 18c:	08 95       	ret

0000018e <uart0_init>:
// desired baud rate: 9600
// actual: baud rate:9615 (0.2%)
// char size: 8 bit
// parity: Disabled
void uart0_init(void)
{
 18e:	df 93       	push	r29
 190:	cf 93       	push	r28
 192:	cd b7       	in	r28, 0x3d	; 61
 194:	de b7       	in	r29, 0x3e	; 62
 UCSR0B = 0x00; //disable while setting baud rate
 196:	ea e2       	ldi	r30, 0x2A	; 42
 198:	f0 e0       	ldi	r31, 0x00	; 0
 19a:	10 82       	st	Z, r1
 UCSR0A = 0x00;
 19c:	eb e2       	ldi	r30, 0x2B	; 43
 19e:	f0 e0       	ldi	r31, 0x00	; 0
 1a0:	10 82       	st	Z, r1
 UCSR0C = 0x06;
 1a2:	e5 e9       	ldi	r30, 0x95	; 149
 1a4:	f0 e0       	ldi	r31, 0x00	; 0
 1a6:	86 e0       	ldi	r24, 0x06	; 6
 1a8:	80 83       	st	Z, r24
 UBRR0L = 0x67; //set baud rate lo
 1aa:	e9 e2       	ldi	r30, 0x29	; 41
 1ac:	f0 e0       	ldi	r31, 0x00	; 0
 1ae:	87 e6       	ldi	r24, 0x67	; 103
 1b0:	80 83       	st	Z, r24
 UBRR0H = 0x00; //set baud rate hi
 1b2:	e0 e9       	ldi	r30, 0x90	; 144
 1b4:	f0 e0       	ldi	r31, 0x00	; 0
 1b6:	10 82       	st	Z, r1
 UCSR0B = 0x18;
 1b8:	ea e2       	ldi	r30, 0x2A	; 42
 1ba:	f0 e0       	ldi	r31, 0x00	; 0
 1bc:	88 e1       	ldi	r24, 0x18	; 24
 1be:	80 83       	st	Z, r24
}
 1c0:	cf 91       	pop	r28
 1c2:	df 91       	pop	r29
 1c4:	08 95       	ret

000001c6 <init_devices>:

//call this routine to initialize all peripherals
void init_devices(void)
{
 1c6:	df 93       	push	r29
 1c8:	cf 93       	push	r28
 1ca:	cd b7       	in	r28, 0x3d	; 61
 1cc:	de b7       	in	r29, 0x3e	; 62
 //stop errant interrupts until set up
 cli(); //disable all interrupts
 1ce:	f8 94       	cli
 XMCRA = 0x00; //external memory
 1d0:	ed e6       	ldi	r30, 0x6D	; 109
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	10 82       	st	Z, r1
 XMCRB = 0x00; //external memory
 1d6:	ec e6       	ldi	r30, 0x6C	; 108
 1d8:	f0 e0       	ldi	r31, 0x00	; 0
 1da:	10 82       	st	Z, r1
 port_init();
 1dc:	0e 94 67 00 	call	0xce	; 0xce <port_init>
 uart0_init();
 1e0:	0e 94 c7 00 	call	0x18e	; 0x18e <uart0_init>
 fdevopen(Putchar,0);  
 1e4:	83 eb       	ldi	r24, 0xB3	; 179
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	60 e0       	ldi	r22, 0x00	; 0
 1ea:	70 e0       	ldi	r23, 0x00	; 0
 1ec:	0e 94 f6 01 	call	0x3ec	; 0x3ec <fdevopen>
 
 MCUCR = 0x00;
 1f0:	e5 e5       	ldi	r30, 0x55	; 85
 1f2:	f0 e0       	ldi	r31, 0x00	; 0
 1f4:	10 82       	st	Z, r1
 EICRA = 0x00; //extended ext ints
 1f6:	ea e6       	ldi	r30, 0x6A	; 106
 1f8:	f0 e0       	ldi	r31, 0x00	; 0
 1fa:	10 82       	st	Z, r1
 EICRB = 0x00; //extended ext ints
 1fc:	ea e5       	ldi	r30, 0x5A	; 90
 1fe:	f0 e0       	ldi	r31, 0x00	; 0
 200:	10 82       	st	Z, r1
 EIMSK = 0x00;
 202:	e9 e5       	ldi	r30, 0x59	; 89
 204:	f0 e0       	ldi	r31, 0x00	; 0
 206:	10 82       	st	Z, r1
 TIMSK = 0x00; //timer interrupt sources
 208:	e7 e5       	ldi	r30, 0x57	; 87
 20a:	f0 e0       	ldi	r31, 0x00	; 0
 20c:	10 82       	st	Z, r1
 ETIMSK = 0x00; //extended timer interrupt sources
 20e:	ed e7       	ldi	r30, 0x7D	; 125
 210:	f0 e0       	ldi	r31, 0x00	; 0
 212:	10 82       	st	Z, r1
 sei(); //re-enable interrupts
 214:	78 94       	sei
 //all peripherals are now initialized
}
 216:	cf 91       	pop	r28
 218:	df 91       	pop	r29
 21a:	08 95       	ret

0000021c <delay>:

void delay(int delaytime){
 21c:	df 93       	push	r29
 21e:	cf 93       	push	r28
 220:	00 d0       	rcall	.+0      	; 0x222 <delay+0x6>
 222:	00 d0       	rcall	.+0      	; 0x224 <delay+0x8>
 224:	00 d0       	rcall	.+0      	; 0x226 <delay+0xa>
 226:	cd b7       	in	r28, 0x3d	; 61
 228:	de b7       	in	r29, 0x3e	; 62
 22a:	9e 83       	std	Y+6, r25	; 0x06
 22c:	8d 83       	std	Y+5, r24	; 0x05
	 int i,j;
	 for(i=0;i<1000;i++){
 22e:	1c 82       	std	Y+4, r1	; 0x04
 230:	1b 82       	std	Y+3, r1	; 0x03
 232:	14 c0       	rjmp	.+40     	; 0x25c <delay+0x40>
	 	for(j=0;j<delaytime;j++){
 234:	1a 82       	std	Y+2, r1	; 0x02
 236:	19 82       	std	Y+1, r1	; 0x01
 238:	05 c0       	rjmp	.+10     	; 0x244 <delay+0x28>
 23a:	89 81       	ldd	r24, Y+1	; 0x01
 23c:	9a 81       	ldd	r25, Y+2	; 0x02
 23e:	01 96       	adiw	r24, 0x01	; 1
 240:	9a 83       	std	Y+2, r25	; 0x02
 242:	89 83       	std	Y+1, r24	; 0x01
 244:	29 81       	ldd	r18, Y+1	; 0x01
 246:	3a 81       	ldd	r19, Y+2	; 0x02
 248:	8d 81       	ldd	r24, Y+5	; 0x05
 24a:	9e 81       	ldd	r25, Y+6	; 0x06
 24c:	28 17       	cp	r18, r24
 24e:	39 07       	cpc	r19, r25
 250:	a4 f3       	brlt	.-24     	; 0x23a <delay+0x1e>
 //all peripherals are now initialized
}

void delay(int delaytime){
	 int i,j;
	 for(i=0;i<1000;i++){
 252:	8b 81       	ldd	r24, Y+3	; 0x03
 254:	9c 81       	ldd	r25, Y+4	; 0x04
 256:	01 96       	adiw	r24, 0x01	; 1
 258:	9c 83       	std	Y+4, r25	; 0x04
 25a:	8b 83       	std	Y+3, r24	; 0x03
 25c:	8b 81       	ldd	r24, Y+3	; 0x03
 25e:	9c 81       	ldd	r25, Y+4	; 0x04
 260:	23 e0       	ldi	r18, 0x03	; 3
 262:	88 3e       	cpi	r24, 0xE8	; 232
 264:	92 07       	cpc	r25, r18
 266:	34 f3       	brlt	.-52     	; 0x234 <delay+0x18>
	 	for(j=0;j<delaytime;j++){
		}
	 }
}
 268:	26 96       	adiw	r28, 0x06	; 6
 26a:	0f b6       	in	r0, 0x3f	; 63
 26c:	f8 94       	cli
 26e:	de bf       	out	0x3e, r29	; 62
 270:	0f be       	out	0x3f, r0	; 63
 272:	cd bf       	out	0x3d, r28	; 61
 274:	cf 91       	pop	r28
 276:	df 91       	pop	r29
 278:	08 95       	ret

0000027a <main>:

//
int main(void)
{
 27a:	df 93       	push	r29
 27c:	cf 93       	push	r28
 27e:	00 d0       	rcall	.+0      	; 0x280 <main+0x6>
 280:	0f 92       	push	r0
 282:	cd b7       	in	r28, 0x3d	; 61
 284:	de b7       	in	r29, 0x3e	; 62
 volatile unsigned char keyin;
 init_devices();
 286:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <init_devices>

 while(1){
 		  if(PINA != 0x00){
 28a:	e9 e3       	ldi	r30, 0x39	; 57
 28c:	f0 e0       	ldi	r31, 0x00	; 0
 28e:	80 81       	ld	r24, Z
 290:	88 23       	and	r24, r24
 292:	29 f0       	breq	.+10     	; 0x29e <main+0x24>
		      keyin = PINA;
 294:	e9 e3       	ldi	r30, 0x39	; 57
 296:	f0 e0       	ldi	r31, 0x00	; 0
 298:	80 81       	ld	r24, Z
 29a:	89 83       	std	Y+1, r24	; 0x01
 29c:	01 c0       	rjmp	.+2      	; 0x2a0 <main+0x26>
		  }
		  else keyin=0;
 29e:	19 82       	std	Y+1, r1	; 0x01
 		  switch(keyin){
 2a0:	89 81       	ldd	r24, Y+1	; 0x01
 2a2:	28 2f       	mov	r18, r24
 2a4:	30 e0       	ldi	r19, 0x00	; 0
 2a6:	3b 83       	std	Y+3, r19	; 0x03
 2a8:	2a 83       	std	Y+2, r18	; 0x02
 2aa:	8a 81       	ldd	r24, Y+2	; 0x02
 2ac:	9b 81       	ldd	r25, Y+3	; 0x03
 2ae:	88 30       	cpi	r24, 0x08	; 8
 2b0:	91 05       	cpc	r25, r1
 2b2:	09 f4       	brne	.+2      	; 0x2b6 <main+0x3c>
 2b4:	5b c0       	rjmp	.+182    	; 0x36c <main+0xf2>
 2b6:	2a 81       	ldd	r18, Y+2	; 0x02
 2b8:	3b 81       	ldd	r19, Y+3	; 0x03
 2ba:	29 30       	cpi	r18, 0x09	; 9
 2bc:	31 05       	cpc	r19, r1
 2be:	8c f4       	brge	.+34     	; 0x2e2 <main+0x68>
 2c0:	8a 81       	ldd	r24, Y+2	; 0x02
 2c2:	9b 81       	ldd	r25, Y+3	; 0x03
 2c4:	82 30       	cpi	r24, 0x02	; 2
 2c6:	91 05       	cpc	r25, r1
 2c8:	b9 f1       	breq	.+110    	; 0x338 <main+0xbe>
 2ca:	2a 81       	ldd	r18, Y+2	; 0x02
 2cc:	3b 81       	ldd	r19, Y+3	; 0x03
 2ce:	24 30       	cpi	r18, 0x04	; 4
 2d0:	31 05       	cpc	r19, r1
 2d2:	09 f4       	brne	.+2      	; 0x2d6 <main+0x5c>
 2d4:	3e c0       	rjmp	.+124    	; 0x352 <main+0xd8>
 2d6:	8a 81       	ldd	r24, Y+2	; 0x02
 2d8:	9b 81       	ldd	r25, Y+3	; 0x03
 2da:	81 30       	cpi	r24, 0x01	; 1
 2dc:	91 05       	cpc	r25, r1
 2de:	01 f1       	breq	.+64     	; 0x320 <main+0xa6>
 2e0:	d4 cf       	rjmp	.-88     	; 0x28a <main+0x10>
 2e2:	2a 81       	ldd	r18, Y+2	; 0x02
 2e4:	3b 81       	ldd	r19, Y+3	; 0x03
 2e6:	20 32       	cpi	r18, 0x20	; 32
 2e8:	31 05       	cpc	r19, r1
 2ea:	09 f4       	brne	.+2      	; 0x2ee <main+0x74>
 2ec:	58 c0       	rjmp	.+176    	; 0x39e <main+0x124>
 2ee:	8a 81       	ldd	r24, Y+2	; 0x02
 2f0:	9b 81       	ldd	r25, Y+3	; 0x03
 2f2:	81 32       	cpi	r24, 0x21	; 33
 2f4:	91 05       	cpc	r25, r1
 2f6:	3c f4       	brge	.+14     	; 0x306 <main+0x8c>
 2f8:	2a 81       	ldd	r18, Y+2	; 0x02
 2fa:	3b 81       	ldd	r19, Y+3	; 0x03
 2fc:	20 31       	cpi	r18, 0x10	; 16
 2fe:	31 05       	cpc	r19, r1
 300:	09 f4       	brne	.+2      	; 0x304 <main+0x8a>
 302:	41 c0       	rjmp	.+130    	; 0x386 <main+0x10c>
 304:	c2 cf       	rjmp	.-124    	; 0x28a <main+0x10>
 306:	8a 81       	ldd	r24, Y+2	; 0x02
 308:	9b 81       	ldd	r25, Y+3	; 0x03
 30a:	80 34       	cpi	r24, 0x40	; 64
 30c:	91 05       	cpc	r25, r1
 30e:	09 f4       	brne	.+2      	; 0x312 <main+0x98>
 310:	53 c0       	rjmp	.+166    	; 0x3b8 <main+0x13e>
 312:	2a 81       	ldd	r18, Y+2	; 0x02
 314:	3b 81       	ldd	r19, Y+3	; 0x03
 316:	20 38       	cpi	r18, 0x80	; 128
 318:	31 05       	cpc	r19, r1
 31a:	09 f4       	brne	.+2      	; 0x31e <main+0xa4>
 31c:	5a c0       	rjmp	.+180    	; 0x3d2 <main+0x158>
 31e:	b5 cf       	rjmp	.-150    	; 0x28a <main+0x10>
		  	case 1 : PORTG = 0x00; 
 320:	e5 e6       	ldi	r30, 0x65	; 101
 322:	f0 e0       	ldi	r31, 0x00	; 0
 324:	10 82       	st	Z, r1
				   	 printf("1");
 326:	81 e3       	ldi	r24, 0x31	; 49
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	0e 94 42 02 	call	0x484	; 0x484 <putchar>
					 delay(300);
 32e:	8c e2       	ldi	r24, 0x2C	; 44
 330:	91 e0       	ldi	r25, 0x01	; 1
 332:	0e 94 0e 01 	call	0x21c	; 0x21c <delay>
 336:	a9 cf       	rjmp	.-174    	; 0x28a <main+0x10>
					 break;
			case 2 : PORTG = 0x01;
 338:	e5 e6       	ldi	r30, 0x65	; 101
 33a:	f0 e0       	ldi	r31, 0x00	; 0
 33c:	81 e0       	ldi	r24, 0x01	; 1
 33e:	80 83       	st	Z, r24
				   	 printf("2");
 340:	82 e3       	ldi	r24, 0x32	; 50
 342:	90 e0       	ldi	r25, 0x00	; 0
 344:	0e 94 42 02 	call	0x484	; 0x484 <putchar>
					 delay(300);
 348:	8c e2       	ldi	r24, 0x2C	; 44
 34a:	91 e0       	ldi	r25, 0x01	; 1
 34c:	0e 94 0e 01 	call	0x21c	; 0x21c <delay>
 350:	9c cf       	rjmp	.-200    	; 0x28a <main+0x10>
					 break;
		  	case 4 : PORTG = 0x02; 
 352:	e5 e6       	ldi	r30, 0x65	; 101
 354:	f0 e0       	ldi	r31, 0x00	; 0
 356:	82 e0       	ldi	r24, 0x02	; 2
 358:	80 83       	st	Z, r24
				   	 printf("3");
 35a:	83 e3       	ldi	r24, 0x33	; 51
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	0e 94 42 02 	call	0x484	; 0x484 <putchar>
					 delay(300);
 362:	8c e2       	ldi	r24, 0x2C	; 44
 364:	91 e0       	ldi	r25, 0x01	; 1
 366:	0e 94 0e 01 	call	0x21c	; 0x21c <delay>
 36a:	8f cf       	rjmp	.-226    	; 0x28a <main+0x10>
					 break;
		  	case 8 : PORTG = 0x03;
 36c:	e5 e6       	ldi	r30, 0x65	; 101
 36e:	f0 e0       	ldi	r31, 0x00	; 0
 370:	83 e0       	ldi	r24, 0x03	; 3
 372:	80 83       	st	Z, r24
				   	 printf("4");
 374:	84 e3       	ldi	r24, 0x34	; 52
 376:	90 e0       	ldi	r25, 0x00	; 0
 378:	0e 94 42 02 	call	0x484	; 0x484 <putchar>
					 delay(300);
 37c:	8c e2       	ldi	r24, 0x2C	; 44
 37e:	91 e0       	ldi	r25, 0x01	; 1
 380:	0e 94 0e 01 	call	0x21c	; 0x21c <delay>
 384:	82 cf       	rjmp	.-252    	; 0x28a <main+0x10>
					 break;
		  	case 16 : PORTG = 0x00; 
 386:	e5 e6       	ldi	r30, 0x65	; 101
 388:	f0 e0       	ldi	r31, 0x00	; 0
 38a:	10 82       	st	Z, r1
				   	 printf("5");
 38c:	85 e3       	ldi	r24, 0x35	; 53
 38e:	90 e0       	ldi	r25, 0x00	; 0
 390:	0e 94 42 02 	call	0x484	; 0x484 <putchar>
					 delay(300);
 394:	8c e2       	ldi	r24, 0x2C	; 44
 396:	91 e0       	ldi	r25, 0x01	; 1
 398:	0e 94 0e 01 	call	0x21c	; 0x21c <delay>
 39c:	76 cf       	rjmp	.-276    	; 0x28a <main+0x10>
					 break;
		  	case 32 : PORTG = 0x01;
 39e:	e5 e6       	ldi	r30, 0x65	; 101
 3a0:	f0 e0       	ldi	r31, 0x00	; 0
 3a2:	81 e0       	ldi	r24, 0x01	; 1
 3a4:	80 83       	st	Z, r24
				   	 printf("6");
 3a6:	86 e3       	ldi	r24, 0x36	; 54
 3a8:	90 e0       	ldi	r25, 0x00	; 0
 3aa:	0e 94 42 02 	call	0x484	; 0x484 <putchar>
					 delay(300);
 3ae:	8c e2       	ldi	r24, 0x2C	; 44
 3b0:	91 e0       	ldi	r25, 0x01	; 1
 3b2:	0e 94 0e 01 	call	0x21c	; 0x21c <delay>
 3b6:	69 cf       	rjmp	.-302    	; 0x28a <main+0x10>
					 break;
		  	case 64: PORTG = 0x02;
 3b8:	e5 e6       	ldi	r30, 0x65	; 101
 3ba:	f0 e0       	ldi	r31, 0x00	; 0
 3bc:	82 e0       	ldi	r24, 0x02	; 2
 3be:	80 83       	st	Z, r24
				   	 printf("7");
 3c0:	87 e3       	ldi	r24, 0x37	; 55
 3c2:	90 e0       	ldi	r25, 0x00	; 0
 3c4:	0e 94 42 02 	call	0x484	; 0x484 <putchar>
					 delay(300);
 3c8:	8c e2       	ldi	r24, 0x2C	; 44
 3ca:	91 e0       	ldi	r25, 0x01	; 1
 3cc:	0e 94 0e 01 	call	0x21c	; 0x21c <delay>
 3d0:	5c cf       	rjmp	.-328    	; 0x28a <main+0x10>
					 break;
		  	case 128 : PORTG = 0x03;
 3d2:	e5 e6       	ldi	r30, 0x65	; 101
 3d4:	f0 e0       	ldi	r31, 0x00	; 0
 3d6:	83 e0       	ldi	r24, 0x03	; 3
 3d8:	80 83       	st	Z, r24
				   	 printf("8");
 3da:	88 e3       	ldi	r24, 0x38	; 56
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	0e 94 42 02 	call	0x484	; 0x484 <putchar>
					 delay(300);
 3e2:	8c e2       	ldi	r24, 0x2C	; 44
 3e4:	91 e0       	ldi	r25, 0x01	; 1
 3e6:	0e 94 0e 01 	call	0x21c	; 0x21c <delay>
 3ea:	4f cf       	rjmp	.-354    	; 0x28a <main+0x10>

000003ec <fdevopen>:
 3ec:	0f 93       	push	r16
 3ee:	1f 93       	push	r17
 3f0:	cf 93       	push	r28
 3f2:	df 93       	push	r29
 3f4:	8c 01       	movw	r16, r24
 3f6:	eb 01       	movw	r28, r22
 3f8:	00 97       	sbiw	r24, 0x00	; 0
 3fa:	31 f4       	brne	.+12     	; 0x408 <fdevopen+0x1c>
 3fc:	61 15       	cp	r22, r1
 3fe:	71 05       	cpc	r23, r1
 400:	19 f4       	brne	.+6      	; 0x408 <fdevopen+0x1c>
 402:	20 e0       	ldi	r18, 0x00	; 0
 404:	30 e0       	ldi	r19, 0x00	; 0
 406:	38 c0       	rjmp	.+112    	; 0x478 <fdevopen+0x8c>
 408:	81 e0       	ldi	r24, 0x01	; 1
 40a:	90 e0       	ldi	r25, 0x00	; 0
 40c:	6e e0       	ldi	r22, 0x0E	; 14
 40e:	70 e0       	ldi	r23, 0x00	; 0
 410:	0e 94 49 02 	call	0x492	; 0x492 <calloc>
 414:	fc 01       	movw	r30, r24
 416:	9c 01       	movw	r18, r24
 418:	00 97       	sbiw	r24, 0x00	; 0
 41a:	71 f1       	breq	.+92     	; 0x478 <fdevopen+0x8c>
 41c:	80 e8       	ldi	r24, 0x80	; 128
 41e:	83 83       	std	Z+3, r24	; 0x03
 420:	20 97       	sbiw	r28, 0x00	; 0
 422:	71 f0       	breq	.+28     	; 0x440 <fdevopen+0x54>
 424:	d3 87       	std	Z+11, r29	; 0x0b
 426:	c2 87       	std	Z+10, r28	; 0x0a
 428:	81 e8       	ldi	r24, 0x81	; 129
 42a:	83 83       	std	Z+3, r24	; 0x03
 42c:	80 91 06 01 	lds	r24, 0x0106
 430:	90 91 07 01 	lds	r25, 0x0107
 434:	89 2b       	or	r24, r25
 436:	21 f4       	brne	.+8      	; 0x440 <fdevopen+0x54>
 438:	f0 93 07 01 	sts	0x0107, r31
 43c:	e0 93 06 01 	sts	0x0106, r30
 440:	01 15       	cp	r16, r1
 442:	11 05       	cpc	r17, r1
 444:	c9 f0       	breq	.+50     	; 0x478 <fdevopen+0x8c>
 446:	11 87       	std	Z+9, r17	; 0x09
 448:	00 87       	std	Z+8, r16	; 0x08
 44a:	83 81       	ldd	r24, Z+3	; 0x03
 44c:	82 60       	ori	r24, 0x02	; 2
 44e:	83 83       	std	Z+3, r24	; 0x03
 450:	80 91 08 01 	lds	r24, 0x0108
 454:	90 91 09 01 	lds	r25, 0x0109
 458:	89 2b       	or	r24, r25
 45a:	71 f4       	brne	.+28     	; 0x478 <fdevopen+0x8c>
 45c:	f0 93 09 01 	sts	0x0109, r31
 460:	e0 93 08 01 	sts	0x0108, r30
 464:	80 91 0a 01 	lds	r24, 0x010A
 468:	90 91 0b 01 	lds	r25, 0x010B
 46c:	89 2b       	or	r24, r25
 46e:	21 f4       	brne	.+8      	; 0x478 <fdevopen+0x8c>
 470:	f0 93 0b 01 	sts	0x010B, r31
 474:	e0 93 0a 01 	sts	0x010A, r30
 478:	c9 01       	movw	r24, r18
 47a:	df 91       	pop	r29
 47c:	cf 91       	pop	r28
 47e:	1f 91       	pop	r17
 480:	0f 91       	pop	r16
 482:	08 95       	ret

00000484 <putchar>:
 484:	60 91 08 01 	lds	r22, 0x0108
 488:	70 91 09 01 	lds	r23, 0x0109
 48c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <fputc>
 490:	08 95       	ret

00000492 <calloc>:
 492:	0f 93       	push	r16
 494:	1f 93       	push	r17
 496:	cf 93       	push	r28
 498:	df 93       	push	r29
 49a:	68 9f       	mul	r22, r24
 49c:	80 01       	movw	r16, r0
 49e:	69 9f       	mul	r22, r25
 4a0:	10 0d       	add	r17, r0
 4a2:	78 9f       	mul	r23, r24
 4a4:	10 0d       	add	r17, r0
 4a6:	11 24       	eor	r1, r1
 4a8:	c8 01       	movw	r24, r16
 4aa:	0e 94 65 02 	call	0x4ca	; 0x4ca <malloc>
 4ae:	ec 01       	movw	r28, r24
 4b0:	00 97       	sbiw	r24, 0x00	; 0
 4b2:	29 f0       	breq	.+10     	; 0x4be <calloc+0x2c>
 4b4:	60 e0       	ldi	r22, 0x00	; 0
 4b6:	70 e0       	ldi	r23, 0x00	; 0
 4b8:	a8 01       	movw	r20, r16
 4ba:	0e 94 6a 03 	call	0x6d4	; 0x6d4 <memset>
 4be:	ce 01       	movw	r24, r28
 4c0:	df 91       	pop	r29
 4c2:	cf 91       	pop	r28
 4c4:	1f 91       	pop	r17
 4c6:	0f 91       	pop	r16
 4c8:	08 95       	ret

000004ca <malloc>:
 4ca:	cf 93       	push	r28
 4cc:	df 93       	push	r29
 4ce:	bc 01       	movw	r22, r24
 4d0:	82 30       	cpi	r24, 0x02	; 2
 4d2:	91 05       	cpc	r25, r1
 4d4:	10 f4       	brcc	.+4      	; 0x4da <malloc+0x10>
 4d6:	62 e0       	ldi	r22, 0x02	; 2
 4d8:	70 e0       	ldi	r23, 0x00	; 0
 4da:	a0 91 0e 01 	lds	r26, 0x010E
 4de:	b0 91 0f 01 	lds	r27, 0x010F
 4e2:	ed 01       	movw	r28, r26
 4e4:	e0 e0       	ldi	r30, 0x00	; 0
 4e6:	f0 e0       	ldi	r31, 0x00	; 0
 4e8:	40 e0       	ldi	r20, 0x00	; 0
 4ea:	50 e0       	ldi	r21, 0x00	; 0
 4ec:	21 c0       	rjmp	.+66     	; 0x530 <malloc+0x66>
 4ee:	88 81       	ld	r24, Y
 4f0:	99 81       	ldd	r25, Y+1	; 0x01
 4f2:	86 17       	cp	r24, r22
 4f4:	97 07       	cpc	r25, r23
 4f6:	69 f4       	brne	.+26     	; 0x512 <malloc+0x48>
 4f8:	8a 81       	ldd	r24, Y+2	; 0x02
 4fa:	9b 81       	ldd	r25, Y+3	; 0x03
 4fc:	30 97       	sbiw	r30, 0x00	; 0
 4fe:	19 f0       	breq	.+6      	; 0x506 <malloc+0x3c>
 500:	93 83       	std	Z+3, r25	; 0x03
 502:	82 83       	std	Z+2, r24	; 0x02
 504:	04 c0       	rjmp	.+8      	; 0x50e <malloc+0x44>
 506:	90 93 0f 01 	sts	0x010F, r25
 50a:	80 93 0e 01 	sts	0x010E, r24
 50e:	fe 01       	movw	r30, r28
 510:	34 c0       	rjmp	.+104    	; 0x57a <malloc+0xb0>
 512:	68 17       	cp	r22, r24
 514:	79 07       	cpc	r23, r25
 516:	38 f4       	brcc	.+14     	; 0x526 <malloc+0x5c>
 518:	41 15       	cp	r20, r1
 51a:	51 05       	cpc	r21, r1
 51c:	19 f0       	breq	.+6      	; 0x524 <malloc+0x5a>
 51e:	84 17       	cp	r24, r20
 520:	95 07       	cpc	r25, r21
 522:	08 f4       	brcc	.+2      	; 0x526 <malloc+0x5c>
 524:	ac 01       	movw	r20, r24
 526:	fe 01       	movw	r30, r28
 528:	8a 81       	ldd	r24, Y+2	; 0x02
 52a:	9b 81       	ldd	r25, Y+3	; 0x03
 52c:	9c 01       	movw	r18, r24
 52e:	e9 01       	movw	r28, r18
 530:	20 97       	sbiw	r28, 0x00	; 0
 532:	e9 f6       	brne	.-70     	; 0x4ee <malloc+0x24>
 534:	41 15       	cp	r20, r1
 536:	51 05       	cpc	r21, r1
 538:	a9 f1       	breq	.+106    	; 0x5a4 <malloc+0xda>
 53a:	ca 01       	movw	r24, r20
 53c:	86 1b       	sub	r24, r22
 53e:	97 0b       	sbc	r25, r23
 540:	04 97       	sbiw	r24, 0x04	; 4
 542:	08 f4       	brcc	.+2      	; 0x546 <malloc+0x7c>
 544:	ba 01       	movw	r22, r20
 546:	e0 e0       	ldi	r30, 0x00	; 0
 548:	f0 e0       	ldi	r31, 0x00	; 0
 54a:	2a c0       	rjmp	.+84     	; 0x5a0 <malloc+0xd6>
 54c:	8d 91       	ld	r24, X+
 54e:	9c 91       	ld	r25, X
 550:	11 97       	sbiw	r26, 0x01	; 1
 552:	84 17       	cp	r24, r20
 554:	95 07       	cpc	r25, r21
 556:	f9 f4       	brne	.+62     	; 0x596 <malloc+0xcc>
 558:	64 17       	cp	r22, r20
 55a:	75 07       	cpc	r23, r21
 55c:	81 f4       	brne	.+32     	; 0x57e <malloc+0xb4>
 55e:	12 96       	adiw	r26, 0x02	; 2
 560:	8d 91       	ld	r24, X+
 562:	9c 91       	ld	r25, X
 564:	13 97       	sbiw	r26, 0x03	; 3
 566:	30 97       	sbiw	r30, 0x00	; 0
 568:	19 f0       	breq	.+6      	; 0x570 <malloc+0xa6>
 56a:	93 83       	std	Z+3, r25	; 0x03
 56c:	82 83       	std	Z+2, r24	; 0x02
 56e:	04 c0       	rjmp	.+8      	; 0x578 <malloc+0xae>
 570:	90 93 0f 01 	sts	0x010F, r25
 574:	80 93 0e 01 	sts	0x010E, r24
 578:	fd 01       	movw	r30, r26
 57a:	32 96       	adiw	r30, 0x02	; 2
 57c:	4f c0       	rjmp	.+158    	; 0x61c <malloc+0x152>
 57e:	ca 01       	movw	r24, r20
 580:	86 1b       	sub	r24, r22
 582:	97 0b       	sbc	r25, r23
 584:	fd 01       	movw	r30, r26
 586:	e8 0f       	add	r30, r24
 588:	f9 1f       	adc	r31, r25
 58a:	61 93       	st	Z+, r22
 58c:	71 93       	st	Z+, r23
 58e:	02 97       	sbiw	r24, 0x02	; 2
 590:	8d 93       	st	X+, r24
 592:	9c 93       	st	X, r25
 594:	43 c0       	rjmp	.+134    	; 0x61c <malloc+0x152>
 596:	fd 01       	movw	r30, r26
 598:	82 81       	ldd	r24, Z+2	; 0x02
 59a:	93 81       	ldd	r25, Z+3	; 0x03
 59c:	9c 01       	movw	r18, r24
 59e:	d9 01       	movw	r26, r18
 5a0:	10 97       	sbiw	r26, 0x00	; 0
 5a2:	a1 f6       	brne	.-88     	; 0x54c <malloc+0x82>
 5a4:	80 91 0c 01 	lds	r24, 0x010C
 5a8:	90 91 0d 01 	lds	r25, 0x010D
 5ac:	89 2b       	or	r24, r25
 5ae:	41 f4       	brne	.+16     	; 0x5c0 <malloc+0xf6>
 5b0:	80 91 02 01 	lds	r24, 0x0102
 5b4:	90 91 03 01 	lds	r25, 0x0103
 5b8:	90 93 0d 01 	sts	0x010D, r25
 5bc:	80 93 0c 01 	sts	0x010C, r24
 5c0:	40 91 04 01 	lds	r20, 0x0104
 5c4:	50 91 05 01 	lds	r21, 0x0105
 5c8:	41 15       	cp	r20, r1
 5ca:	51 05       	cpc	r21, r1
 5cc:	41 f4       	brne	.+16     	; 0x5de <malloc+0x114>
 5ce:	4d b7       	in	r20, 0x3d	; 61
 5d0:	5e b7       	in	r21, 0x3e	; 62
 5d2:	80 91 00 01 	lds	r24, 0x0100
 5d6:	90 91 01 01 	lds	r25, 0x0101
 5da:	48 1b       	sub	r20, r24
 5dc:	59 0b       	sbc	r21, r25
 5de:	20 91 0c 01 	lds	r18, 0x010C
 5e2:	30 91 0d 01 	lds	r19, 0x010D
 5e6:	24 17       	cp	r18, r20
 5e8:	35 07       	cpc	r19, r21
 5ea:	b0 f4       	brcc	.+44     	; 0x618 <malloc+0x14e>
 5ec:	ca 01       	movw	r24, r20
 5ee:	82 1b       	sub	r24, r18
 5f0:	93 0b       	sbc	r25, r19
 5f2:	86 17       	cp	r24, r22
 5f4:	97 07       	cpc	r25, r23
 5f6:	80 f0       	brcs	.+32     	; 0x618 <malloc+0x14e>
 5f8:	ab 01       	movw	r20, r22
 5fa:	4e 5f       	subi	r20, 0xFE	; 254
 5fc:	5f 4f       	sbci	r21, 0xFF	; 255
 5fe:	84 17       	cp	r24, r20
 600:	95 07       	cpc	r25, r21
 602:	50 f0       	brcs	.+20     	; 0x618 <malloc+0x14e>
 604:	42 0f       	add	r20, r18
 606:	53 1f       	adc	r21, r19
 608:	50 93 0d 01 	sts	0x010D, r21
 60c:	40 93 0c 01 	sts	0x010C, r20
 610:	f9 01       	movw	r30, r18
 612:	61 93       	st	Z+, r22
 614:	71 93       	st	Z+, r23
 616:	02 c0       	rjmp	.+4      	; 0x61c <malloc+0x152>
 618:	e0 e0       	ldi	r30, 0x00	; 0
 61a:	f0 e0       	ldi	r31, 0x00	; 0
 61c:	cf 01       	movw	r24, r30
 61e:	df 91       	pop	r29
 620:	cf 91       	pop	r28
 622:	08 95       	ret

00000624 <free>:
 624:	cf 93       	push	r28
 626:	df 93       	push	r29
 628:	00 97       	sbiw	r24, 0x00	; 0
 62a:	09 f4       	brne	.+2      	; 0x62e <free+0xa>
 62c:	50 c0       	rjmp	.+160    	; 0x6ce <free+0xaa>
 62e:	ec 01       	movw	r28, r24
 630:	22 97       	sbiw	r28, 0x02	; 2
 632:	1b 82       	std	Y+3, r1	; 0x03
 634:	1a 82       	std	Y+2, r1	; 0x02
 636:	a0 91 0e 01 	lds	r26, 0x010E
 63a:	b0 91 0f 01 	lds	r27, 0x010F
 63e:	10 97       	sbiw	r26, 0x00	; 0
 640:	09 f1       	breq	.+66     	; 0x684 <free+0x60>
 642:	40 e0       	ldi	r20, 0x00	; 0
 644:	50 e0       	ldi	r21, 0x00	; 0
 646:	ac 17       	cp	r26, r28
 648:	bd 07       	cpc	r27, r29
 64a:	08 f1       	brcs	.+66     	; 0x68e <free+0x6a>
 64c:	bb 83       	std	Y+3, r27	; 0x03
 64e:	aa 83       	std	Y+2, r26	; 0x02
 650:	fe 01       	movw	r30, r28
 652:	21 91       	ld	r18, Z+
 654:	31 91       	ld	r19, Z+
 656:	e2 0f       	add	r30, r18
 658:	f3 1f       	adc	r31, r19
 65a:	ae 17       	cp	r26, r30
 65c:	bf 07       	cpc	r27, r31
 65e:	79 f4       	brne	.+30     	; 0x67e <free+0x5a>
 660:	8d 91       	ld	r24, X+
 662:	9c 91       	ld	r25, X
 664:	11 97       	sbiw	r26, 0x01	; 1
 666:	28 0f       	add	r18, r24
 668:	39 1f       	adc	r19, r25
 66a:	2e 5f       	subi	r18, 0xFE	; 254
 66c:	3f 4f       	sbci	r19, 0xFF	; 255
 66e:	39 83       	std	Y+1, r19	; 0x01
 670:	28 83       	st	Y, r18
 672:	12 96       	adiw	r26, 0x02	; 2
 674:	8d 91       	ld	r24, X+
 676:	9c 91       	ld	r25, X
 678:	13 97       	sbiw	r26, 0x03	; 3
 67a:	9b 83       	std	Y+3, r25	; 0x03
 67c:	8a 83       	std	Y+2, r24	; 0x02
 67e:	41 15       	cp	r20, r1
 680:	51 05       	cpc	r21, r1
 682:	71 f4       	brne	.+28     	; 0x6a0 <free+0x7c>
 684:	d0 93 0f 01 	sts	0x010F, r29
 688:	c0 93 0e 01 	sts	0x010E, r28
 68c:	20 c0       	rjmp	.+64     	; 0x6ce <free+0xaa>
 68e:	12 96       	adiw	r26, 0x02	; 2
 690:	8d 91       	ld	r24, X+
 692:	9c 91       	ld	r25, X
 694:	13 97       	sbiw	r26, 0x03	; 3
 696:	ad 01       	movw	r20, r26
 698:	00 97       	sbiw	r24, 0x00	; 0
 69a:	11 f0       	breq	.+4      	; 0x6a0 <free+0x7c>
 69c:	dc 01       	movw	r26, r24
 69e:	d3 cf       	rjmp	.-90     	; 0x646 <free+0x22>
 6a0:	fa 01       	movw	r30, r20
 6a2:	d3 83       	std	Z+3, r29	; 0x03
 6a4:	c2 83       	std	Z+2, r28	; 0x02
 6a6:	21 91       	ld	r18, Z+
 6a8:	31 91       	ld	r19, Z+
 6aa:	e2 0f       	add	r30, r18
 6ac:	f3 1f       	adc	r31, r19
 6ae:	ce 17       	cp	r28, r30
 6b0:	df 07       	cpc	r29, r31
 6b2:	69 f4       	brne	.+26     	; 0x6ce <free+0xaa>
 6b4:	88 81       	ld	r24, Y
 6b6:	99 81       	ldd	r25, Y+1	; 0x01
 6b8:	28 0f       	add	r18, r24
 6ba:	39 1f       	adc	r19, r25
 6bc:	2e 5f       	subi	r18, 0xFE	; 254
 6be:	3f 4f       	sbci	r19, 0xFF	; 255
 6c0:	fa 01       	movw	r30, r20
 6c2:	31 83       	std	Z+1, r19	; 0x01
 6c4:	20 83       	st	Z, r18
 6c6:	8a 81       	ldd	r24, Y+2	; 0x02
 6c8:	9b 81       	ldd	r25, Y+3	; 0x03
 6ca:	93 83       	std	Z+3, r25	; 0x03
 6cc:	82 83       	std	Z+2, r24	; 0x02
 6ce:	df 91       	pop	r29
 6d0:	cf 91       	pop	r28
 6d2:	08 95       	ret

000006d4 <memset>:
 6d4:	dc 01       	movw	r26, r24
 6d6:	01 c0       	rjmp	.+2      	; 0x6da <memset+0x6>
 6d8:	6d 93       	st	X+, r22
 6da:	41 50       	subi	r20, 0x01	; 1
 6dc:	50 40       	sbci	r21, 0x00	; 0
 6de:	e0 f7       	brcc	.-8      	; 0x6d8 <memset+0x4>
 6e0:	08 95       	ret

000006e2 <fputc>:
 6e2:	0f 93       	push	r16
 6e4:	1f 93       	push	r17
 6e6:	cf 93       	push	r28
 6e8:	df 93       	push	r29
 6ea:	8c 01       	movw	r16, r24
 6ec:	eb 01       	movw	r28, r22
 6ee:	8b 81       	ldd	r24, Y+3	; 0x03
 6f0:	81 ff       	sbrs	r24, 1
 6f2:	1b c0       	rjmp	.+54     	; 0x72a <fputc+0x48>
 6f4:	82 ff       	sbrs	r24, 2
 6f6:	0d c0       	rjmp	.+26     	; 0x712 <fputc+0x30>
 6f8:	2e 81       	ldd	r18, Y+6	; 0x06
 6fa:	3f 81       	ldd	r19, Y+7	; 0x07
 6fc:	8c 81       	ldd	r24, Y+4	; 0x04
 6fe:	9d 81       	ldd	r25, Y+5	; 0x05
 700:	28 17       	cp	r18, r24
 702:	39 07       	cpc	r19, r25
 704:	64 f4       	brge	.+24     	; 0x71e <fputc+0x3c>
 706:	e8 81       	ld	r30, Y
 708:	f9 81       	ldd	r31, Y+1	; 0x01
 70a:	01 93       	st	Z+, r16
 70c:	f9 83       	std	Y+1, r31	; 0x01
 70e:	e8 83       	st	Y, r30
 710:	06 c0       	rjmp	.+12     	; 0x71e <fputc+0x3c>
 712:	e8 85       	ldd	r30, Y+8	; 0x08
 714:	f9 85       	ldd	r31, Y+9	; 0x09
 716:	80 2f       	mov	r24, r16
 718:	09 95       	icall
 71a:	89 2b       	or	r24, r25
 71c:	31 f4       	brne	.+12     	; 0x72a <fputc+0x48>
 71e:	8e 81       	ldd	r24, Y+6	; 0x06
 720:	9f 81       	ldd	r25, Y+7	; 0x07
 722:	01 96       	adiw	r24, 0x01	; 1
 724:	9f 83       	std	Y+7, r25	; 0x07
 726:	8e 83       	std	Y+6, r24	; 0x06
 728:	02 c0       	rjmp	.+4      	; 0x72e <fputc+0x4c>
 72a:	0f ef       	ldi	r16, 0xFF	; 255
 72c:	1f ef       	ldi	r17, 0xFF	; 255
 72e:	c8 01       	movw	r24, r16
 730:	df 91       	pop	r29
 732:	cf 91       	pop	r28
 734:	1f 91       	pop	r17
 736:	0f 91       	pop	r16
 738:	08 95       	ret

0000073a <_exit>:
 73a:	f8 94       	cli

0000073c <__stop_program>:
 73c:	ff cf       	rjmp	.-2      	; 0x73c <__stop_program>
