
test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  00000c8e  00000d22  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c8e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080013a  0080013a  00000d5c  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  00000d5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000094  00000000  00000000  00000d7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000002c5  00000000  00000000  00000e10  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000015a  00000000  00000000  000010d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000367  00000000  00000000  0000122f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b0  00000000  00000000  00001598  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000110  00000000  00000000  00001648  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee e8       	ldi	r30, 0x8E	; 142
  a0:	fc e0       	ldi	r31, 0x0C	; 12
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 33       	cpi	r26, 0x3A	; 58
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	11 e0       	ldi	r17, 0x01	; 1
  b4:	aa e3       	ldi	r26, 0x3A	; 58
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a4 34       	cpi	r26, 0x44	; 68
  be:	b1 07       	cpc	r27, r17
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	0e 94 9f 01 	call	0x33e	; 0x33e <main>
  c6:	0c 94 45 06 	jmp	0xc8a	; 0xc8a <_exit>

000000ca <__bad_interrupt>:
  ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <tx0Char>:

void tx0Char(char message);

// UART0 을 이용한 출력
void tx0Char(char message)
{
  ce:	df 93       	push	r29
  d0:	cf 93       	push	r28
  d2:	0f 92       	push	r0
  d4:	cd b7       	in	r28, 0x3d	; 61
  d6:	de b7       	in	r29, 0x3e	; 62
  d8:	89 83       	std	Y+1, r24	; 0x01
	while (((UCSR0A>>UDRE0)&0x01) == 0) ;  // UDRE, data register empty        
  da:	eb e2       	ldi	r30, 0x2B	; 43
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	80 81       	ld	r24, Z
  e0:	82 95       	swap	r24
  e2:	86 95       	lsr	r24
  e4:	87 70       	andi	r24, 0x07	; 7
  e6:	88 2f       	mov	r24, r24
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	81 70       	andi	r24, 0x01	; 1
  ec:	90 70       	andi	r25, 0x00	; 0
  ee:	00 97       	sbiw	r24, 0x00	; 0
  f0:	a1 f3       	breq	.-24     	; 0xda <tx0Char+0xc>
    UDR0 = message;
  f2:	ec e2       	ldi	r30, 0x2C	; 44
  f4:	f0 e0       	ldi	r31, 0x00	; 0
  f6:	89 81       	ldd	r24, Y+1	; 0x01
  f8:	80 83       	st	Z, r24
}
  fa:	0f 90       	pop	r0
  fc:	cf 91       	pop	r28
  fe:	df 91       	pop	r29
 100:	08 95       	ret

00000102 <Putchar>:


static int Putchar(char c, FILE *stream)
{
 102:	df 93       	push	r29
 104:	cf 93       	push	r28
 106:	00 d0       	rcall	.+0      	; 0x108 <Putchar+0x6>
 108:	0f 92       	push	r0
 10a:	cd b7       	in	r28, 0x3d	; 61
 10c:	de b7       	in	r29, 0x3e	; 62
 10e:	89 83       	std	Y+1, r24	; 0x01
 110:	7b 83       	std	Y+3, r23	; 0x03
 112:	6a 83       	std	Y+2, r22	; 0x02
	tx0Char(c);
 114:	89 81       	ldd	r24, Y+1	; 0x01
 116:	0e 94 67 00 	call	0xce	; 0xce <tx0Char>
    return 0;
 11a:	80 e0       	ldi	r24, 0x00	; 0
 11c:	90 e0       	ldi	r25, 0x00	; 0
      
}
 11e:	0f 90       	pop	r0
 120:	0f 90       	pop	r0
 122:	0f 90       	pop	r0
 124:	cf 91       	pop	r28
 126:	df 91       	pop	r29
 128:	08 95       	ret

0000012a <port_init>:

void port_init(void)
{
 12a:	df 93       	push	r29
 12c:	cf 93       	push	r28
 12e:	cd b7       	in	r28, 0x3d	; 61
 130:	de b7       	in	r29, 0x3e	; 62
 PORTA = 0x00;
 132:	eb e3       	ldi	r30, 0x3B	; 59
 134:	f0 e0       	ldi	r31, 0x00	; 0
 136:	10 82       	st	Z, r1
 DDRA  = 0x00;
 138:	ea e3       	ldi	r30, 0x3A	; 58
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	10 82       	st	Z, r1
 PORTB = 0x00;
 13e:	e8 e3       	ldi	r30, 0x38	; 56
 140:	f0 e0       	ldi	r31, 0x00	; 0
 142:	10 82       	st	Z, r1
 DDRB  = 0x00;
 144:	e7 e3       	ldi	r30, 0x37	; 55
 146:	f0 e0       	ldi	r31, 0x00	; 0
 148:	10 82       	st	Z, r1
 PORTC = 0x00; //m103 output only
 14a:	e5 e3       	ldi	r30, 0x35	; 53
 14c:	f0 e0       	ldi	r31, 0x00	; 0
 14e:	10 82       	st	Z, r1
 DDRC  = 0x00;
 150:	e4 e3       	ldi	r30, 0x34	; 52
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	10 82       	st	Z, r1
 PORTD = 0x00;
 156:	e2 e3       	ldi	r30, 0x32	; 50
 158:	f0 e0       	ldi	r31, 0x00	; 0
 15a:	10 82       	st	Z, r1
 DDRD  = 0xff;
 15c:	e1 e3       	ldi	r30, 0x31	; 49
 15e:	f0 e0       	ldi	r31, 0x00	; 0
 160:	8f ef       	ldi	r24, 0xFF	; 255
 162:	80 83       	st	Z, r24
 PORTE = 0x00;
 164:	e3 e2       	ldi	r30, 0x23	; 35
 166:	f0 e0       	ldi	r31, 0x00	; 0
 168:	10 82       	st	Z, r1
 DDRE  = 0x00;
 16a:	e2 e2       	ldi	r30, 0x22	; 34
 16c:	f0 e0       	ldi	r31, 0x00	; 0
 16e:	10 82       	st	Z, r1
 PORTF = 0x00;
 170:	e2 e6       	ldi	r30, 0x62	; 98
 172:	f0 e0       	ldi	r31, 0x00	; 0
 174:	10 82       	st	Z, r1
 DDRF  = 0x00;
 176:	e1 e6       	ldi	r30, 0x61	; 97
 178:	f0 e0       	ldi	r31, 0x00	; 0
 17a:	10 82       	st	Z, r1
 PORTG = 0x00;
 17c:	e5 e6       	ldi	r30, 0x65	; 101
 17e:	f0 e0       	ldi	r31, 0x00	; 0
 180:	10 82       	st	Z, r1
 DDRG  = 0x00;
 182:	e4 e6       	ldi	r30, 0x64	; 100
 184:	f0 e0       	ldi	r31, 0x00	; 0
 186:	10 82       	st	Z, r1
}
 188:	cf 91       	pop	r28
 18a:	df 91       	pop	r29
 18c:	08 95       	ret

0000018e <uart0_init>:
// desired baud rate: 9600
// actual: baud rate:9615 (0.2%)
// char size: 8 bit
// parity: Disabled
void uart0_init(void)
{
 18e:	df 93       	push	r29
 190:	cf 93       	push	r28
 192:	cd b7       	in	r28, 0x3d	; 61
 194:	de b7       	in	r29, 0x3e	; 62
 UCSR0B = 0x00; //disable while setting baud rate
 196:	ea e2       	ldi	r30, 0x2A	; 42
 198:	f0 e0       	ldi	r31, 0x00	; 0
 19a:	10 82       	st	Z, r1
 UCSR0A = 0x00;
 19c:	eb e2       	ldi	r30, 0x2B	; 43
 19e:	f0 e0       	ldi	r31, 0x00	; 0
 1a0:	10 82       	st	Z, r1
 UCSR0C = 0x06;
 1a2:	e5 e9       	ldi	r30, 0x95	; 149
 1a4:	f0 e0       	ldi	r31, 0x00	; 0
 1a6:	86 e0       	ldi	r24, 0x06	; 6
 1a8:	80 83       	st	Z, r24
 UBRR0L = 0x67; //set baud rate lo
 1aa:	e9 e2       	ldi	r30, 0x29	; 41
 1ac:	f0 e0       	ldi	r31, 0x00	; 0
 1ae:	87 e6       	ldi	r24, 0x67	; 103
 1b0:	80 83       	st	Z, r24
 UBRR0H = 0x00; //set baud rate hi
 1b2:	e0 e9       	ldi	r30, 0x90	; 144
 1b4:	f0 e0       	ldi	r31, 0x00	; 0
 1b6:	10 82       	st	Z, r1
 UCSR0B = 0x18;
 1b8:	ea e2       	ldi	r30, 0x2A	; 42
 1ba:	f0 e0       	ldi	r31, 0x00	; 0
 1bc:	88 e1       	ldi	r24, 0x18	; 24
 1be:	80 83       	st	Z, r24
}
 1c0:	cf 91       	pop	r28
 1c2:	df 91       	pop	r29
 1c4:	08 95       	ret

000001c6 <adc_init>:


//ADC initialize
// Conversion time: 104uS
void adc_init(void)
{
 1c6:	df 93       	push	r29
 1c8:	cf 93       	push	r28
 1ca:	cd b7       	in	r28, 0x3d	; 61
 1cc:	de b7       	in	r29, 0x3e	; 62
 ADCSRA = 0x00; //disable adc
 1ce:	e6 e2       	ldi	r30, 0x26	; 38
 1d0:	f0 e0       	ldi	r31, 0x00	; 0
 1d2:	10 82       	st	Z, r1
 ADMUX  = 0x00; //select adc input 0
 1d4:	e7 e2       	ldi	r30, 0x27	; 39
 1d6:	f0 e0       	ldi	r31, 0x00	; 0
 1d8:	10 82       	st	Z, r1
 ACSR   = 0x80;
 1da:	e8 e2       	ldi	r30, 0x28	; 40
 1dc:	f0 e0       	ldi	r31, 0x00	; 0
 1de:	80 e8       	ldi	r24, 0x80	; 128
 1e0:	80 83       	st	Z, r24
 ADCSRA = 0x87;
 1e2:	e6 e2       	ldi	r30, 0x26	; 38
 1e4:	f0 e0       	ldi	r31, 0x00	; 0
 1e6:	87 e8       	ldi	r24, 0x87	; 135
 1e8:	80 83       	st	Z, r24
}
 1ea:	cf 91       	pop	r28
 1ec:	df 91       	pop	r29
 1ee:	08 95       	ret

000001f0 <init_devices>:

//call this routine to initialize all peripherals
void init_devices(void)
{
 1f0:	df 93       	push	r29
 1f2:	cf 93       	push	r28
 1f4:	cd b7       	in	r28, 0x3d	; 61
 1f6:	de b7       	in	r29, 0x3e	; 62
 //stop errant interrupts until set up
 cli(); //disable all interrupts
 1f8:	f8 94       	cli
 XMCRA = 0x00; //external memory
 1fa:	ed e6       	ldi	r30, 0x6D	; 109
 1fc:	f0 e0       	ldi	r31, 0x00	; 0
 1fe:	10 82       	st	Z, r1
 XMCRB = 0x00; //external memory
 200:	ec e6       	ldi	r30, 0x6C	; 108
 202:	f0 e0       	ldi	r31, 0x00	; 0
 204:	10 82       	st	Z, r1
 port_init();
 206:	0e 94 95 00 	call	0x12a	; 0x12a <port_init>
 uart0_init();
 20a:	0e 94 c7 00 	call	0x18e	; 0x18e <uart0_init>
 fdevopen(Putchar,0);  
 20e:	81 e8       	ldi	r24, 0x81	; 129
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	60 e0       	ldi	r22, 0x00	; 0
 214:	70 e0       	ldi	r23, 0x00	; 0
 216:	0e 94 19 02 	call	0x432	; 0x432 <fdevopen>
 adc_init();
 21a:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <adc_init>

 MCUCR = 0x00;
 21e:	e5 e5       	ldi	r30, 0x55	; 85
 220:	f0 e0       	ldi	r31, 0x00	; 0
 222:	10 82       	st	Z, r1
 EICRA = 0x00; //extended ext ints
 224:	ea e6       	ldi	r30, 0x6A	; 106
 226:	f0 e0       	ldi	r31, 0x00	; 0
 228:	10 82       	st	Z, r1
 EICRB = 0x00; //extended ext ints
 22a:	ea e5       	ldi	r30, 0x5A	; 90
 22c:	f0 e0       	ldi	r31, 0x00	; 0
 22e:	10 82       	st	Z, r1
 EIMSK = 0x00;
 230:	e9 e5       	ldi	r30, 0x59	; 89
 232:	f0 e0       	ldi	r31, 0x00	; 0
 234:	10 82       	st	Z, r1
 TIMSK = 0x00; //timer interrupt sources
 236:	e7 e5       	ldi	r30, 0x57	; 87
 238:	f0 e0       	ldi	r31, 0x00	; 0
 23a:	10 82       	st	Z, r1
 ETIMSK = 0x00; //extended timer interrupt sources
 23c:	ed e7       	ldi	r30, 0x7D	; 125
 23e:	f0 e0       	ldi	r31, 0x00	; 0
 240:	10 82       	st	Z, r1
 
 sei(); //re-enable interrupts
 242:	78 94       	sei
 //all peripherals are now initialized
}
 244:	cf 91       	pop	r28
 246:	df 91       	pop	r29
 248:	08 95       	ret

0000024a <startConvertion>:


// 입력으로 들어오는 채널의 ADC를 스타트 시킨다.
void startConvertion(unsigned char ch)
{
 24a:	df 93       	push	r29
 24c:	cf 93       	push	r28
 24e:	0f 92       	push	r0
 250:	cd b7       	in	r28, 0x3d	; 61
 252:	de b7       	in	r29, 0x3e	; 62
 254:	89 83       	std	Y+1, r24	; 0x01
	ADCSRA = ADCSRA & 0x3f;
 256:	a6 e2       	ldi	r26, 0x26	; 38
 258:	b0 e0       	ldi	r27, 0x00	; 0
 25a:	e6 e2       	ldi	r30, 0x26	; 38
 25c:	f0 e0       	ldi	r31, 0x00	; 0
 25e:	80 81       	ld	r24, Z
 260:	8f 73       	andi	r24, 0x3F	; 63
 262:	8c 93       	st	X, r24
	ADMUX = 0x60 | (ch & 0x0f);
 264:	e7 e2       	ldi	r30, 0x27	; 39
 266:	f0 e0       	ldi	r31, 0x00	; 0
 268:	89 81       	ldd	r24, Y+1	; 0x01
 26a:	8f 70       	andi	r24, 0x0F	; 15
 26c:	80 66       	ori	r24, 0x60	; 96
 26e:	80 83       	st	Z, r24
	ADCSRA = ADCSRA | 0xc0;
 270:	a6 e2       	ldi	r26, 0x26	; 38
 272:	b0 e0       	ldi	r27, 0x00	; 0
 274:	e6 e2       	ldi	r30, 0x26	; 38
 276:	f0 e0       	ldi	r31, 0x00	; 0
 278:	80 81       	ld	r24, Z
 27a:	80 6c       	ori	r24, 0xC0	; 192
 27c:	8c 93       	st	X, r24
}
 27e:	0f 90       	pop	r0
 280:	cf 91       	pop	r28
 282:	df 91       	pop	r29
 284:	08 95       	ret

00000286 <readConvertData>:

// startConvertion() 후에 수행되며 컨터팅 된 값을 리턴한다.  
unsigned char readConvertData(void)
{
 286:	df 93       	push	r29
 288:	cf 93       	push	r28
 28a:	0f 92       	push	r0
 28c:	cd b7       	in	r28, 0x3d	; 61
 28e:	de b7       	in	r29, 0x3e	; 62
	volatile unsigned char temp;
	while((ADCSRA & 0x10)==0);
 290:	e6 e2       	ldi	r30, 0x26	; 38
 292:	f0 e0       	ldi	r31, 0x00	; 0
 294:	80 81       	ld	r24, Z
 296:	88 2f       	mov	r24, r24
 298:	90 e0       	ldi	r25, 0x00	; 0
 29a:	80 71       	andi	r24, 0x10	; 16
 29c:	90 70       	andi	r25, 0x00	; 0
 29e:	00 97       	sbiw	r24, 0x00	; 0
 2a0:	b9 f3       	breq	.-18     	; 0x290 <readConvertData+0xa>
	ADCSRA = ADCSRA | 0x10; 
 2a2:	a6 e2       	ldi	r26, 0x26	; 38
 2a4:	b0 e0       	ldi	r27, 0x00	; 0
 2a6:	e6 e2       	ldi	r30, 0x26	; 38
 2a8:	f0 e0       	ldi	r31, 0x00	; 0
 2aa:	80 81       	ld	r24, Z
 2ac:	80 61       	ori	r24, 0x10	; 16
 2ae:	8c 93       	st	X, r24
	temp = ADCL;
 2b0:	e4 e2       	ldi	r30, 0x24	; 36
 2b2:	f0 e0       	ldi	r31, 0x00	; 0
 2b4:	80 81       	ld	r24, Z
 2b6:	89 83       	std	Y+1, r24	; 0x01
	temp = ADCH;
 2b8:	e5 e2       	ldi	r30, 0x25	; 37
 2ba:	f0 e0       	ldi	r31, 0x00	; 0
 2bc:	80 81       	ld	r24, Z
 2be:	89 83       	std	Y+1, r24	; 0x01
	ADCSRA = ADCSRA | 0x10; 
 2c0:	a6 e2       	ldi	r26, 0x26	; 38
 2c2:	b0 e0       	ldi	r27, 0x00	; 0
 2c4:	e6 e2       	ldi	r30, 0x26	; 38
 2c6:	f0 e0       	ldi	r31, 0x00	; 0
 2c8:	80 81       	ld	r24, Z
 2ca:	80 61       	ori	r24, 0x10	; 16
 2cc:	8c 93       	st	X, r24
	return temp; 
 2ce:	89 81       	ldd	r24, Y+1	; 0x01
}
 2d0:	0f 90       	pop	r0
 2d2:	cf 91       	pop	r28
 2d4:	df 91       	pop	r29
 2d6:	08 95       	ret

000002d8 <delay>:

void delay(int n)
{
 2d8:	df 93       	push	r29
 2da:	cf 93       	push	r28
 2dc:	00 d0       	rcall	.+0      	; 0x2de <delay+0x6>
 2de:	00 d0       	rcall	.+0      	; 0x2e0 <delay+0x8>
 2e0:	00 d0       	rcall	.+0      	; 0x2e2 <delay+0xa>
 2e2:	cd b7       	in	r28, 0x3d	; 61
 2e4:	de b7       	in	r29, 0x3e	; 62
 2e6:	9e 83       	std	Y+6, r25	; 0x06
 2e8:	8d 83       	std	Y+5, r24	; 0x05
	volatile int i,j;
	for(i=1;i<n;i++)
 2ea:	81 e0       	ldi	r24, 0x01	; 1
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	9a 83       	std	Y+2, r25	; 0x02
 2f0:	89 83       	std	Y+1, r24	; 0x01
 2f2:	15 c0       	rjmp	.+42     	; 0x31e <delay+0x46>
	{
    	for(j=1;j<600;j++);
 2f4:	81 e0       	ldi	r24, 0x01	; 1
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	9c 83       	std	Y+4, r25	; 0x04
 2fa:	8b 83       	std	Y+3, r24	; 0x03
 2fc:	05 c0       	rjmp	.+10     	; 0x308 <delay+0x30>
 2fe:	8b 81       	ldd	r24, Y+3	; 0x03
 300:	9c 81       	ldd	r25, Y+4	; 0x04
 302:	01 96       	adiw	r24, 0x01	; 1
 304:	9c 83       	std	Y+4, r25	; 0x04
 306:	8b 83       	std	Y+3, r24	; 0x03
 308:	8b 81       	ldd	r24, Y+3	; 0x03
 30a:	9c 81       	ldd	r25, Y+4	; 0x04
 30c:	22 e0       	ldi	r18, 0x02	; 2
 30e:	88 35       	cpi	r24, 0x58	; 88
 310:	92 07       	cpc	r25, r18
 312:	ac f3       	brlt	.-22     	; 0x2fe <delay+0x26>
}

void delay(int n)
{
	volatile int i,j;
	for(i=1;i<n;i++)
 314:	89 81       	ldd	r24, Y+1	; 0x01
 316:	9a 81       	ldd	r25, Y+2	; 0x02
 318:	01 96       	adiw	r24, 0x01	; 1
 31a:	9a 83       	std	Y+2, r25	; 0x02
 31c:	89 83       	std	Y+1, r24	; 0x01
 31e:	29 81       	ldd	r18, Y+1	; 0x01
 320:	3a 81       	ldd	r19, Y+2	; 0x02
 322:	8d 81       	ldd	r24, Y+5	; 0x05
 324:	9e 81       	ldd	r25, Y+6	; 0x06
 326:	28 17       	cp	r18, r24
 328:	39 07       	cpc	r19, r25
 32a:	24 f3       	brlt	.-56     	; 0x2f4 <delay+0x1c>
	{
    	for(j=1;j<600;j++);
	}
}
 32c:	26 96       	adiw	r28, 0x06	; 6
 32e:	0f b6       	in	r0, 0x3f	; 63
 330:	f8 94       	cli
 332:	de bf       	out	0x3e, r29	; 62
 334:	0f be       	out	0x3f, r0	; 63
 336:	cd bf       	out	0x3d, r28	; 61
 338:	cf 91       	pop	r28
 33a:	df 91       	pop	r29
 33c:	08 95       	ret

0000033e <main>:

//
int main(void)
{
 33e:	df 93       	push	r29
 340:	cf 93       	push	r28
 342:	00 d0       	rcall	.+0      	; 0x344 <main+0x6>
 344:	00 d0       	rcall	.+0      	; 0x346 <main+0x8>
 346:	cd b7       	in	r28, 0x3d	; 61
 348:	de b7       	in	r29, 0x3e	; 62
	volatile unsigned char i, temp,right,left;
	
	init_devices();
 34a:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <init_devices>
	//insert your functional code here..
	printf(" \n\n\rADC test program...\n\r");
 34e:	00 d0       	rcall	.+0      	; 0x350 <main+0x12>
 350:	ed b7       	in	r30, 0x3d	; 61
 352:	fe b7       	in	r31, 0x3e	; 62
 354:	31 96       	adiw	r30, 0x01	; 1
 356:	80 e0       	ldi	r24, 0x00	; 0
 358:	91 e0       	ldi	r25, 0x01	; 1
 35a:	91 83       	std	Z+1, r25	; 0x01
 35c:	80 83       	st	Z, r24
 35e:	0e 94 65 02 	call	0x4ca	; 0x4ca <printf>
 362:	0f 90       	pop	r0
 364:	0f 90       	pop	r0
	PORTG = 0x01;
 366:	e5 e6       	ldi	r30, 0x65	; 101
 368:	f0 e0       	ldi	r31, 0x00	; 0
 36a:	81 e0       	ldi	r24, 0x01	; 1
 36c:	80 83       	st	Z, r24
	delay(500);
 36e:	84 ef       	ldi	r24, 0xF4	; 244
 370:	91 e0       	ldi	r25, 0x01	; 1
 372:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <delay>
	PORTG = 0x02;
 376:	e5 e6       	ldi	r30, 0x65	; 101
 378:	f0 e0       	ldi	r31, 0x00	; 0
 37a:	82 e0       	ldi	r24, 0x02	; 2
 37c:	80 83       	st	Z, r24
	
	//IRS test
	
   	PORTF |= 0x08;
 37e:	a2 e6       	ldi	r26, 0x62	; 98
 380:	b0 e0       	ldi	r27, 0x00	; 0
 382:	e2 e6       	ldi	r30, 0x62	; 98
 384:	f0 e0       	ldi	r31, 0x00	; 0
 386:	80 81       	ld	r24, Z
 388:	88 60       	ori	r24, 0x08	; 8
 38a:	8c 93       	st	X, r24
	while(1)
	{
			DDRF=0x0f;
 38c:	e1 e6       	ldi	r30, 0x61	; 97
 38e:	f0 e0       	ldi	r31, 0x00	; 0
 390:	8f e0       	ldi	r24, 0x0F	; 15
 392:	80 83       	st	Z, r24
			PORTF&=~0x02;
 394:	a2 e6       	ldi	r26, 0x62	; 98
 396:	b0 e0       	ldi	r27, 0x00	; 0
 398:	e2 e6       	ldi	r30, 0x62	; 98
 39a:	f0 e0       	ldi	r31, 0x00	; 0
 39c:	80 81       	ld	r24, Z
 39e:	8d 7f       	andi	r24, 0xFD	; 253
 3a0:	8c 93       	st	X, r24
			PORTF|=0x01;
 3a2:	a2 e6       	ldi	r26, 0x62	; 98
 3a4:	b0 e0       	ldi	r27, 0x00	; 0
 3a6:	e2 e6       	ldi	r30, 0x62	; 98
 3a8:	f0 e0       	ldi	r31, 0x00	; 0
 3aa:	80 81       	ld	r24, Z
 3ac:	81 60       	ori	r24, 0x01	; 1
 3ae:	8c 93       	st	X, r24
	 		startConvertion(7);			// Left sensor Converting
 3b0:	87 e0       	ldi	r24, 0x07	; 7
 3b2:	0e 94 25 01 	call	0x24a	; 0x24a <startConvertion>
	    	left = readConvertData();
 3b6:	0e 94 43 01 	call	0x286	; 0x286 <readConvertData>
 3ba:	8c 83       	std	Y+4, r24	; 0x04
			delay(10);
 3bc:	8a e0       	ldi	r24, 0x0A	; 10
 3be:	90 e0       	ldi	r25, 0x00	; 0
 3c0:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <delay>
			
			PORTF&=~0x01;
 3c4:	a2 e6       	ldi	r26, 0x62	; 98
 3c6:	b0 e0       	ldi	r27, 0x00	; 0
 3c8:	e2 e6       	ldi	r30, 0x62	; 98
 3ca:	f0 e0       	ldi	r31, 0x00	; 0
 3cc:	80 81       	ld	r24, Z
 3ce:	8e 7f       	andi	r24, 0xFE	; 254
 3d0:	8c 93       	st	X, r24
			PORTF|=0x02;
 3d2:	a2 e6       	ldi	r26, 0x62	; 98
 3d4:	b0 e0       	ldi	r27, 0x00	; 0
 3d6:	e2 e6       	ldi	r30, 0x62	; 98
 3d8:	f0 e0       	ldi	r31, 0x00	; 0
 3da:	80 81       	ld	r24, Z
 3dc:	82 60       	ori	r24, 0x02	; 2
 3de:	8c 93       	st	X, r24
	 		startConvertion(6);			// Left sensor Converting
 3e0:	86 e0       	ldi	r24, 0x06	; 6
 3e2:	0e 94 25 01 	call	0x24a	; 0x24a <startConvertion>
	    	right = readConvertData();
 3e6:	0e 94 43 01 	call	0x286	; 0x286 <readConvertData>
 3ea:	8b 83       	std	Y+3, r24	; 0x03
    		printf("left : %d    right : %d \r", left,right);
 3ec:	8c 81       	ldd	r24, Y+4	; 0x04
 3ee:	48 2f       	mov	r20, r24
 3f0:	50 e0       	ldi	r21, 0x00	; 0
 3f2:	8b 81       	ldd	r24, Y+3	; 0x03
 3f4:	28 2f       	mov	r18, r24
 3f6:	30 e0       	ldi	r19, 0x00	; 0
 3f8:	00 d0       	rcall	.+0      	; 0x3fa <main+0xbc>
 3fa:	00 d0       	rcall	.+0      	; 0x3fc <main+0xbe>
 3fc:	00 d0       	rcall	.+0      	; 0x3fe <main+0xc0>
 3fe:	ed b7       	in	r30, 0x3d	; 61
 400:	fe b7       	in	r31, 0x3e	; 62
 402:	31 96       	adiw	r30, 0x01	; 1
 404:	8a e1       	ldi	r24, 0x1A	; 26
 406:	91 e0       	ldi	r25, 0x01	; 1
 408:	91 83       	std	Z+1, r25	; 0x01
 40a:	80 83       	st	Z, r24
 40c:	53 83       	std	Z+3, r21	; 0x03
 40e:	42 83       	std	Z+2, r20	; 0x02
 410:	35 83       	std	Z+5, r19	; 0x05
 412:	24 83       	std	Z+4, r18	; 0x04
 414:	0e 94 65 02 	call	0x4ca	; 0x4ca <printf>
 418:	8d b7       	in	r24, 0x3d	; 61
 41a:	9e b7       	in	r25, 0x3e	; 62
 41c:	06 96       	adiw	r24, 0x06	; 6
 41e:	0f b6       	in	r0, 0x3f	; 63
 420:	f8 94       	cli
 422:	9e bf       	out	0x3e, r25	; 62
 424:	0f be       	out	0x3f, r0	; 63
 426:	8d bf       	out	0x3d, r24	; 61
			delay(10);
 428:	8a e0       	ldi	r24, 0x0A	; 10
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <delay>
 430:	ad cf       	rjmp	.-166    	; 0x38c <main+0x4e>

00000432 <fdevopen>:
 432:	0f 93       	push	r16
 434:	1f 93       	push	r17
 436:	cf 93       	push	r28
 438:	df 93       	push	r29
 43a:	8c 01       	movw	r16, r24
 43c:	eb 01       	movw	r28, r22
 43e:	00 97       	sbiw	r24, 0x00	; 0
 440:	31 f4       	brne	.+12     	; 0x44e <fdevopen+0x1c>
 442:	61 15       	cp	r22, r1
 444:	71 05       	cpc	r23, r1
 446:	19 f4       	brne	.+6      	; 0x44e <fdevopen+0x1c>
 448:	20 e0       	ldi	r18, 0x00	; 0
 44a:	30 e0       	ldi	r19, 0x00	; 0
 44c:	38 c0       	rjmp	.+112    	; 0x4be <fdevopen+0x8c>
 44e:	81 e0       	ldi	r24, 0x01	; 1
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	6e e0       	ldi	r22, 0x0E	; 14
 454:	70 e0       	ldi	r23, 0x00	; 0
 456:	0e 94 7d 04 	call	0x8fa	; 0x8fa <calloc>
 45a:	fc 01       	movw	r30, r24
 45c:	9c 01       	movw	r18, r24
 45e:	00 97       	sbiw	r24, 0x00	; 0
 460:	71 f1       	breq	.+92     	; 0x4be <fdevopen+0x8c>
 462:	80 e8       	ldi	r24, 0x80	; 128
 464:	83 83       	std	Z+3, r24	; 0x03
 466:	20 97       	sbiw	r28, 0x00	; 0
 468:	71 f0       	breq	.+28     	; 0x486 <fdevopen+0x54>
 46a:	d3 87       	std	Z+11, r29	; 0x0b
 46c:	c2 87       	std	Z+10, r28	; 0x0a
 46e:	81 e8       	ldi	r24, 0x81	; 129
 470:	83 83       	std	Z+3, r24	; 0x03
 472:	80 91 3a 01 	lds	r24, 0x013A
 476:	90 91 3b 01 	lds	r25, 0x013B
 47a:	89 2b       	or	r24, r25
 47c:	21 f4       	brne	.+8      	; 0x486 <fdevopen+0x54>
 47e:	f0 93 3b 01 	sts	0x013B, r31
 482:	e0 93 3a 01 	sts	0x013A, r30
 486:	01 15       	cp	r16, r1
 488:	11 05       	cpc	r17, r1
 48a:	c9 f0       	breq	.+50     	; 0x4be <fdevopen+0x8c>
 48c:	11 87       	std	Z+9, r17	; 0x09
 48e:	00 87       	std	Z+8, r16	; 0x08
 490:	83 81       	ldd	r24, Z+3	; 0x03
 492:	82 60       	ori	r24, 0x02	; 2
 494:	83 83       	std	Z+3, r24	; 0x03
 496:	80 91 3c 01 	lds	r24, 0x013C
 49a:	90 91 3d 01 	lds	r25, 0x013D
 49e:	89 2b       	or	r24, r25
 4a0:	71 f4       	brne	.+28     	; 0x4be <fdevopen+0x8c>
 4a2:	f0 93 3d 01 	sts	0x013D, r31
 4a6:	e0 93 3c 01 	sts	0x013C, r30
 4aa:	80 91 3e 01 	lds	r24, 0x013E
 4ae:	90 91 3f 01 	lds	r25, 0x013F
 4b2:	89 2b       	or	r24, r25
 4b4:	21 f4       	brne	.+8      	; 0x4be <fdevopen+0x8c>
 4b6:	f0 93 3f 01 	sts	0x013F, r31
 4ba:	e0 93 3e 01 	sts	0x013E, r30
 4be:	c9 01       	movw	r24, r18
 4c0:	df 91       	pop	r29
 4c2:	cf 91       	pop	r28
 4c4:	1f 91       	pop	r17
 4c6:	0f 91       	pop	r16
 4c8:	08 95       	ret

000004ca <printf>:
 4ca:	df 93       	push	r29
 4cc:	cf 93       	push	r28
 4ce:	cd b7       	in	r28, 0x3d	; 61
 4d0:	de b7       	in	r29, 0x3e	; 62
 4d2:	fe 01       	movw	r30, r28
 4d4:	35 96       	adiw	r30, 0x05	; 5
 4d6:	61 91       	ld	r22, Z+
 4d8:	71 91       	ld	r23, Z+
 4da:	80 91 3c 01 	lds	r24, 0x013C
 4de:	90 91 3d 01 	lds	r25, 0x013D
 4e2:	af 01       	movw	r20, r30
 4e4:	0e 94 77 02 	call	0x4ee	; 0x4ee <vfprintf>
 4e8:	cf 91       	pop	r28
 4ea:	df 91       	pop	r29
 4ec:	08 95       	ret

000004ee <vfprintf>:
 4ee:	2f 92       	push	r2
 4f0:	3f 92       	push	r3
 4f2:	4f 92       	push	r4
 4f4:	5f 92       	push	r5
 4f6:	6f 92       	push	r6
 4f8:	7f 92       	push	r7
 4fa:	8f 92       	push	r8
 4fc:	9f 92       	push	r9
 4fe:	af 92       	push	r10
 500:	bf 92       	push	r11
 502:	cf 92       	push	r12
 504:	df 92       	push	r13
 506:	ef 92       	push	r14
 508:	ff 92       	push	r15
 50a:	0f 93       	push	r16
 50c:	1f 93       	push	r17
 50e:	df 93       	push	r29
 510:	cf 93       	push	r28
 512:	cd b7       	in	r28, 0x3d	; 61
 514:	de b7       	in	r29, 0x3e	; 62
 516:	2b 97       	sbiw	r28, 0x0b	; 11
 518:	0f b6       	in	r0, 0x3f	; 63
 51a:	f8 94       	cli
 51c:	de bf       	out	0x3e, r29	; 62
 51e:	0f be       	out	0x3f, r0	; 63
 520:	cd bf       	out	0x3d, r28	; 61
 522:	3c 01       	movw	r6, r24
 524:	2b 01       	movw	r4, r22
 526:	5a 01       	movw	r10, r20
 528:	fc 01       	movw	r30, r24
 52a:	17 82       	std	Z+7, r1	; 0x07
 52c:	16 82       	std	Z+6, r1	; 0x06
 52e:	83 81       	ldd	r24, Z+3	; 0x03
 530:	81 fd       	sbrc	r24, 1
 532:	03 c0       	rjmp	.+6      	; 0x53a <vfprintf+0x4c>
 534:	6f ef       	ldi	r22, 0xFF	; 255
 536:	7f ef       	ldi	r23, 0xFF	; 255
 538:	c6 c1       	rjmp	.+908    	; 0x8c6 <vfprintf+0x3d8>
 53a:	9a e0       	ldi	r25, 0x0A	; 10
 53c:	89 2e       	mov	r8, r25
 53e:	1e 01       	movw	r2, r28
 540:	08 94       	sec
 542:	21 1c       	adc	r2, r1
 544:	31 1c       	adc	r3, r1
 546:	f3 01       	movw	r30, r6
 548:	23 81       	ldd	r18, Z+3	; 0x03
 54a:	f2 01       	movw	r30, r4
 54c:	23 fd       	sbrc	r18, 3
 54e:	85 91       	lpm	r24, Z+
 550:	23 ff       	sbrs	r18, 3
 552:	81 91       	ld	r24, Z+
 554:	2f 01       	movw	r4, r30
 556:	88 23       	and	r24, r24
 558:	09 f4       	brne	.+2      	; 0x55c <vfprintf+0x6e>
 55a:	b2 c1       	rjmp	.+868    	; 0x8c0 <vfprintf+0x3d2>
 55c:	85 32       	cpi	r24, 0x25	; 37
 55e:	39 f4       	brne	.+14     	; 0x56e <vfprintf+0x80>
 560:	23 fd       	sbrc	r18, 3
 562:	85 91       	lpm	r24, Z+
 564:	23 ff       	sbrs	r18, 3
 566:	81 91       	ld	r24, Z+
 568:	2f 01       	movw	r4, r30
 56a:	85 32       	cpi	r24, 0x25	; 37
 56c:	29 f4       	brne	.+10     	; 0x578 <vfprintf+0x8a>
 56e:	90 e0       	ldi	r25, 0x00	; 0
 570:	b3 01       	movw	r22, r6
 572:	0e 94 bb 05 	call	0xb76	; 0xb76 <fputc>
 576:	e7 cf       	rjmp	.-50     	; 0x546 <vfprintf+0x58>
 578:	98 2f       	mov	r25, r24
 57a:	ff 24       	eor	r15, r15
 57c:	ee 24       	eor	r14, r14
 57e:	99 24       	eor	r9, r9
 580:	ff e1       	ldi	r31, 0x1F	; 31
 582:	ff 15       	cp	r31, r15
 584:	d0 f0       	brcs	.+52     	; 0x5ba <vfprintf+0xcc>
 586:	9b 32       	cpi	r25, 0x2B	; 43
 588:	69 f0       	breq	.+26     	; 0x5a4 <vfprintf+0xb6>
 58a:	9c 32       	cpi	r25, 0x2C	; 44
 58c:	28 f4       	brcc	.+10     	; 0x598 <vfprintf+0xaa>
 58e:	90 32       	cpi	r25, 0x20	; 32
 590:	59 f0       	breq	.+22     	; 0x5a8 <vfprintf+0xba>
 592:	93 32       	cpi	r25, 0x23	; 35
 594:	91 f4       	brne	.+36     	; 0x5ba <vfprintf+0xcc>
 596:	0e c0       	rjmp	.+28     	; 0x5b4 <vfprintf+0xc6>
 598:	9d 32       	cpi	r25, 0x2D	; 45
 59a:	49 f0       	breq	.+18     	; 0x5ae <vfprintf+0xc0>
 59c:	90 33       	cpi	r25, 0x30	; 48
 59e:	69 f4       	brne	.+26     	; 0x5ba <vfprintf+0xcc>
 5a0:	41 e0       	ldi	r20, 0x01	; 1
 5a2:	24 c0       	rjmp	.+72     	; 0x5ec <vfprintf+0xfe>
 5a4:	52 e0       	ldi	r21, 0x02	; 2
 5a6:	f5 2a       	or	r15, r21
 5a8:	84 e0       	ldi	r24, 0x04	; 4
 5aa:	f8 2a       	or	r15, r24
 5ac:	28 c0       	rjmp	.+80     	; 0x5fe <vfprintf+0x110>
 5ae:	98 e0       	ldi	r25, 0x08	; 8
 5b0:	f9 2a       	or	r15, r25
 5b2:	25 c0       	rjmp	.+74     	; 0x5fe <vfprintf+0x110>
 5b4:	e0 e1       	ldi	r30, 0x10	; 16
 5b6:	fe 2a       	or	r15, r30
 5b8:	22 c0       	rjmp	.+68     	; 0x5fe <vfprintf+0x110>
 5ba:	f7 fc       	sbrc	r15, 7
 5bc:	29 c0       	rjmp	.+82     	; 0x610 <vfprintf+0x122>
 5be:	89 2f       	mov	r24, r25
 5c0:	80 53       	subi	r24, 0x30	; 48
 5c2:	8a 30       	cpi	r24, 0x0A	; 10
 5c4:	70 f4       	brcc	.+28     	; 0x5e2 <vfprintf+0xf4>
 5c6:	f6 fe       	sbrs	r15, 6
 5c8:	05 c0       	rjmp	.+10     	; 0x5d4 <vfprintf+0xe6>
 5ca:	98 9c       	mul	r9, r8
 5cc:	90 2c       	mov	r9, r0
 5ce:	11 24       	eor	r1, r1
 5d0:	98 0e       	add	r9, r24
 5d2:	15 c0       	rjmp	.+42     	; 0x5fe <vfprintf+0x110>
 5d4:	e8 9c       	mul	r14, r8
 5d6:	e0 2c       	mov	r14, r0
 5d8:	11 24       	eor	r1, r1
 5da:	e8 0e       	add	r14, r24
 5dc:	f0 e2       	ldi	r31, 0x20	; 32
 5de:	ff 2a       	or	r15, r31
 5e0:	0e c0       	rjmp	.+28     	; 0x5fe <vfprintf+0x110>
 5e2:	9e 32       	cpi	r25, 0x2E	; 46
 5e4:	29 f4       	brne	.+10     	; 0x5f0 <vfprintf+0x102>
 5e6:	f6 fc       	sbrc	r15, 6
 5e8:	6b c1       	rjmp	.+726    	; 0x8c0 <vfprintf+0x3d2>
 5ea:	40 e4       	ldi	r20, 0x40	; 64
 5ec:	f4 2a       	or	r15, r20
 5ee:	07 c0       	rjmp	.+14     	; 0x5fe <vfprintf+0x110>
 5f0:	9c 36       	cpi	r25, 0x6C	; 108
 5f2:	19 f4       	brne	.+6      	; 0x5fa <vfprintf+0x10c>
 5f4:	50 e8       	ldi	r21, 0x80	; 128
 5f6:	f5 2a       	or	r15, r21
 5f8:	02 c0       	rjmp	.+4      	; 0x5fe <vfprintf+0x110>
 5fa:	98 36       	cpi	r25, 0x68	; 104
 5fc:	49 f4       	brne	.+18     	; 0x610 <vfprintf+0x122>
 5fe:	f2 01       	movw	r30, r4
 600:	23 fd       	sbrc	r18, 3
 602:	95 91       	lpm	r25, Z+
 604:	23 ff       	sbrs	r18, 3
 606:	91 91       	ld	r25, Z+
 608:	2f 01       	movw	r4, r30
 60a:	99 23       	and	r25, r25
 60c:	09 f0       	breq	.+2      	; 0x610 <vfprintf+0x122>
 60e:	b8 cf       	rjmp	.-144    	; 0x580 <vfprintf+0x92>
 610:	89 2f       	mov	r24, r25
 612:	85 54       	subi	r24, 0x45	; 69
 614:	83 30       	cpi	r24, 0x03	; 3
 616:	18 f0       	brcs	.+6      	; 0x61e <vfprintf+0x130>
 618:	80 52       	subi	r24, 0x20	; 32
 61a:	83 30       	cpi	r24, 0x03	; 3
 61c:	38 f4       	brcc	.+14     	; 0x62c <vfprintf+0x13e>
 61e:	44 e0       	ldi	r20, 0x04	; 4
 620:	50 e0       	ldi	r21, 0x00	; 0
 622:	a4 0e       	add	r10, r20
 624:	b5 1e       	adc	r11, r21
 626:	5f e3       	ldi	r21, 0x3F	; 63
 628:	59 83       	std	Y+1, r21	; 0x01
 62a:	0f c0       	rjmp	.+30     	; 0x64a <vfprintf+0x15c>
 62c:	93 36       	cpi	r25, 0x63	; 99
 62e:	31 f0       	breq	.+12     	; 0x63c <vfprintf+0x14e>
 630:	93 37       	cpi	r25, 0x73	; 115
 632:	79 f0       	breq	.+30     	; 0x652 <vfprintf+0x164>
 634:	93 35       	cpi	r25, 0x53	; 83
 636:	09 f0       	breq	.+2      	; 0x63a <vfprintf+0x14c>
 638:	56 c0       	rjmp	.+172    	; 0x6e6 <vfprintf+0x1f8>
 63a:	20 c0       	rjmp	.+64     	; 0x67c <vfprintf+0x18e>
 63c:	f5 01       	movw	r30, r10
 63e:	80 81       	ld	r24, Z
 640:	89 83       	std	Y+1, r24	; 0x01
 642:	42 e0       	ldi	r20, 0x02	; 2
 644:	50 e0       	ldi	r21, 0x00	; 0
 646:	a4 0e       	add	r10, r20
 648:	b5 1e       	adc	r11, r21
 64a:	61 01       	movw	r12, r2
 64c:	01 e0       	ldi	r16, 0x01	; 1
 64e:	10 e0       	ldi	r17, 0x00	; 0
 650:	12 c0       	rjmp	.+36     	; 0x676 <vfprintf+0x188>
 652:	f5 01       	movw	r30, r10
 654:	c0 80       	ld	r12, Z
 656:	d1 80       	ldd	r13, Z+1	; 0x01
 658:	f6 fc       	sbrc	r15, 6
 65a:	03 c0       	rjmp	.+6      	; 0x662 <vfprintf+0x174>
 65c:	6f ef       	ldi	r22, 0xFF	; 255
 65e:	7f ef       	ldi	r23, 0xFF	; 255
 660:	02 c0       	rjmp	.+4      	; 0x666 <vfprintf+0x178>
 662:	69 2d       	mov	r22, r9
 664:	70 e0       	ldi	r23, 0x00	; 0
 666:	42 e0       	ldi	r20, 0x02	; 2
 668:	50 e0       	ldi	r21, 0x00	; 0
 66a:	a4 0e       	add	r10, r20
 66c:	b5 1e       	adc	r11, r21
 66e:	c6 01       	movw	r24, r12
 670:	0e 94 b0 05 	call	0xb60	; 0xb60 <strnlen>
 674:	8c 01       	movw	r16, r24
 676:	5f e7       	ldi	r21, 0x7F	; 127
 678:	f5 22       	and	r15, r21
 67a:	14 c0       	rjmp	.+40     	; 0x6a4 <vfprintf+0x1b6>
 67c:	f5 01       	movw	r30, r10
 67e:	c0 80       	ld	r12, Z
 680:	d1 80       	ldd	r13, Z+1	; 0x01
 682:	f6 fc       	sbrc	r15, 6
 684:	03 c0       	rjmp	.+6      	; 0x68c <vfprintf+0x19e>
 686:	6f ef       	ldi	r22, 0xFF	; 255
 688:	7f ef       	ldi	r23, 0xFF	; 255
 68a:	02 c0       	rjmp	.+4      	; 0x690 <vfprintf+0x1a2>
 68c:	69 2d       	mov	r22, r9
 68e:	70 e0       	ldi	r23, 0x00	; 0
 690:	42 e0       	ldi	r20, 0x02	; 2
 692:	50 e0       	ldi	r21, 0x00	; 0
 694:	a4 0e       	add	r10, r20
 696:	b5 1e       	adc	r11, r21
 698:	c6 01       	movw	r24, r12
 69a:	0e 94 9e 05 	call	0xb3c	; 0xb3c <strnlen_P>
 69e:	8c 01       	movw	r16, r24
 6a0:	50 e8       	ldi	r21, 0x80	; 128
 6a2:	f5 2a       	or	r15, r21
 6a4:	f3 fe       	sbrs	r15, 3
 6a6:	07 c0       	rjmp	.+14     	; 0x6b6 <vfprintf+0x1c8>
 6a8:	1a c0       	rjmp	.+52     	; 0x6de <vfprintf+0x1f0>
 6aa:	80 e2       	ldi	r24, 0x20	; 32
 6ac:	90 e0       	ldi	r25, 0x00	; 0
 6ae:	b3 01       	movw	r22, r6
 6b0:	0e 94 bb 05 	call	0xb76	; 0xb76 <fputc>
 6b4:	ea 94       	dec	r14
 6b6:	8e 2d       	mov	r24, r14
 6b8:	90 e0       	ldi	r25, 0x00	; 0
 6ba:	08 17       	cp	r16, r24
 6bc:	19 07       	cpc	r17, r25
 6be:	a8 f3       	brcs	.-22     	; 0x6aa <vfprintf+0x1bc>
 6c0:	0e c0       	rjmp	.+28     	; 0x6de <vfprintf+0x1f0>
 6c2:	f6 01       	movw	r30, r12
 6c4:	f7 fc       	sbrc	r15, 7
 6c6:	85 91       	lpm	r24, Z+
 6c8:	f7 fe       	sbrs	r15, 7
 6ca:	81 91       	ld	r24, Z+
 6cc:	6f 01       	movw	r12, r30
 6ce:	90 e0       	ldi	r25, 0x00	; 0
 6d0:	b3 01       	movw	r22, r6
 6d2:	0e 94 bb 05 	call	0xb76	; 0xb76 <fputc>
 6d6:	e1 10       	cpse	r14, r1
 6d8:	ea 94       	dec	r14
 6da:	01 50       	subi	r16, 0x01	; 1
 6dc:	10 40       	sbci	r17, 0x00	; 0
 6de:	01 15       	cp	r16, r1
 6e0:	11 05       	cpc	r17, r1
 6e2:	79 f7       	brne	.-34     	; 0x6c2 <vfprintf+0x1d4>
 6e4:	ea c0       	rjmp	.+468    	; 0x8ba <vfprintf+0x3cc>
 6e6:	94 36       	cpi	r25, 0x64	; 100
 6e8:	11 f0       	breq	.+4      	; 0x6ee <vfprintf+0x200>
 6ea:	99 36       	cpi	r25, 0x69	; 105
 6ec:	69 f5       	brne	.+90     	; 0x748 <vfprintf+0x25a>
 6ee:	f7 fe       	sbrs	r15, 7
 6f0:	08 c0       	rjmp	.+16     	; 0x702 <vfprintf+0x214>
 6f2:	f5 01       	movw	r30, r10
 6f4:	20 81       	ld	r18, Z
 6f6:	31 81       	ldd	r19, Z+1	; 0x01
 6f8:	42 81       	ldd	r20, Z+2	; 0x02
 6fa:	53 81       	ldd	r21, Z+3	; 0x03
 6fc:	84 e0       	ldi	r24, 0x04	; 4
 6fe:	90 e0       	ldi	r25, 0x00	; 0
 700:	0a c0       	rjmp	.+20     	; 0x716 <vfprintf+0x228>
 702:	f5 01       	movw	r30, r10
 704:	80 81       	ld	r24, Z
 706:	91 81       	ldd	r25, Z+1	; 0x01
 708:	9c 01       	movw	r18, r24
 70a:	44 27       	eor	r20, r20
 70c:	37 fd       	sbrc	r19, 7
 70e:	40 95       	com	r20
 710:	54 2f       	mov	r21, r20
 712:	82 e0       	ldi	r24, 0x02	; 2
 714:	90 e0       	ldi	r25, 0x00	; 0
 716:	a8 0e       	add	r10, r24
 718:	b9 1e       	adc	r11, r25
 71a:	9f e6       	ldi	r25, 0x6F	; 111
 71c:	f9 22       	and	r15, r25
 71e:	57 ff       	sbrs	r21, 7
 720:	09 c0       	rjmp	.+18     	; 0x734 <vfprintf+0x246>
 722:	50 95       	com	r21
 724:	40 95       	com	r20
 726:	30 95       	com	r19
 728:	21 95       	neg	r18
 72a:	3f 4f       	sbci	r19, 0xFF	; 255
 72c:	4f 4f       	sbci	r20, 0xFF	; 255
 72e:	5f 4f       	sbci	r21, 0xFF	; 255
 730:	e0 e8       	ldi	r30, 0x80	; 128
 732:	fe 2a       	or	r15, r30
 734:	ca 01       	movw	r24, r20
 736:	b9 01       	movw	r22, r18
 738:	a1 01       	movw	r20, r2
 73a:	2a e0       	ldi	r18, 0x0A	; 10
 73c:	30 e0       	ldi	r19, 0x00	; 0
 73e:	0e 94 e7 05 	call	0xbce	; 0xbce <__ultoa_invert>
 742:	d8 2e       	mov	r13, r24
 744:	d2 18       	sub	r13, r2
 746:	40 c0       	rjmp	.+128    	; 0x7c8 <vfprintf+0x2da>
 748:	95 37       	cpi	r25, 0x75	; 117
 74a:	29 f4       	brne	.+10     	; 0x756 <vfprintf+0x268>
 74c:	1f 2d       	mov	r17, r15
 74e:	1f 7e       	andi	r17, 0xEF	; 239
 750:	2a e0       	ldi	r18, 0x0A	; 10
 752:	30 e0       	ldi	r19, 0x00	; 0
 754:	1d c0       	rjmp	.+58     	; 0x790 <vfprintf+0x2a2>
 756:	1f 2d       	mov	r17, r15
 758:	19 7f       	andi	r17, 0xF9	; 249
 75a:	9f 36       	cpi	r25, 0x6F	; 111
 75c:	61 f0       	breq	.+24     	; 0x776 <vfprintf+0x288>
 75e:	90 37       	cpi	r25, 0x70	; 112
 760:	20 f4       	brcc	.+8      	; 0x76a <vfprintf+0x27c>
 762:	98 35       	cpi	r25, 0x58	; 88
 764:	09 f0       	breq	.+2      	; 0x768 <vfprintf+0x27a>
 766:	ac c0       	rjmp	.+344    	; 0x8c0 <vfprintf+0x3d2>
 768:	0f c0       	rjmp	.+30     	; 0x788 <vfprintf+0x29a>
 76a:	90 37       	cpi	r25, 0x70	; 112
 76c:	39 f0       	breq	.+14     	; 0x77c <vfprintf+0x28e>
 76e:	98 37       	cpi	r25, 0x78	; 120
 770:	09 f0       	breq	.+2      	; 0x774 <vfprintf+0x286>
 772:	a6 c0       	rjmp	.+332    	; 0x8c0 <vfprintf+0x3d2>
 774:	04 c0       	rjmp	.+8      	; 0x77e <vfprintf+0x290>
 776:	28 e0       	ldi	r18, 0x08	; 8
 778:	30 e0       	ldi	r19, 0x00	; 0
 77a:	0a c0       	rjmp	.+20     	; 0x790 <vfprintf+0x2a2>
 77c:	10 61       	ori	r17, 0x10	; 16
 77e:	14 fd       	sbrc	r17, 4
 780:	14 60       	ori	r17, 0x04	; 4
 782:	20 e1       	ldi	r18, 0x10	; 16
 784:	30 e0       	ldi	r19, 0x00	; 0
 786:	04 c0       	rjmp	.+8      	; 0x790 <vfprintf+0x2a2>
 788:	14 fd       	sbrc	r17, 4
 78a:	16 60       	ori	r17, 0x06	; 6
 78c:	20 e1       	ldi	r18, 0x10	; 16
 78e:	32 e0       	ldi	r19, 0x02	; 2
 790:	17 ff       	sbrs	r17, 7
 792:	08 c0       	rjmp	.+16     	; 0x7a4 <vfprintf+0x2b6>
 794:	f5 01       	movw	r30, r10
 796:	60 81       	ld	r22, Z
 798:	71 81       	ldd	r23, Z+1	; 0x01
 79a:	82 81       	ldd	r24, Z+2	; 0x02
 79c:	93 81       	ldd	r25, Z+3	; 0x03
 79e:	44 e0       	ldi	r20, 0x04	; 4
 7a0:	50 e0       	ldi	r21, 0x00	; 0
 7a2:	08 c0       	rjmp	.+16     	; 0x7b4 <vfprintf+0x2c6>
 7a4:	f5 01       	movw	r30, r10
 7a6:	80 81       	ld	r24, Z
 7a8:	91 81       	ldd	r25, Z+1	; 0x01
 7aa:	bc 01       	movw	r22, r24
 7ac:	80 e0       	ldi	r24, 0x00	; 0
 7ae:	90 e0       	ldi	r25, 0x00	; 0
 7b0:	42 e0       	ldi	r20, 0x02	; 2
 7b2:	50 e0       	ldi	r21, 0x00	; 0
 7b4:	a4 0e       	add	r10, r20
 7b6:	b5 1e       	adc	r11, r21
 7b8:	a1 01       	movw	r20, r2
 7ba:	0e 94 e7 05 	call	0xbce	; 0xbce <__ultoa_invert>
 7be:	d8 2e       	mov	r13, r24
 7c0:	d2 18       	sub	r13, r2
 7c2:	8f e7       	ldi	r24, 0x7F	; 127
 7c4:	f8 2e       	mov	r15, r24
 7c6:	f1 22       	and	r15, r17
 7c8:	f6 fe       	sbrs	r15, 6
 7ca:	0b c0       	rjmp	.+22     	; 0x7e2 <vfprintf+0x2f4>
 7cc:	5e ef       	ldi	r21, 0xFE	; 254
 7ce:	f5 22       	and	r15, r21
 7d0:	d9 14       	cp	r13, r9
 7d2:	38 f4       	brcc	.+14     	; 0x7e2 <vfprintf+0x2f4>
 7d4:	f4 fe       	sbrs	r15, 4
 7d6:	07 c0       	rjmp	.+14     	; 0x7e6 <vfprintf+0x2f8>
 7d8:	f2 fc       	sbrc	r15, 2
 7da:	05 c0       	rjmp	.+10     	; 0x7e6 <vfprintf+0x2f8>
 7dc:	8f ee       	ldi	r24, 0xEF	; 239
 7de:	f8 22       	and	r15, r24
 7e0:	02 c0       	rjmp	.+4      	; 0x7e6 <vfprintf+0x2f8>
 7e2:	1d 2d       	mov	r17, r13
 7e4:	01 c0       	rjmp	.+2      	; 0x7e8 <vfprintf+0x2fa>
 7e6:	19 2d       	mov	r17, r9
 7e8:	f4 fe       	sbrs	r15, 4
 7ea:	0d c0       	rjmp	.+26     	; 0x806 <vfprintf+0x318>
 7ec:	fe 01       	movw	r30, r28
 7ee:	ed 0d       	add	r30, r13
 7f0:	f1 1d       	adc	r31, r1
 7f2:	80 81       	ld	r24, Z
 7f4:	80 33       	cpi	r24, 0x30	; 48
 7f6:	19 f4       	brne	.+6      	; 0x7fe <vfprintf+0x310>
 7f8:	99 ee       	ldi	r25, 0xE9	; 233
 7fa:	f9 22       	and	r15, r25
 7fc:	08 c0       	rjmp	.+16     	; 0x80e <vfprintf+0x320>
 7fe:	1f 5f       	subi	r17, 0xFF	; 255
 800:	f2 fe       	sbrs	r15, 2
 802:	05 c0       	rjmp	.+10     	; 0x80e <vfprintf+0x320>
 804:	03 c0       	rjmp	.+6      	; 0x80c <vfprintf+0x31e>
 806:	8f 2d       	mov	r24, r15
 808:	86 78       	andi	r24, 0x86	; 134
 80a:	09 f0       	breq	.+2      	; 0x80e <vfprintf+0x320>
 80c:	1f 5f       	subi	r17, 0xFF	; 255
 80e:	0f 2d       	mov	r16, r15
 810:	f3 fc       	sbrc	r15, 3
 812:	14 c0       	rjmp	.+40     	; 0x83c <vfprintf+0x34e>
 814:	f0 fe       	sbrs	r15, 0
 816:	0f c0       	rjmp	.+30     	; 0x836 <vfprintf+0x348>
 818:	1e 15       	cp	r17, r14
 81a:	10 f0       	brcs	.+4      	; 0x820 <vfprintf+0x332>
 81c:	9d 2c       	mov	r9, r13
 81e:	0b c0       	rjmp	.+22     	; 0x836 <vfprintf+0x348>
 820:	9d 2c       	mov	r9, r13
 822:	9e 0c       	add	r9, r14
 824:	91 1a       	sub	r9, r17
 826:	1e 2d       	mov	r17, r14
 828:	06 c0       	rjmp	.+12     	; 0x836 <vfprintf+0x348>
 82a:	80 e2       	ldi	r24, 0x20	; 32
 82c:	90 e0       	ldi	r25, 0x00	; 0
 82e:	b3 01       	movw	r22, r6
 830:	0e 94 bb 05 	call	0xb76	; 0xb76 <fputc>
 834:	1f 5f       	subi	r17, 0xFF	; 255
 836:	1e 15       	cp	r17, r14
 838:	c0 f3       	brcs	.-16     	; 0x82a <vfprintf+0x33c>
 83a:	04 c0       	rjmp	.+8      	; 0x844 <vfprintf+0x356>
 83c:	1e 15       	cp	r17, r14
 83e:	10 f4       	brcc	.+4      	; 0x844 <vfprintf+0x356>
 840:	e1 1a       	sub	r14, r17
 842:	01 c0       	rjmp	.+2      	; 0x846 <vfprintf+0x358>
 844:	ee 24       	eor	r14, r14
 846:	04 ff       	sbrs	r16, 4
 848:	0f c0       	rjmp	.+30     	; 0x868 <vfprintf+0x37a>
 84a:	80 e3       	ldi	r24, 0x30	; 48
 84c:	90 e0       	ldi	r25, 0x00	; 0
 84e:	b3 01       	movw	r22, r6
 850:	0e 94 bb 05 	call	0xb76	; 0xb76 <fputc>
 854:	02 ff       	sbrs	r16, 2
 856:	1d c0       	rjmp	.+58     	; 0x892 <vfprintf+0x3a4>
 858:	01 fd       	sbrc	r16, 1
 85a:	03 c0       	rjmp	.+6      	; 0x862 <vfprintf+0x374>
 85c:	88 e7       	ldi	r24, 0x78	; 120
 85e:	90 e0       	ldi	r25, 0x00	; 0
 860:	0e c0       	rjmp	.+28     	; 0x87e <vfprintf+0x390>
 862:	88 e5       	ldi	r24, 0x58	; 88
 864:	90 e0       	ldi	r25, 0x00	; 0
 866:	0b c0       	rjmp	.+22     	; 0x87e <vfprintf+0x390>
 868:	80 2f       	mov	r24, r16
 86a:	86 78       	andi	r24, 0x86	; 134
 86c:	91 f0       	breq	.+36     	; 0x892 <vfprintf+0x3a4>
 86e:	01 ff       	sbrs	r16, 1
 870:	02 c0       	rjmp	.+4      	; 0x876 <vfprintf+0x388>
 872:	8b e2       	ldi	r24, 0x2B	; 43
 874:	01 c0       	rjmp	.+2      	; 0x878 <vfprintf+0x38a>
 876:	80 e2       	ldi	r24, 0x20	; 32
 878:	f7 fc       	sbrc	r15, 7
 87a:	8d e2       	ldi	r24, 0x2D	; 45
 87c:	90 e0       	ldi	r25, 0x00	; 0
 87e:	b3 01       	movw	r22, r6
 880:	0e 94 bb 05 	call	0xb76	; 0xb76 <fputc>
 884:	06 c0       	rjmp	.+12     	; 0x892 <vfprintf+0x3a4>
 886:	80 e3       	ldi	r24, 0x30	; 48
 888:	90 e0       	ldi	r25, 0x00	; 0
 88a:	b3 01       	movw	r22, r6
 88c:	0e 94 bb 05 	call	0xb76	; 0xb76 <fputc>
 890:	9a 94       	dec	r9
 892:	d9 14       	cp	r13, r9
 894:	c0 f3       	brcs	.-16     	; 0x886 <vfprintf+0x398>
 896:	da 94       	dec	r13
 898:	f1 01       	movw	r30, r2
 89a:	ed 0d       	add	r30, r13
 89c:	f1 1d       	adc	r31, r1
 89e:	80 81       	ld	r24, Z
 8a0:	90 e0       	ldi	r25, 0x00	; 0
 8a2:	b3 01       	movw	r22, r6
 8a4:	0e 94 bb 05 	call	0xb76	; 0xb76 <fputc>
 8a8:	dd 20       	and	r13, r13
 8aa:	a9 f7       	brne	.-22     	; 0x896 <vfprintf+0x3a8>
 8ac:	06 c0       	rjmp	.+12     	; 0x8ba <vfprintf+0x3cc>
 8ae:	80 e2       	ldi	r24, 0x20	; 32
 8b0:	90 e0       	ldi	r25, 0x00	; 0
 8b2:	b3 01       	movw	r22, r6
 8b4:	0e 94 bb 05 	call	0xb76	; 0xb76 <fputc>
 8b8:	ea 94       	dec	r14
 8ba:	ee 20       	and	r14, r14
 8bc:	c1 f7       	brne	.-16     	; 0x8ae <vfprintf+0x3c0>
 8be:	43 ce       	rjmp	.-890    	; 0x546 <vfprintf+0x58>
 8c0:	f3 01       	movw	r30, r6
 8c2:	66 81       	ldd	r22, Z+6	; 0x06
 8c4:	77 81       	ldd	r23, Z+7	; 0x07
 8c6:	cb 01       	movw	r24, r22
 8c8:	2b 96       	adiw	r28, 0x0b	; 11
 8ca:	0f b6       	in	r0, 0x3f	; 63
 8cc:	f8 94       	cli
 8ce:	de bf       	out	0x3e, r29	; 62
 8d0:	0f be       	out	0x3f, r0	; 63
 8d2:	cd bf       	out	0x3d, r28	; 61
 8d4:	cf 91       	pop	r28
 8d6:	df 91       	pop	r29
 8d8:	1f 91       	pop	r17
 8da:	0f 91       	pop	r16
 8dc:	ff 90       	pop	r15
 8de:	ef 90       	pop	r14
 8e0:	df 90       	pop	r13
 8e2:	cf 90       	pop	r12
 8e4:	bf 90       	pop	r11
 8e6:	af 90       	pop	r10
 8e8:	9f 90       	pop	r9
 8ea:	8f 90       	pop	r8
 8ec:	7f 90       	pop	r7
 8ee:	6f 90       	pop	r6
 8f0:	5f 90       	pop	r5
 8f2:	4f 90       	pop	r4
 8f4:	3f 90       	pop	r3
 8f6:	2f 90       	pop	r2
 8f8:	08 95       	ret

000008fa <calloc>:
 8fa:	0f 93       	push	r16
 8fc:	1f 93       	push	r17
 8fe:	cf 93       	push	r28
 900:	df 93       	push	r29
 902:	68 9f       	mul	r22, r24
 904:	80 01       	movw	r16, r0
 906:	69 9f       	mul	r22, r25
 908:	10 0d       	add	r17, r0
 90a:	78 9f       	mul	r23, r24
 90c:	10 0d       	add	r17, r0
 90e:	11 24       	eor	r1, r1
 910:	c8 01       	movw	r24, r16
 912:	0e 94 99 04 	call	0x932	; 0x932 <malloc>
 916:	ec 01       	movw	r28, r24
 918:	00 97       	sbiw	r24, 0x00	; 0
 91a:	29 f0       	breq	.+10     	; 0x926 <calloc+0x2c>
 91c:	60 e0       	ldi	r22, 0x00	; 0
 91e:	70 e0       	ldi	r23, 0x00	; 0
 920:	a8 01       	movw	r20, r16
 922:	0e 94 a9 05 	call	0xb52	; 0xb52 <memset>
 926:	ce 01       	movw	r24, r28
 928:	df 91       	pop	r29
 92a:	cf 91       	pop	r28
 92c:	1f 91       	pop	r17
 92e:	0f 91       	pop	r16
 930:	08 95       	ret

00000932 <malloc>:
 932:	cf 93       	push	r28
 934:	df 93       	push	r29
 936:	bc 01       	movw	r22, r24
 938:	82 30       	cpi	r24, 0x02	; 2
 93a:	91 05       	cpc	r25, r1
 93c:	10 f4       	brcc	.+4      	; 0x942 <malloc+0x10>
 93e:	62 e0       	ldi	r22, 0x02	; 2
 940:	70 e0       	ldi	r23, 0x00	; 0
 942:	a0 91 42 01 	lds	r26, 0x0142
 946:	b0 91 43 01 	lds	r27, 0x0143
 94a:	ed 01       	movw	r28, r26
 94c:	e0 e0       	ldi	r30, 0x00	; 0
 94e:	f0 e0       	ldi	r31, 0x00	; 0
 950:	40 e0       	ldi	r20, 0x00	; 0
 952:	50 e0       	ldi	r21, 0x00	; 0
 954:	21 c0       	rjmp	.+66     	; 0x998 <malloc+0x66>
 956:	88 81       	ld	r24, Y
 958:	99 81       	ldd	r25, Y+1	; 0x01
 95a:	86 17       	cp	r24, r22
 95c:	97 07       	cpc	r25, r23
 95e:	69 f4       	brne	.+26     	; 0x97a <malloc+0x48>
 960:	8a 81       	ldd	r24, Y+2	; 0x02
 962:	9b 81       	ldd	r25, Y+3	; 0x03
 964:	30 97       	sbiw	r30, 0x00	; 0
 966:	19 f0       	breq	.+6      	; 0x96e <malloc+0x3c>
 968:	93 83       	std	Z+3, r25	; 0x03
 96a:	82 83       	std	Z+2, r24	; 0x02
 96c:	04 c0       	rjmp	.+8      	; 0x976 <malloc+0x44>
 96e:	90 93 43 01 	sts	0x0143, r25
 972:	80 93 42 01 	sts	0x0142, r24
 976:	fe 01       	movw	r30, r28
 978:	34 c0       	rjmp	.+104    	; 0x9e2 <malloc+0xb0>
 97a:	68 17       	cp	r22, r24
 97c:	79 07       	cpc	r23, r25
 97e:	38 f4       	brcc	.+14     	; 0x98e <malloc+0x5c>
 980:	41 15       	cp	r20, r1
 982:	51 05       	cpc	r21, r1
 984:	19 f0       	breq	.+6      	; 0x98c <malloc+0x5a>
 986:	84 17       	cp	r24, r20
 988:	95 07       	cpc	r25, r21
 98a:	08 f4       	brcc	.+2      	; 0x98e <malloc+0x5c>
 98c:	ac 01       	movw	r20, r24
 98e:	fe 01       	movw	r30, r28
 990:	8a 81       	ldd	r24, Y+2	; 0x02
 992:	9b 81       	ldd	r25, Y+3	; 0x03
 994:	9c 01       	movw	r18, r24
 996:	e9 01       	movw	r28, r18
 998:	20 97       	sbiw	r28, 0x00	; 0
 99a:	e9 f6       	brne	.-70     	; 0x956 <malloc+0x24>
 99c:	41 15       	cp	r20, r1
 99e:	51 05       	cpc	r21, r1
 9a0:	a9 f1       	breq	.+106    	; 0xa0c <malloc+0xda>
 9a2:	ca 01       	movw	r24, r20
 9a4:	86 1b       	sub	r24, r22
 9a6:	97 0b       	sbc	r25, r23
 9a8:	04 97       	sbiw	r24, 0x04	; 4
 9aa:	08 f4       	brcc	.+2      	; 0x9ae <malloc+0x7c>
 9ac:	ba 01       	movw	r22, r20
 9ae:	e0 e0       	ldi	r30, 0x00	; 0
 9b0:	f0 e0       	ldi	r31, 0x00	; 0
 9b2:	2a c0       	rjmp	.+84     	; 0xa08 <malloc+0xd6>
 9b4:	8d 91       	ld	r24, X+
 9b6:	9c 91       	ld	r25, X
 9b8:	11 97       	sbiw	r26, 0x01	; 1
 9ba:	84 17       	cp	r24, r20
 9bc:	95 07       	cpc	r25, r21
 9be:	f9 f4       	brne	.+62     	; 0x9fe <malloc+0xcc>
 9c0:	64 17       	cp	r22, r20
 9c2:	75 07       	cpc	r23, r21
 9c4:	81 f4       	brne	.+32     	; 0x9e6 <malloc+0xb4>
 9c6:	12 96       	adiw	r26, 0x02	; 2
 9c8:	8d 91       	ld	r24, X+
 9ca:	9c 91       	ld	r25, X
 9cc:	13 97       	sbiw	r26, 0x03	; 3
 9ce:	30 97       	sbiw	r30, 0x00	; 0
 9d0:	19 f0       	breq	.+6      	; 0x9d8 <malloc+0xa6>
 9d2:	93 83       	std	Z+3, r25	; 0x03
 9d4:	82 83       	std	Z+2, r24	; 0x02
 9d6:	04 c0       	rjmp	.+8      	; 0x9e0 <malloc+0xae>
 9d8:	90 93 43 01 	sts	0x0143, r25
 9dc:	80 93 42 01 	sts	0x0142, r24
 9e0:	fd 01       	movw	r30, r26
 9e2:	32 96       	adiw	r30, 0x02	; 2
 9e4:	4f c0       	rjmp	.+158    	; 0xa84 <malloc+0x152>
 9e6:	ca 01       	movw	r24, r20
 9e8:	86 1b       	sub	r24, r22
 9ea:	97 0b       	sbc	r25, r23
 9ec:	fd 01       	movw	r30, r26
 9ee:	e8 0f       	add	r30, r24
 9f0:	f9 1f       	adc	r31, r25
 9f2:	61 93       	st	Z+, r22
 9f4:	71 93       	st	Z+, r23
 9f6:	02 97       	sbiw	r24, 0x02	; 2
 9f8:	8d 93       	st	X+, r24
 9fa:	9c 93       	st	X, r25
 9fc:	43 c0       	rjmp	.+134    	; 0xa84 <malloc+0x152>
 9fe:	fd 01       	movw	r30, r26
 a00:	82 81       	ldd	r24, Z+2	; 0x02
 a02:	93 81       	ldd	r25, Z+3	; 0x03
 a04:	9c 01       	movw	r18, r24
 a06:	d9 01       	movw	r26, r18
 a08:	10 97       	sbiw	r26, 0x00	; 0
 a0a:	a1 f6       	brne	.-88     	; 0x9b4 <malloc+0x82>
 a0c:	80 91 40 01 	lds	r24, 0x0140
 a10:	90 91 41 01 	lds	r25, 0x0141
 a14:	89 2b       	or	r24, r25
 a16:	41 f4       	brne	.+16     	; 0xa28 <malloc+0xf6>
 a18:	80 91 36 01 	lds	r24, 0x0136
 a1c:	90 91 37 01 	lds	r25, 0x0137
 a20:	90 93 41 01 	sts	0x0141, r25
 a24:	80 93 40 01 	sts	0x0140, r24
 a28:	40 91 38 01 	lds	r20, 0x0138
 a2c:	50 91 39 01 	lds	r21, 0x0139
 a30:	41 15       	cp	r20, r1
 a32:	51 05       	cpc	r21, r1
 a34:	41 f4       	brne	.+16     	; 0xa46 <malloc+0x114>
 a36:	4d b7       	in	r20, 0x3d	; 61
 a38:	5e b7       	in	r21, 0x3e	; 62
 a3a:	80 91 34 01 	lds	r24, 0x0134
 a3e:	90 91 35 01 	lds	r25, 0x0135
 a42:	48 1b       	sub	r20, r24
 a44:	59 0b       	sbc	r21, r25
 a46:	20 91 40 01 	lds	r18, 0x0140
 a4a:	30 91 41 01 	lds	r19, 0x0141
 a4e:	24 17       	cp	r18, r20
 a50:	35 07       	cpc	r19, r21
 a52:	b0 f4       	brcc	.+44     	; 0xa80 <malloc+0x14e>
 a54:	ca 01       	movw	r24, r20
 a56:	82 1b       	sub	r24, r18
 a58:	93 0b       	sbc	r25, r19
 a5a:	86 17       	cp	r24, r22
 a5c:	97 07       	cpc	r25, r23
 a5e:	80 f0       	brcs	.+32     	; 0xa80 <malloc+0x14e>
 a60:	ab 01       	movw	r20, r22
 a62:	4e 5f       	subi	r20, 0xFE	; 254
 a64:	5f 4f       	sbci	r21, 0xFF	; 255
 a66:	84 17       	cp	r24, r20
 a68:	95 07       	cpc	r25, r21
 a6a:	50 f0       	brcs	.+20     	; 0xa80 <malloc+0x14e>
 a6c:	42 0f       	add	r20, r18
 a6e:	53 1f       	adc	r21, r19
 a70:	50 93 41 01 	sts	0x0141, r21
 a74:	40 93 40 01 	sts	0x0140, r20
 a78:	f9 01       	movw	r30, r18
 a7a:	61 93       	st	Z+, r22
 a7c:	71 93       	st	Z+, r23
 a7e:	02 c0       	rjmp	.+4      	; 0xa84 <malloc+0x152>
 a80:	e0 e0       	ldi	r30, 0x00	; 0
 a82:	f0 e0       	ldi	r31, 0x00	; 0
 a84:	cf 01       	movw	r24, r30
 a86:	df 91       	pop	r29
 a88:	cf 91       	pop	r28
 a8a:	08 95       	ret

00000a8c <free>:
 a8c:	cf 93       	push	r28
 a8e:	df 93       	push	r29
 a90:	00 97       	sbiw	r24, 0x00	; 0
 a92:	09 f4       	brne	.+2      	; 0xa96 <free+0xa>
 a94:	50 c0       	rjmp	.+160    	; 0xb36 <free+0xaa>
 a96:	ec 01       	movw	r28, r24
 a98:	22 97       	sbiw	r28, 0x02	; 2
 a9a:	1b 82       	std	Y+3, r1	; 0x03
 a9c:	1a 82       	std	Y+2, r1	; 0x02
 a9e:	a0 91 42 01 	lds	r26, 0x0142
 aa2:	b0 91 43 01 	lds	r27, 0x0143
 aa6:	10 97       	sbiw	r26, 0x00	; 0
 aa8:	09 f1       	breq	.+66     	; 0xaec <free+0x60>
 aaa:	40 e0       	ldi	r20, 0x00	; 0
 aac:	50 e0       	ldi	r21, 0x00	; 0
 aae:	ac 17       	cp	r26, r28
 ab0:	bd 07       	cpc	r27, r29
 ab2:	08 f1       	brcs	.+66     	; 0xaf6 <free+0x6a>
 ab4:	bb 83       	std	Y+3, r27	; 0x03
 ab6:	aa 83       	std	Y+2, r26	; 0x02
 ab8:	fe 01       	movw	r30, r28
 aba:	21 91       	ld	r18, Z+
 abc:	31 91       	ld	r19, Z+
 abe:	e2 0f       	add	r30, r18
 ac0:	f3 1f       	adc	r31, r19
 ac2:	ae 17       	cp	r26, r30
 ac4:	bf 07       	cpc	r27, r31
 ac6:	79 f4       	brne	.+30     	; 0xae6 <free+0x5a>
 ac8:	8d 91       	ld	r24, X+
 aca:	9c 91       	ld	r25, X
 acc:	11 97       	sbiw	r26, 0x01	; 1
 ace:	28 0f       	add	r18, r24
 ad0:	39 1f       	adc	r19, r25
 ad2:	2e 5f       	subi	r18, 0xFE	; 254
 ad4:	3f 4f       	sbci	r19, 0xFF	; 255
 ad6:	39 83       	std	Y+1, r19	; 0x01
 ad8:	28 83       	st	Y, r18
 ada:	12 96       	adiw	r26, 0x02	; 2
 adc:	8d 91       	ld	r24, X+
 ade:	9c 91       	ld	r25, X
 ae0:	13 97       	sbiw	r26, 0x03	; 3
 ae2:	9b 83       	std	Y+3, r25	; 0x03
 ae4:	8a 83       	std	Y+2, r24	; 0x02
 ae6:	41 15       	cp	r20, r1
 ae8:	51 05       	cpc	r21, r1
 aea:	71 f4       	brne	.+28     	; 0xb08 <free+0x7c>
 aec:	d0 93 43 01 	sts	0x0143, r29
 af0:	c0 93 42 01 	sts	0x0142, r28
 af4:	20 c0       	rjmp	.+64     	; 0xb36 <free+0xaa>
 af6:	12 96       	adiw	r26, 0x02	; 2
 af8:	8d 91       	ld	r24, X+
 afa:	9c 91       	ld	r25, X
 afc:	13 97       	sbiw	r26, 0x03	; 3
 afe:	ad 01       	movw	r20, r26
 b00:	00 97       	sbiw	r24, 0x00	; 0
 b02:	11 f0       	breq	.+4      	; 0xb08 <free+0x7c>
 b04:	dc 01       	movw	r26, r24
 b06:	d3 cf       	rjmp	.-90     	; 0xaae <free+0x22>
 b08:	fa 01       	movw	r30, r20
 b0a:	d3 83       	std	Z+3, r29	; 0x03
 b0c:	c2 83       	std	Z+2, r28	; 0x02
 b0e:	21 91       	ld	r18, Z+
 b10:	31 91       	ld	r19, Z+
 b12:	e2 0f       	add	r30, r18
 b14:	f3 1f       	adc	r31, r19
 b16:	ce 17       	cp	r28, r30
 b18:	df 07       	cpc	r29, r31
 b1a:	69 f4       	brne	.+26     	; 0xb36 <free+0xaa>
 b1c:	88 81       	ld	r24, Y
 b1e:	99 81       	ldd	r25, Y+1	; 0x01
 b20:	28 0f       	add	r18, r24
 b22:	39 1f       	adc	r19, r25
 b24:	2e 5f       	subi	r18, 0xFE	; 254
 b26:	3f 4f       	sbci	r19, 0xFF	; 255
 b28:	fa 01       	movw	r30, r20
 b2a:	31 83       	std	Z+1, r19	; 0x01
 b2c:	20 83       	st	Z, r18
 b2e:	8a 81       	ldd	r24, Y+2	; 0x02
 b30:	9b 81       	ldd	r25, Y+3	; 0x03
 b32:	93 83       	std	Z+3, r25	; 0x03
 b34:	82 83       	std	Z+2, r24	; 0x02
 b36:	df 91       	pop	r29
 b38:	cf 91       	pop	r28
 b3a:	08 95       	ret

00000b3c <strnlen_P>:
 b3c:	fc 01       	movw	r30, r24
 b3e:	05 90       	lpm	r0, Z+
 b40:	61 50       	subi	r22, 0x01	; 1
 b42:	70 40       	sbci	r23, 0x00	; 0
 b44:	01 10       	cpse	r0, r1
 b46:	d8 f7       	brcc	.-10     	; 0xb3e <strnlen_P+0x2>
 b48:	80 95       	com	r24
 b4a:	90 95       	com	r25
 b4c:	8e 0f       	add	r24, r30
 b4e:	9f 1f       	adc	r25, r31
 b50:	08 95       	ret

00000b52 <memset>:
 b52:	dc 01       	movw	r26, r24
 b54:	01 c0       	rjmp	.+2      	; 0xb58 <memset+0x6>
 b56:	6d 93       	st	X+, r22
 b58:	41 50       	subi	r20, 0x01	; 1
 b5a:	50 40       	sbci	r21, 0x00	; 0
 b5c:	e0 f7       	brcc	.-8      	; 0xb56 <memset+0x4>
 b5e:	08 95       	ret

00000b60 <strnlen>:
 b60:	fc 01       	movw	r30, r24
 b62:	61 50       	subi	r22, 0x01	; 1
 b64:	70 40       	sbci	r23, 0x00	; 0
 b66:	01 90       	ld	r0, Z+
 b68:	01 10       	cpse	r0, r1
 b6a:	d8 f7       	brcc	.-10     	; 0xb62 <strnlen+0x2>
 b6c:	80 95       	com	r24
 b6e:	90 95       	com	r25
 b70:	8e 0f       	add	r24, r30
 b72:	9f 1f       	adc	r25, r31
 b74:	08 95       	ret

00000b76 <fputc>:
 b76:	0f 93       	push	r16
 b78:	1f 93       	push	r17
 b7a:	cf 93       	push	r28
 b7c:	df 93       	push	r29
 b7e:	8c 01       	movw	r16, r24
 b80:	eb 01       	movw	r28, r22
 b82:	8b 81       	ldd	r24, Y+3	; 0x03
 b84:	81 ff       	sbrs	r24, 1
 b86:	1b c0       	rjmp	.+54     	; 0xbbe <fputc+0x48>
 b88:	82 ff       	sbrs	r24, 2
 b8a:	0d c0       	rjmp	.+26     	; 0xba6 <fputc+0x30>
 b8c:	2e 81       	ldd	r18, Y+6	; 0x06
 b8e:	3f 81       	ldd	r19, Y+7	; 0x07
 b90:	8c 81       	ldd	r24, Y+4	; 0x04
 b92:	9d 81       	ldd	r25, Y+5	; 0x05
 b94:	28 17       	cp	r18, r24
 b96:	39 07       	cpc	r19, r25
 b98:	64 f4       	brge	.+24     	; 0xbb2 <fputc+0x3c>
 b9a:	e8 81       	ld	r30, Y
 b9c:	f9 81       	ldd	r31, Y+1	; 0x01
 b9e:	01 93       	st	Z+, r16
 ba0:	f9 83       	std	Y+1, r31	; 0x01
 ba2:	e8 83       	st	Y, r30
 ba4:	06 c0       	rjmp	.+12     	; 0xbb2 <fputc+0x3c>
 ba6:	e8 85       	ldd	r30, Y+8	; 0x08
 ba8:	f9 85       	ldd	r31, Y+9	; 0x09
 baa:	80 2f       	mov	r24, r16
 bac:	09 95       	icall
 bae:	89 2b       	or	r24, r25
 bb0:	31 f4       	brne	.+12     	; 0xbbe <fputc+0x48>
 bb2:	8e 81       	ldd	r24, Y+6	; 0x06
 bb4:	9f 81       	ldd	r25, Y+7	; 0x07
 bb6:	01 96       	adiw	r24, 0x01	; 1
 bb8:	9f 83       	std	Y+7, r25	; 0x07
 bba:	8e 83       	std	Y+6, r24	; 0x06
 bbc:	02 c0       	rjmp	.+4      	; 0xbc2 <fputc+0x4c>
 bbe:	0f ef       	ldi	r16, 0xFF	; 255
 bc0:	1f ef       	ldi	r17, 0xFF	; 255
 bc2:	c8 01       	movw	r24, r16
 bc4:	df 91       	pop	r29
 bc6:	cf 91       	pop	r28
 bc8:	1f 91       	pop	r17
 bca:	0f 91       	pop	r16
 bcc:	08 95       	ret

00000bce <__ultoa_invert>:
 bce:	fa 01       	movw	r30, r20
 bd0:	aa 27       	eor	r26, r26
 bd2:	28 30       	cpi	r18, 0x08	; 8
 bd4:	51 f1       	breq	.+84     	; 0xc2a <__ultoa_invert+0x5c>
 bd6:	20 31       	cpi	r18, 0x10	; 16
 bd8:	81 f1       	breq	.+96     	; 0xc3a <__ultoa_invert+0x6c>
 bda:	e8 94       	clt
 bdc:	6f 93       	push	r22
 bde:	6e 7f       	andi	r22, 0xFE	; 254
 be0:	6e 5f       	subi	r22, 0xFE	; 254
 be2:	7f 4f       	sbci	r23, 0xFF	; 255
 be4:	8f 4f       	sbci	r24, 0xFF	; 255
 be6:	9f 4f       	sbci	r25, 0xFF	; 255
 be8:	af 4f       	sbci	r26, 0xFF	; 255
 bea:	b1 e0       	ldi	r27, 0x01	; 1
 bec:	3e d0       	rcall	.+124    	; 0xc6a <__ultoa_invert+0x9c>
 bee:	b4 e0       	ldi	r27, 0x04	; 4
 bf0:	3c d0       	rcall	.+120    	; 0xc6a <__ultoa_invert+0x9c>
 bf2:	67 0f       	add	r22, r23
 bf4:	78 1f       	adc	r23, r24
 bf6:	89 1f       	adc	r24, r25
 bf8:	9a 1f       	adc	r25, r26
 bfa:	a1 1d       	adc	r26, r1
 bfc:	68 0f       	add	r22, r24
 bfe:	79 1f       	adc	r23, r25
 c00:	8a 1f       	adc	r24, r26
 c02:	91 1d       	adc	r25, r1
 c04:	a1 1d       	adc	r26, r1
 c06:	6a 0f       	add	r22, r26
 c08:	71 1d       	adc	r23, r1
 c0a:	81 1d       	adc	r24, r1
 c0c:	91 1d       	adc	r25, r1
 c0e:	a1 1d       	adc	r26, r1
 c10:	20 d0       	rcall	.+64     	; 0xc52 <__ultoa_invert+0x84>
 c12:	09 f4       	brne	.+2      	; 0xc16 <__ultoa_invert+0x48>
 c14:	68 94       	set
 c16:	3f 91       	pop	r19
 c18:	2a e0       	ldi	r18, 0x0A	; 10
 c1a:	26 9f       	mul	r18, r22
 c1c:	11 24       	eor	r1, r1
 c1e:	30 19       	sub	r19, r0
 c20:	30 5d       	subi	r19, 0xD0	; 208
 c22:	31 93       	st	Z+, r19
 c24:	de f6       	brtc	.-74     	; 0xbdc <__ultoa_invert+0xe>
 c26:	cf 01       	movw	r24, r30
 c28:	08 95       	ret
 c2a:	46 2f       	mov	r20, r22
 c2c:	47 70       	andi	r20, 0x07	; 7
 c2e:	40 5d       	subi	r20, 0xD0	; 208
 c30:	41 93       	st	Z+, r20
 c32:	b3 e0       	ldi	r27, 0x03	; 3
 c34:	0f d0       	rcall	.+30     	; 0xc54 <__ultoa_invert+0x86>
 c36:	c9 f7       	brne	.-14     	; 0xc2a <__ultoa_invert+0x5c>
 c38:	f6 cf       	rjmp	.-20     	; 0xc26 <__ultoa_invert+0x58>
 c3a:	46 2f       	mov	r20, r22
 c3c:	4f 70       	andi	r20, 0x0F	; 15
 c3e:	40 5d       	subi	r20, 0xD0	; 208
 c40:	4a 33       	cpi	r20, 0x3A	; 58
 c42:	18 f0       	brcs	.+6      	; 0xc4a <__ultoa_invert+0x7c>
 c44:	49 5d       	subi	r20, 0xD9	; 217
 c46:	31 fd       	sbrc	r19, 1
 c48:	40 52       	subi	r20, 0x20	; 32
 c4a:	41 93       	st	Z+, r20
 c4c:	02 d0       	rcall	.+4      	; 0xc52 <__ultoa_invert+0x84>
 c4e:	a9 f7       	brne	.-22     	; 0xc3a <__ultoa_invert+0x6c>
 c50:	ea cf       	rjmp	.-44     	; 0xc26 <__ultoa_invert+0x58>
 c52:	b4 e0       	ldi	r27, 0x04	; 4
 c54:	a6 95       	lsr	r26
 c56:	97 95       	ror	r25
 c58:	87 95       	ror	r24
 c5a:	77 95       	ror	r23
 c5c:	67 95       	ror	r22
 c5e:	ba 95       	dec	r27
 c60:	c9 f7       	brne	.-14     	; 0xc54 <__ultoa_invert+0x86>
 c62:	00 97       	sbiw	r24, 0x00	; 0
 c64:	61 05       	cpc	r22, r1
 c66:	71 05       	cpc	r23, r1
 c68:	08 95       	ret
 c6a:	9b 01       	movw	r18, r22
 c6c:	ac 01       	movw	r20, r24
 c6e:	0a 2e       	mov	r0, r26
 c70:	06 94       	lsr	r0
 c72:	57 95       	ror	r21
 c74:	47 95       	ror	r20
 c76:	37 95       	ror	r19
 c78:	27 95       	ror	r18
 c7a:	ba 95       	dec	r27
 c7c:	c9 f7       	brne	.-14     	; 0xc70 <__ultoa_invert+0xa2>
 c7e:	62 0f       	add	r22, r18
 c80:	73 1f       	adc	r23, r19
 c82:	84 1f       	adc	r24, r20
 c84:	95 1f       	adc	r25, r21
 c86:	a0 1d       	adc	r26, r0
 c88:	08 95       	ret

00000c8a <_exit>:
 c8a:	f8 94       	cli

00000c8c <__stop_program>:
 c8c:	ff cf       	rjmp	.-2      	; 0xc8c <__stop_program>
