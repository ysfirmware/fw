/* ============================================================================ */
/*	OK-STM746 V1.0 키트용(STM32F746VET6) 매우/가장 큰 글씨 헤더 파일	*/
/* ============================================================================ */
/*					Programmed by Duck-Yong Yoon in 2015.   */

// -------------------------------------------------------------------------------
//   이 헤더파일은 OK-STM746 키트 V1.0을 위한 것입니다. 이것은 아래의 조건에서만
//  올바른 동작을 보장합니다.
// -------------------------------------------------------------------------------
//	(1) 시스템 클록  : 216MHz
//	(2) C 컴파일러   : IAR EWARM V7.50.1
//	(3) 최적화 옵션  : High/Size
//	(4) CSTACK 크기  : 0x1000
//	(5) TFT-LCD 모듈 : Ohm사 FL320QVC18-A0(HX8347A)
//      (6) 인클루드     : 기본 헤더 파일 OK-STM746.h의 뒤에 인클루드할 것.
// -------------------------------------------------------------------------------

/* ---------------------------------------------------------------------------- */
/*		32x48 픽셀의 매우 큰 글씨 폰트(명조체)				*/
/* ---------------------------------------------------------------------------- */
const unsigned char font_32x48[17][192] = {		/* 32x48 character font */
 {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0xf0,0x00,0x00,0x3f,0xfc,0x00, // '0'
  0x00,0xff,0xff,0x00,0x01,0xfe,0x7f,0x80,0x01,0xfc,0x1f,0xc0,0x03,0xf8,0x1f,0xc0, 
  0x07,0xf0,0x0f,0xe0,0x07,0xf0,0x0f,0xe0,0x0f,0xe0,0x07,0xf0,0x0f,0xe0,0x07,0xf0, 
  0x0f,0xe0,0x07,0xf8,0x1f,0xe0,0x07,0xf8,0x1f,0xc0,0x03,0xf8,0x1f,0xc0,0x03,0xf8, 
  0x1f,0xc0,0x03,0xfc,0x1f,0xc0,0x03,0xfc,0x3f,0xc0,0x03,0xfc,0x3f,0xc0,0x03,0xfc, 
  0x3f,0xc0,0x03,0xfc,0x3f,0xc0,0x03,0xfc,0x3f,0xc0,0x03,0xfc,0x3f,0xc0,0x03,0xfc, 
  0x3f,0xc0,0x03,0xfc,0x3f,0xc0,0x03,0xfc,0x3f,0xc0,0x03,0xfc,0x1f,0xc0,0x03,0xfc, 
  0x1f,0xc0,0x03,0xfc,0x1f,0xc0,0x03,0xf8,0x1f,0xc0,0x03,0xf8,0x1f,0xe0,0x07,0xf8, 
  0x0f,0xe0,0x07,0xf8,0x0f,0xe0,0x07,0xf0,0x0f,0xe0,0x07,0xf0,0x07,0xf0,0x0f,0xe0, 
  0x07,0xf0,0x0f,0xe0,0x03,0xf8,0x1f,0xc0,0x01,0xfc,0x1f,0xc0,0x01,0xfe,0x7f,0x80, 
  0x00,0xff,0xff,0x00,0x00,0x3f,0xfc,0x00,0x00,0x0f,0xf0,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
 {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x00,0x00,0x01,0xf0,0x00, // '1'
  0x00,0x0f,0xf0,0x00,0x00,0xff,0xf0,0x00,0x03,0xff,0xf0,0x00,0x03,0xff,0xf0,0x00, 
  0x00,0x0f,0xf0,0x00,0x00,0x07,0xf0,0x00,0x00,0x07,0xf0,0x00,0x00,0x07,0xf0,0x00, 
  0x00,0x07,0xf0,0x00,0x00,0x07,0xf0,0x00,0x00,0x07,0xf0,0x00,0x00,0x07,0xf0,0x00, 
  0x00,0x07,0xf0,0x00,0x00,0x07,0xf0,0x00,0x00,0x07,0xf0,0x00,0x00,0x07,0xf0,0x00, 
  0x00,0x07,0xf0,0x00,0x00,0x07,0xf0,0x00,0x00,0x07,0xf0,0x00,0x00,0x07,0xf0,0x00, 
  0x00,0x07,0xf0,0x00,0x00,0x07,0xf0,0x00,0x00,0x07,0xf0,0x00,0x00,0x07,0xf0,0x00, 
  0x00,0x07,0xf0,0x00,0x00,0x07,0xf0,0x00,0x00,0x07,0xf0,0x00,0x00,0x07,0xf0,0x00, 
  0x00,0x07,0xf0,0x00,0x00,0x07,0xf0,0x00,0x00,0x07,0xf0,0x00,0x00,0x07,0xf0,0x00, 
  0x00,0x07,0xf0,0x00,0x00,0x07,0xf8,0x00,0x00,0x0f,0xfc,0x00,0x07,0xff,0xff,0xe0, 
  0x07,0xff,0xff,0xf0,0x07,0xff,0xff,0xf0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
 {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1f,0xf8,0x00,0x00,0xff,0xff,0x00, // '2'
  0x01,0xff,0xff,0xc0,0x07,0xf8,0x3f,0xe0,0x0f,0xe0,0x1f,0xe0,0x1f,0xc0,0x0f,0xf0, 
  0x1f,0xe0,0x0f,0xf0,0x1f,0xe0,0x07,0xf8,0x1f,0xf0,0x07,0xf8,0x1f,0xf8,0x07,0xf8, 
  0x1f,0xf8,0x07,0xf8,0x1f,0xf0,0x07,0xf8,0x1f,0xf0,0x07,0xf8,0x0f,0xe0,0x0f,0xf8, 
  0x00,0x00,0x0f,0xf8,0x00,0x00,0x0f,0xf8,0x00,0x00,0x1f,0xf0,0x00,0x00,0x3f,0xf0, 
  0x00,0x00,0x7f,0xe0,0x00,0x00,0x7f,0xc0,0x00,0x00,0xff,0x80,0x00,0x01,0xff,0x00, 
  0x00,0x03,0xfe,0x00,0x00,0x07,0xfc,0x00,0x00,0x0f,0xf8,0x00,0x00,0x1f,0xe0,0x00, 
  0x00,0x3f,0xc0,0x00,0x00,0x7f,0x80,0x00,0x00,0xfe,0x00,0x00,0x01,0xfc,0x00,0x3c, 
  0x03,0xf8,0x00,0x3c,0x03,0xe0,0x00,0x78,0x07,0xc0,0x00,0x78,0x0f,0xc0,0x00,0xf8, 
  0x0f,0x80,0x01,0xf8,0x1f,0xff,0xff,0xf0,0x1f,0xff,0xff,0xf0,0x1f,0xff,0xff,0xf0, 
  0x1f,0xff,0xff,0xf0,0x1f,0xff,0xff,0xe0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
 {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1f,0xfc,0x00,0x00,0xff,0xff,0x80, // '3'
  0x01,0xff,0xff,0xc0,0x07,0xfc,0x3f,0xe0,0x07,0xf8,0x1f,0xf0,0x0f,0xf0,0x0f,0xf0, 
  0x0f,0xf0,0x0f,0xf0,0x0f,0xf0,0x07,0xf8,0x0f,0xf0,0x07,0xf8,0x0f,0xf0,0x07,0xf8, 
  0x0f,0xf0,0x07,0xf8,0x07,0xe0,0x07,0xf8,0x00,0x00,0x07,0xf0,0x00,0x00,0x0f,0xf0, 
  0x00,0x00,0x0f,0xf0,0x00,0x00,0x1f,0xe0,0x00,0x00,0x3f,0xc0,0x00,0x01,0xff,0x80, 
  0x00,0x3f,0xfe,0x00,0x00,0x3f,0xfe,0x00,0x00,0x3f,0xff,0x80,0x00,0x00,0x7f,0xc0, 
  0x00,0x00,0x1f,0xe0,0x00,0x00,0x0f,0xf0,0x00,0x00,0x07,0xf8,0x00,0x00,0x07,0xf8, 
  0x00,0x00,0x03,0xfc,0x00,0x00,0x03,0xfc,0x0f,0xc0,0x03,0xfc,0x1f,0xe0,0x03,0xfc, 
  0x3f,0xe0,0x03,0xfc,0x3f,0xe0,0x03,0xfc,0x3f,0xe0,0x03,0xfc,0x3f,0xe0,0x07,0xf8, 
  0x3f,0xe0,0x07,0xf8,0x1f,0xe0,0x0f,0xf0,0x1f,0xe0,0x1f,0xf0,0x0f,0xf0,0x7f,0xe0, 
  0x07,0xff,0xff,0x80,0x01,0xff,0xfe,0x00,0x00,0x7f,0xf0,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
 {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x80,0x00,0x00,0x1f,0x80, // '4'
  0x00,0x00,0x3f,0x80,0x00,0x00,0x3f,0x80,0x00,0x00,0x7f,0x80,0x00,0x00,0xff,0x80, 
  0x00,0x00,0xff,0x80,0x00,0x01,0xff,0x80,0x00,0x03,0xff,0x80,0x00,0x03,0xff,0x80, 
  0x00,0x07,0xff,0x80,0x00,0x0f,0xff,0x80,0x00,0x1f,0x3f,0x80,0x00,0x1f,0x3f,0x80, 
  0x00,0x3e,0x3f,0x80,0x00,0x7c,0x3f,0x80,0x00,0x7c,0x3f,0x80,0x00,0xf8,0x3f,0x80, 
  0x01,0xf0,0x3f,0x80,0x01,0xe0,0x3f,0x80,0x03,0xe0,0x3f,0x80,0x07,0xc0,0x3f,0x80, 
  0x0f,0x80,0x3f,0x80,0x0f,0x80,0x3f,0x80,0x1f,0x00,0x3f,0x80,0x3e,0x00,0x3f,0x80, 
  0x3e,0x00,0x3f,0x80,0x7f,0xff,0xff,0xfc,0x7f,0xff,0xff,0xfc,0x7f,0xff,0xff,0xfc, 
  0x7f,0xff,0xff,0xfc,0x00,0x00,0x3f,0x80,0x00,0x00,0x3f,0x80,0x00,0x00,0x3f,0x80, 
  0x00,0x00,0x3f,0x80,0x00,0x00,0x3f,0x80,0x00,0x00,0x7f,0xc0,0x00,0x07,0xff,0xf8, 
  0x00,0x07,0xff,0xf8,0x00,0x07,0xff,0xf8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
 {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x07,0xff,0xff,0xf8, // '5'
  0x07,0xff,0xff,0xf8,0x07,0xff,0xff,0xf8,0x07,0xff,0xff,0xf0,0x07,0xff,0xff,0xf0, 
  0x07,0xff,0xff,0xc0,0x07,0x80,0x00,0x00,0x07,0x80,0x00,0x00,0x07,0x80,0x00,0x00, 
  0x07,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0x0f,0x00,0x00,0x00, 
  0x0f,0x00,0x00,0x00,0x0f,0x1f,0xf0,0x00,0x0f,0xff,0xfe,0x00,0x0f,0xff,0xff,0x80, 
  0x0f,0xf0,0xff,0xc0,0x0f,0xc0,0x3f,0xe0,0x0f,0x00,0x1f,0xf0,0x0e,0x00,0x0f,0xf0, 
  0x00,0x00,0x07,0xf8,0x00,0x00,0x07,0xf8,0x00,0x00,0x03,0xfc,0x00,0x00,0x03,0xfc, 
  0x00,0x00,0x03,0xfc,0x0f,0x80,0x03,0xfc,0x1f,0xe0,0x03,0xfc,0x3f,0xe0,0x03,0xfc, 
  0x3f,0xe0,0x03,0xfc,0x3f,0xe0,0x03,0xfc,0x3f,0xe0,0x07,0xf8,0x3f,0xe0,0x07,0xf8, 
  0x3f,0xe0,0x0f,0xf0,0x1f,0xe0,0x1f,0xf0,0x1f,0xc0,0x3f,0xe0,0x0f,0xe0,0xff,0xc0, 
  0x07,0xff,0xff,0x80,0x03,0xff,0xfe,0x00,0x00,0x7f,0xf0,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
 {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xfe,0x00,0x00,0x1f,0xff,0xc0, // '6'
  0x00,0x7f,0xff,0xe0,0x00,0xff,0x0f,0xf0,0x01,0xfc,0x0f,0xf8,0x03,0xf8,0x0f,0xf8, 
  0x07,0xf8,0x0f,0xf8,0x07,0xf0,0x0f,0xf8,0x0f,0xf0,0x07,0xf8,0x0f,0xe0,0x07,0xf0, 
  0x0f,0xe0,0x03,0xe0,0x1f,0xe0,0x00,0x00,0x1f,0xc0,0x00,0x00,0x1f,0xc0,0x00,0x00, 
  0x1f,0xc0,0x00,0x00,0x3f,0xc3,0xff,0x00,0x3f,0xdf,0xff,0xc0,0x3f,0xff,0xff,0xe0, 
  0x3f,0xfe,0x1f,0xf0,0x3f,0xf8,0x0f,0xf0,0x3f,0xf0,0x07,0xf8,0x3f,0xe0,0x03,0xf8, 
  0x3f,0xc0,0x03,0xfc,0x3f,0xc0,0x03,0xfc,0x3f,0xc0,0x03,0xfc,0x3f,0xc0,0x03,0xfc, 
  0x3f,0xc0,0x03,0xfc,0x3f,0xc0,0x03,0xfc,0x3f,0xc0,0x03,0xfc,0x1f,0xc0,0x03,0xfc, 
  0x1f,0xc0,0x03,0xfc,0x1f,0xe0,0x03,0xfc,0x1f,0xe0,0x03,0xf8,0x0f,0xe0,0x07,0xf8, 
  0x0f,0xf0,0x07,0xf8,0x07,0xf0,0x0f,0xf0,0x07,0xf8,0x0f,0xe0,0x03,0xfe,0x3f,0xe0, 
  0x01,0xff,0xff,0x80,0x00,0x7f,0xff,0x00,0x00,0x1f,0xf8,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
 {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0xff,0xff,0xfc, // '7'
  0x0f,0xff,0xff,0xfc,0x0f,0xff,0xff,0xfc,0x0f,0xff,0xff,0xfc,0x0f,0xff,0xff,0xfc, 
  0x0f,0xff,0xff,0xf8,0x1f,0x80,0x01,0xf8,0x1f,0x00,0x03,0xf0,0x1e,0x00,0x03,0xe0, 
  0x1e,0x00,0x07,0xe0,0x1c,0x00,0x0f,0xc0,0x1c,0x00,0x0f,0x80,0x1c,0x00,0x1f,0x80, 
  0x00,0x00,0x1f,0x00,0x00,0x00,0x3f,0x00,0x00,0x00,0x7e,0x00,0x00,0x00,0x7e,0x00, 
  0x00,0x00,0xfc,0x00,0x00,0x00,0xfc,0x00,0x00,0x01,0xf8,0x00,0x00,0x03,0xf8,0x00, 
  0x00,0x03,0xf8,0x00,0x00,0x07,0xf0,0x00,0x00,0x07,0xf0,0x00,0x00,0x07,0xf0,0x00, 
  0x00,0x0f,0xf0,0x00,0x00,0x0f,0xe0,0x00,0x00,0x1f,0xe0,0x00,0x00,0x1f,0xe0,0x00, 
  0x00,0x1f,0xe0,0x00,0x00,0x1f,0xe0,0x00,0x00,0x3f,0xe0,0x00,0x00,0x3f,0xe0,0x00, 
  0x00,0x3f,0xe0,0x00,0x00,0x3f,0xe0,0x00,0x00,0x3f,0xe0,0x00,0x00,0x3f,0xe0,0x00, 
  0x00,0x3f,0xe0,0x00,0x00,0x1f,0xc0,0x00,0x00,0x0f,0x80,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
 {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3f,0xf8,0x00,0x01,0xff,0xff,0x00, // '8'
  0x03,0xff,0xff,0x80,0x07,0xf8,0x7f,0xc0,0x0f,0xe0,0x1f,0xe0,0x0f,0xe0,0x0f,0xf0, 
  0x1f,0xc0,0x07,0xf0,0x1f,0xc0,0x07,0xf0,0x1f,0xc0,0x07,0xf0,0x1f,0xc0,0x07,0xf0, 
  0x1f,0xc0,0x07,0xf0,0x1f,0xc0,0x07,0xf0,0x1f,0xe0,0x07,0xf0,0x1f,0xf0,0x0f,0xe0, 
  0x0f,0xfc,0x0f,0xe0,0x0f,0xfe,0x1f,0xc0,0x07,0xff,0xff,0x80,0x03,0xff,0xfe,0x00, 
  0x00,0xff,0xf8,0x00,0x00,0x7f,0xfe,0x00,0x00,0xff,0xff,0x80,0x03,0xff,0xff,0xc0, 
  0x07,0xf1,0xff,0xe0,0x0f,0xe0,0xff,0xf0,0x1f,0xe0,0x3f,0xf8,0x1f,0xc0,0x1f,0xf8, 
  0x3f,0xc0,0x0f,0xf8,0x3f,0x80,0x07,0xfc,0x3f,0x80,0x03,0xfc,0x7f,0x80,0x03,0xfc, 
  0x7f,0x80,0x01,0xfc,0x7f,0x80,0x01,0xfc,0x7f,0x80,0x03,0xfc,0x3f,0xc0,0x03,0xf8, 
  0x3f,0xc0,0x07,0xf8,0x3f,0xe0,0x07,0xf0,0x1f,0xf0,0x1f,0xf0,0x0f,0xf8,0x7f,0xe0, 
  0x07,0xff,0xff,0x80,0x03,0xff,0xff,0x00,0x00,0x7f,0xf8,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
 {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3f,0xf0,0x00,0x00,0xff,0xfc,0x00, // '9'
  0x03,0xff,0xff,0x00,0x07,0xf8,0xff,0x80,0x0f,0xf0,0x3f,0xc0,0x0f,0xe0,0x1f,0xc0, 
  0x1f,0xe0,0x1f,0xe0,0x1f,0xc0,0x0f,0xe0,0x3f,0xc0,0x0f,0xf0,0x3f,0xc0,0x0f,0xf0, 
  0x3f,0xc0,0x07,0xf0,0x3f,0xc0,0x07,0xf0,0x3f,0xc0,0x07,0xf8,0x3f,0xc0,0x07,0xf8, 
  0x3f,0xc0,0x07,0xf8,0x3f,0xc0,0x07,0xf8,0x3f,0xc0,0x07,0xf8,0x3f,0xc0,0x07,0xf8, 
  0x1f,0xe0,0x0f,0xf8,0x1f,0xe0,0x0f,0xf8,0x0f,0xf0,0x3f,0xf8,0x07,0xf8,0xff,0xf8, 
  0x07,0xff,0xff,0xf8,0x01,0xff,0xf7,0xf8,0x00,0x7f,0x87,0xf8,0x00,0x00,0x07,0xf8, 
  0x00,0x00,0x07,0xf8,0x00,0x00,0x07,0xf8,0x00,0x00,0x07,0xf0,0x00,0x00,0x0f,0xf0, 
  0x07,0xe0,0x0f,0xf0,0x0f,0xf0,0x0f,0xf0,0x1f,0xf8,0x0f,0xe0,0x1f,0xf8,0x1f,0xe0, 
  0x1f,0xf8,0x1f,0xc0,0x1f,0xf8,0x3f,0x80,0x1f,0xf0,0x7f,0x00,0x0f,0xf8,0xfe,0x00, 
  0x07,0xff,0xfc,0x00,0x03,0xff,0xf8,0x00,0x00,0xff,0xc0,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
 {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // ' '(space)
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
 {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // '.'(period)
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x07,0xe0,0x00,0x00,0x0f,0xf0,0x00,0x00,0x1f,0xf8,0x00, 
  0x00,0x1f,0xf8,0x00,0x00,0x1f,0xf8,0x00,0x00,0x1f,0xf8,0x00,0x00,0x1f,0xf8,0x00, 
  0x00,0x1f,0xf8,0x00,0x00,0x0f,0xf0,0x00,0x00,0x07,0xe0,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
 {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // ','(comma)
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xe0,0x00,0x00,0x0f,0xf0,0x00, 
  0x00,0x1f,0xf8,0x00,0x00,0x1f,0xf8,0x00,0x00,0x1f,0xf8,0x00,0x00,0x1f,0xf8,0x00, 
  0x00,0x1f,0xf8,0x00,0x00,0x1f,0xf8,0x00,0x00,0x0f,0xf8,0x00,0x00,0x03,0xf8,0x00, 
  0x00,0x01,0xf8,0x00,0x00,0x01,0xf0,0x00,0x00,0x01,0xf0,0x00,0x00,0x03,0xe0,0x00, 
  0x00,0x07,0xe0,0x00,0x00,0x0f,0xc0,0x00,0x00,0x1f,0x00,0x00,0x00,0x1e,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
 {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // '+'(plus)
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xe0,0x00,0x00,0x03,0xe0,0x00, 
  0x00,0x03,0xe0,0x00,0x00,0x03,0xe0,0x00,0x00,0x03,0xe0,0x00,0x00,0x03,0xe0,0x00, 
  0x00,0x03,0xe0,0x00,0x00,0x03,0xe0,0x00,0x00,0x03,0xe0,0x00,0x00,0x03,0xe0,0x00, 
  0x0f,0xff,0xff,0xf8,0x0f,0xff,0xff,0xf8,0x0f,0xff,0xff,0xf8,0x0f,0xff,0xff,0xf8, 
  0x00,0x03,0xe0,0x00,0x00,0x03,0xe0,0x00,0x00,0x03,0xe0,0x00,0x00,0x03,0xe0,0x00, 
  0x00,0x03,0xe0,0x00,0x00,0x03,0xe0,0x00,0x00,0x03,0xe0,0x00,0x00,0x03,0xe0,0x00, 
  0x00,0x03,0xe0,0x00,0x00,0x03,0xe0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
 {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // '-'(minus)
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x1f,0xff,0xff,0xf8,0x1f,0xff,0xff,0xf8,0x1f,0xff,0xff,0xf8,0x1f,0xff,0xff,0xf8, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
 {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // ':'(colon)
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x07,0xe0,0x00,0x00,0x0f,0xf0,0x00,0x00,0x1f,0xf8,0x00, 
  0x00,0x1f,0xf8,0x00,0x00,0x1f,0xf8,0x00,0x00,0x1f,0xf8,0x00,0x00,0x1f,0xf8,0x00, 
  0x00,0x1f,0xf8,0x00,0x00,0x0f,0xf0,0x00,0x00,0x07,0xe0,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xe0,0x00,0x00,0x0f,0xf0,0x00, 
  0x00,0x1f,0xf8,0x00,0x00,0x1f,0xf8,0x00,0x00,0x1f,0xf8,0x00,0x00,0x1f,0xf8,0x00, 
  0x00,0x1f,0xf8,0x00,0x00,0x1f,0xf8,0x00,0x00,0x0f,0xf0,0x00,0x00,0x07,0xe0,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
 {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // ';'(semicolon)
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x07,0xe0,0x00,0x00,0x0f,0xf0,0x00,0x00,0x1f,0xf8,0x00, 
  0x00,0x1f,0xf8,0x00,0x00,0x1f,0xf8,0x00,0x00,0x1f,0xf8,0x00,0x00,0x1f,0xf8,0x00, 
  0x00,0x1f,0xf8,0x00,0x00,0x0f,0xf0,0x00,0x00,0x07,0xe0,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xe0,0x00,0x00,0x0f,0xf0,0x00, 
  0x00,0x1f,0xf8,0x00,0x00,0x1f,0xf8,0x00,0x00,0x1f,0xf8,0x00,0x00,0x1f,0xf8,0x00, 
  0x00,0x1f,0xf8,0x00,0x00,0x1f,0xf8,0x00,0x00,0x0f,0xf8,0x00,0x00,0x03,0xf8,0x00, 
  0x00,0x01,0xf8,0x00,0x00,0x01,0xf0,0x00,0x00,0x01,0xf0,0x00,0x00,0x03,0xe0,0x00, 
  0x00,0x07,0xe0,0x00,0x00,0x0f,0xc0,0x00,0x00,0x1f,0x00,0x00,0x00,0x1e,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}};

/* ---------------------------------------------------------------------------- */
/*		사용자 정의 함수 선언						*/
/* ---------------------------------------------------------------------------- */

void TFT_English_vlarge(U08 code);		// write 32x48 font character
void TFT_unsigned_decimal_vlarge(U32 number, U08 zerofill, U08 digit); // display unsigned decimal number
void TFT_hexadecimal_vlarge(U32 number, U08 digit); // display hexadecimal number
void TFT_unsigned_float_vlarge(float number, U08 integral, U08 fractional); // display unsigned floating-point number

/* ---------------------------------------------------------------------------- */
/*		TFT-LCD 매우 큰 글씨(32x48 픽셀) 출력 함수			*/
/* ---------------------------------------------------------------------------- */

void TFT_English_vlarge(U08 code)		/* write 32x48 font character */
{
  unsigned char data, x, y;
  unsigned short i, xPos, yPos;

  if(code == ' ')      code = 10;		// code conversion
  else if(code == '.') code = 11;
  else if(code == ',') code = 12;
  else if(code == '+') code = 13;
  else if(code == '-') code = 14;
  else if(code == ':') code = 15;
  else if(code == ';') code = 16;
  else                 code -= '0';

  i = 0;
  xPos = Xcharacter*8;
  yPos = Ycharacter*8;
  for(y = 0; y < 48; y++)			// repeat 48 pixel line
    { TFT_write(0x02, xPos >> 8);		// xPos = 0~319
      TFT_write(0x03, xPos & 0x00FF);
      TFT_write(0x06, 0x0000);			// yPos = 0~239
      TFT_write(0x07, yPos + y);

      TFT_command(0x22);

      if((cursor_flag == 1) && (Xcharacter == Xcursor) && (Ycharacter == Ycursor) && (y == 45))
        { for(x = 0; x < 32; x++)		// display cursor
	    TFT_data(cursor);
	}
      else if((cursor_flag == 1) && (Xcharacter == Xcursor) && (Ycharacter == Ycursor) && (y == 46))
        { for(x = 0; x < 32; x++)
	    TFT_data(cursor);
	}
      else					// display 1 pixel line(8 x 4 = 32 pixel)
        { data = font_32x48[code][i++];
          for(x = 0; x < 8; x++)
            { if(data & 0x80) TFT_data(foreground);
	      else            TFT_data(background);
	      data = data << 1;
	    }

          data = font_32x48[code][i++];
          for(x = 0; x < 8; x++)
            { if(data & 0x80) TFT_data(foreground);
	      else            TFT_data(background);
	      data = data << 1;
	    }

          data = font_32x48[code][i++];
          for(x = 0; x < 8; x++)
            { if(data & 0x80) TFT_data(foreground);
	      else            TFT_data(background);
	      data = data << 1;
 	    }

          data = font_32x48[code][i++];
          for(x = 0; x < 8; x++)
            { if(data & 0x80) TFT_data(foreground);
	      else            TFT_data(background);
	      data = data << 1;
	    }
	}
    }

  Xcharacter += 4;
  if(Xcharacter >= XcharacterLimit)		// end of line ?
    { Xcharacter = 0;
      Ycharacter += 6;
    }
}

void TFT_unsigned_decimal_vlarge(U32 number, U08 zerofill, U08 digit) /* display unsigned decimal number */
{
  unsigned char zero_flag, character;
  unsigned int  div;

  if((digit == 0) || (digit > 9)) return;

  div = 1;
  while(--digit) div *= 10;

  zero_flag = zerofill;
  while(div > 0)				// display number
    { character = number / div;
      if((character == 0) && (zero_flag == 0) && (div != 1))
        TFT_English_vlarge(character + ' ');
      else
        { zero_flag = 1;
          TFT_English_vlarge(character + '0');
        }
      number %= div;
      div /= 10;
    }
}

void TFT_hexadecimal_vlarge(U32 number, U08 digit)	/* display hexadecimal number */
{
  unsigned char i, character;

  if((digit == 0) || (digit > 8)) return;

  for(i = digit; i > 0; i--)
    { character = (number >> 4*(i-1)) & 0x0F;
      if(character < 10) TFT_English_vlarge(character + '0');
      else               TFT_English_vlarge(character - 10 + 'A');
    }
}

void TFT_unsigned_float_vlarge(float number, U08 integral, U08 fractional) /* display unsigned floating-point number */
{
  unsigned char zero_flag, digit, character;	// integral = digits of integral part
  unsigned int  div, integer;			// fractional = digits of fractional part

  digit = integral + fractional;
  if((integral == 0) || (fractional == 0) || (digit > 9)) return;

  div = 1;
  while(--digit) div *= 10;

  while(fractional--) number *= 10.;
  integer = (U32)(number + 0.5);

  zero_flag = 0;
  digit = 1;
  while(div > 0)				// display number
    { character = integer / div;
      if((character == 0) && (zero_flag == 0) && (digit != integral))
        TFT_English_vlarge(character + ' ');
      else
        { zero_flag = 1;
          TFT_English_vlarge(character + '0');
        }
      integer %= div;
      div /= 10;

      if(digit == integral)
        TFT_English_vlarge('.');
      digit++;
    }
}

/* ---------------------------------------------------------------------------- */
/*		40x56 픽셀의 가장 큰 글씨 폰트(명조체)				*/
/* ---------------------------------------------------------------------------- */
const unsigned char font_40x56[13][280] = {		/* 40x56 character font */
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xff,0x80,0x00,0x00, // '0'
 0x0f,0xff,0xf0,0x00,0x00,0x1f,0xff,0xf8,0x00,0x00,0x3f,0xe7,0xfc,0x00,0x00,0x7f, 
 0xc3,0xfe,0x00,0x00,0xff,0x81,0xff,0x00,0x01,0xff,0x00,0xff,0x80,0x03,0xff,0x00, 
 0xff,0xc0,0x03,0xfe,0x00,0x7f,0xc0,0x07,0xfe,0x00,0x7f,0xe0,0x07,0xfe,0x00,0x7f, 
 0xe0,0x07,0xfc,0x00,0x3f,0xe0,0x0f,0xfc,0x00,0x3f,0xf0,0x0f,0xfc,0x00,0x3f,0xf0, 
 0x0f,0xfc,0x00,0x3f,0xf0,0x1f,0xfc,0x00,0x3f,0xf0,0x1f,0xfc,0x00,0x3f,0xf8,0x1f, 
 0xf8,0x00,0x3f,0xf8,0x1f,0xf8,0x00,0x1f,0xf8,0x1f,0xf8,0x00,0x1f,0xf8,0x1f,0xf8, 
 0x00,0x1f,0xf8,0x1f,0xf8,0x00,0x1f,0xf8,0x1f,0xf8,0x00,0x1f,0xf8,0x1f,0xf8,0x00, 
 0x1f,0xf8,0x1f,0xf8,0x00,0x1f,0xf8,0x1f,0xf8,0x00,0x1f,0xf8,0x1f,0xf8,0x00,0x1f, 
 0xf8,0x1f,0xf8,0x00,0x1f,0xf8,0x1f,0xf8,0x00,0x1f,0xf8,0x1f,0xf8,0x00,0x1f,0xf8, 
 0x1f,0xf8,0x00,0x1f,0xf8,0x1f,0xf8,0x00,0x3f,0xf8,0x1f,0xfc,0x00,0x3f,0xf8,0x1f, 
 0xfc,0x00,0x3f,0xf8,0x0f,0xfc,0x00,0x3f,0xf0,0x0f,0xfc,0x00,0x3f,0xf0,0x0f,0xfc, 
 0x00,0x3f,0xf0,0x07,0xfc,0x00,0x3f,0xe0,0x07,0xfe,0x00,0x7f,0xe0,0x07,0xfe,0x00, 
 0x7f,0xe0,0x03,0xfe,0x00,0x7f,0xc0,0x03,0xff,0x00,0xff,0xc0,0x01,0xff,0x00,0xff, 
 0x80,0x00,0xff,0x81,0xff,0x00,0x00,0x7f,0xc3,0xfe,0x00,0x00,0x7f,0xe7,0xfc,0x00, 
 0x00,0x1f,0xff,0xf8,0x00,0x00,0x0f,0xff,0xf0,0x00,0x00,0x01,0xff,0x80,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 },
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x80,0x00,0x00, // '1'
 0x00,0x3f,0x80,0x00,0x00,0x00,0xff,0x80,0x00,0x00,0x03,0xff,0x80,0x00,0x00,0x1f, 
 0xff,0x80,0x00,0x00,0xff,0xff,0x80,0x00,0x00,0xff,0xff,0x80,0x00,0x00,0xff,0xff, 
 0x80,0x00,0x00,0x03,0xff,0x80,0x00,0x00,0x01,0xff,0x80,0x00,0x00,0x01,0xff,0x80, 
 0x00,0x00,0x01,0xff,0x80,0x00,0x00,0x01,0xff,0x80,0x00,0x00,0x01,0xff,0x80,0x00, 
 0x00,0x01,0xff,0x80,0x00,0x00,0x01,0xff,0x80,0x00,0x00,0x01,0xff,0x80,0x00,0x00, 
 0x01,0xff,0x80,0x00,0x00,0x01,0xff,0x80,0x00,0x00,0x01,0xff,0x80,0x00,0x00,0x01, 
 0xff,0x80,0x00,0x00,0x01,0xff,0x80,0x00,0x00,0x01,0xff,0x80,0x00,0x00,0x01,0xff, 
 0x80,0x00,0x00,0x01,0xff,0x80,0x00,0x00,0x01,0xff,0x80,0x00,0x00,0x01,0xff,0x80, 
 0x00,0x00,0x01,0xff,0x80,0x00,0x00,0x01,0xff,0x80,0x00,0x00,0x01,0xff,0x80,0x00, 
 0x00,0x01,0xff,0x80,0x00,0x00,0x01,0xff,0x80,0x00,0x00,0x01,0xff,0x80,0x00,0x00, 
 0x01,0xff,0x80,0x00,0x00,0x01,0xff,0x80,0x00,0x00,0x01,0xff,0x80,0x00,0x00,0x01, 
 0xff,0x80,0x00,0x00,0x01,0xff,0x80,0x00,0x00,0x01,0xff,0x80,0x00,0x00,0x01,0xff, 
 0x80,0x00,0x00,0x01,0xff,0x80,0x00,0x00,0x01,0xff,0x80,0x00,0x00,0x01,0xff,0x80, 
 0x00,0x00,0x01,0xff,0xc0,0x00,0x00,0x03,0xff,0xc0,0x00,0x00,0x0f,0xff,0xf0,0x00, 
 0x03,0xff,0xff,0xff,0xc0,0x03,0xff,0xff,0xff,0xc0,0x03,0xff,0xff,0xff,0xc0,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0x80,0x00,0x00, // '2'
 0x07,0xff,0xf0,0x00,0x00,0x1f,0xff,0xfc,0x00,0x00,0x7f,0xff,0xff,0x00,0x01,0xff, 
 0xc3,0xff,0x80,0x03,0xff,0x01,0xff,0xc0,0x07,0xfe,0x00,0xff,0xe0,0x07,0xfc,0x00, 
 0x7f,0xf0,0x0f,0xfe,0x00,0x7f,0xf0,0x0f,0xfe,0x00,0x3f,0xf0,0x0f,0xff,0x00,0x3f, 
 0xf8,0x0f,0xff,0x80,0x3f,0xf8,0x0f,0xff,0x80,0x3f,0xf8,0x0f,0xff,0x80,0x3f,0xf8, 
 0x0f,0xff,0x80,0x3f,0xf8,0x0f,0xff,0x00,0x3f,0xf8,0x07,0xff,0x00,0x7f,0xf8,0x03, 
 0xfc,0x00,0x7f,0xf8,0x00,0x00,0x00,0x7f,0xf8,0x00,0x00,0x00,0xff,0xf0,0x00,0x00, 
 0x00,0xff,0xf0,0x00,0x00,0x01,0xff,0xe0,0x00,0x00,0x03,0xff,0xe0,0x00,0x00,0x07, 
 0xff,0xc0,0x00,0x00,0x0f,0xff,0x80,0x00,0x00,0x1f,0xff,0x00,0x00,0x00,0x1f,0xfe, 
 0x00,0x00,0x00,0x3f,0xfc,0x00,0x00,0x00,0x7f,0xf8,0x00,0x00,0x00,0xff,0xf0,0x00, 
 0x00,0x01,0xff,0xc0,0x00,0x00,0x03,0xff,0x80,0x00,0x00,0x07,0xff,0x00,0x00,0x00, 
 0x0f,0xfc,0x00,0x00,0x00,0x1f,0xf8,0x00,0x00,0x00,0x3f,0xf0,0x00,0x7c,0x00,0x7f, 
 0xc0,0x00,0xfc,0x00,0xff,0x80,0x00,0xfc,0x00,0xff,0x00,0x01,0xf8,0x01,0xfe,0x00, 
 0x01,0xf8,0x03,0xfc,0x00,0x03,0xf8,0x03,0xf8,0x00,0x07,0xf8,0x07,0xf0,0x00,0x0f, 
 0xf0,0x07,0xff,0xff,0xff,0xf0,0x0f,0xff,0xff,0xff,0xf0,0x0f,0xff,0xff,0xff,0xf0, 
 0x0f,0xff,0xff,0xff,0xe0,0x0f,0xff,0xff,0xff,0xe0,0x0f,0xff,0xff,0xff,0xe0,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xff,0xf0,0x00,0x00, // '3'
 0x1f,0xff,0xfe,0x00,0x00,0x7f,0xff,0xff,0x80,0x01,0xff,0xf3,0xff,0xc0,0x01,0xff, 
 0xc0,0xff,0xe0,0x03,0xff,0x00,0xff,0xe0,0x03,0xfe,0x00,0x7f,0xf0,0x07,0xfe,0x00, 
 0x7f,0xf0,0x07,0xfe,0x00,0x3f,0xf0,0x07,0xff,0x00,0x3f,0xf8,0x07,0xff,0x00,0x3f, 
 0xf8,0x07,0xff,0x00,0x3f,0xf8,0x03,0xff,0x00,0x3f,0xf8,0x01,0xfe,0x00,0x3f,0xf8, 
 0x00,0x00,0x00,0x3f,0xf0,0x00,0x00,0x00,0x7f,0xf0,0x00,0x00,0x00,0x7f,0xf0,0x00, 
 0x00,0x00,0x7f,0xe0,0x00,0x00,0x00,0xff,0xc0,0x00,0x00,0x01,0xff,0x80,0x00,0x00, 
 0x07,0xff,0x00,0x00,0x07,0xff,0xfe,0x00,0x00,0x07,0xff,0xf8,0x00,0x00,0x07,0xff, 
 0xfc,0x00,0x00,0x03,0xff,0xff,0x00,0x00,0x00,0x07,0xff,0xc0,0x00,0x00,0x01,0xff, 
 0xe0,0x00,0x00,0x00,0xff,0xf0,0x00,0x00,0x00,0x7f,0xf0,0x00,0x00,0x00,0x3f,0xf8, 
 0x00,0x00,0x00,0x3f,0xf8,0x00,0x00,0x00,0x1f,0xfc,0x00,0x00,0x00,0x1f,0xfc,0x00, 
 0x00,0x00,0x1f,0xfc,0x07,0xf8,0x00,0x1f,0xfc,0x0f,0xfe,0x00,0x1f,0xfc,0x0f,0xfe, 
 0x00,0x1f,0xfc,0x1f,0xff,0x00,0x1f,0xfc,0x1f,0xff,0x00,0x1f,0xfc,0x1f,0xff,0x00, 
 0x1f,0xfc,0x1f,0xff,0x00,0x1f,0xf8,0x0f,0xfe,0x00,0x3f,0xf8,0x0f,0xfe,0x00,0x7f, 
 0xf0,0x07,0xfe,0x00,0x7f,0xf0,0x07,0xff,0x01,0xff,0xe0,0x03,0xff,0x8f,0xff,0x80, 
 0x01,0xff,0xff,0xff,0x00,0x00,0x7f,0xff,0xfc,0x00,0x00,0x0f,0xff,0xc0,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7f,0x00,0x00, // '4'
 0x00,0x00,0x7f,0x00,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0x01,0xff,0x00,0x00,0x00, 
 0x01,0xff,0x00,0x00,0x00,0x03,0xff,0x00,0x00,0x00,0x07,0xff,0x00,0x00,0x00,0x07, 
 0xff,0x00,0x00,0x00,0x0f,0xff,0x00,0x00,0x00,0x1f,0xff,0x00,0x00,0x00,0x1f,0xff, 
 0x00,0x00,0x00,0x3f,0xff,0x00,0x00,0x00,0x7f,0xff,0x00,0x00,0x00,0xff,0xff,0x00, 
 0x00,0x00,0xff,0xff,0x00,0x00,0x01,0xff,0xff,0x00,0x00,0x03,0xfb,0xff,0x00,0x00, 
 0x03,0xfb,0xff,0x00,0x00,0x07,0xf3,0xff,0x00,0x00,0x0f,0xe3,0xff,0x00,0x00,0x0f, 
 0xe3,0xff,0x00,0x00,0x1f,0xc3,0xff,0x00,0x00,0x3f,0x83,0xff,0x00,0x00,0x7f,0x83, 
 0xff,0x00,0x00,0x7f,0x03,0xff,0x00,0x00,0xfe,0x03,0xff,0x00,0x01,0xfc,0x03,0xff, 
 0x00,0x01,0xfc,0x03,0xff,0x00,0x03,0xf8,0x03,0xff,0x00,0x07,0xf0,0x03,0xff,0x00, 
 0x07,0xf0,0x03,0xff,0x00,0x0f,0xe0,0x03,0xff,0x00,0x1f,0xc0,0x03,0xff,0x00,0x1f, 
 0xc0,0x03,0xff,0x00,0x3f,0xff,0xff,0xff,0xfc,0x3f,0xff,0xff,0xff,0xfc,0x3f,0xff, 
 0xff,0xff,0xfc,0x3f,0xff,0xff,0xff,0xfc,0x00,0x00,0x03,0xff,0x00,0x00,0x00,0x03, 
 0xff,0x00,0x00,0x00,0x03,0xff,0x00,0x00,0x00,0x03,0xff,0x00,0x00,0x00,0x03,0xff, 
 0x00,0x00,0x00,0x03,0xff,0x00,0x00,0x00,0x07,0xff,0x00,0x00,0x00,0x0f,0xff,0xc0, 
 0x00,0x00,0xff,0xff,0xf8,0x00,0x00,0xff,0xff,0xf8,0x00,0x00,0xff,0xff,0xf8,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xf8,0x01, // '5'
 0xff,0xff,0xff,0xf8,0x01,0xff,0xff,0xff,0xf8,0x01,0xff,0xff,0xff,0xf8,0x01,0xff, 
 0xff,0xff,0xf8,0x01,0xff,0xff,0xff,0xf0,0x01,0xff,0xff,0xff,0xe0,0x01,0xff,0xff, 
 0xff,0x80,0x03,0xf8,0x00,0x00,0x00,0x03,0xf8,0x00,0x00,0x00,0x03,0xf8,0x00,0x00, 
 0x00,0x03,0xf8,0x00,0x00,0x00,0x03,0xf8,0x00,0x00,0x00,0x03,0xf0,0x00,0x00,0x00, 
 0x03,0xf0,0x00,0x00,0x00,0x03,0xf0,0x00,0x00,0x00,0x03,0xf0,0x00,0x00,0x00,0x03, 
 0xf3,0xff,0xc0,0x00,0x03,0xff,0xff,0xf8,0x00,0x03,0xff,0xff,0xfe,0x00,0x03,0xff, 
 0x8f,0xff,0x80,0x07,0xfc,0x03,0xff,0xc0,0x07,0xf8,0x00,0xff,0xe0,0x07,0xe0,0x00, 
 0x7f,0xe0,0x07,0xe0,0x00,0x7f,0xf0,0x00,0x00,0x00,0x3f,0xf8,0x00,0x00,0x00,0x3f, 
 0xf8,0x00,0x00,0x00,0x1f,0xfc,0x00,0x00,0x00,0x1f,0xfc,0x00,0x00,0x00,0x1f,0xfc, 
 0x00,0x00,0x00,0x1f,0xfc,0x00,0x00,0x00,0x1f,0xfc,0x00,0x00,0x00,0x1f,0xfc,0x07, 
 0xfc,0x00,0x1f,0xfc,0x0f,0xfe,0x00,0x1f,0xfc,0x0f,0xfe,0x00,0x1f,0xfc,0x1f,0xff, 
 0x00,0x1f,0xfc,0x1f,0xff,0x00,0x1f,0xfc,0x1f,0xff,0x00,0x1f,0xf8,0x1f,0xff,0x00, 
 0x3f,0xf8,0x1f,0xfe,0x00,0x3f,0xf8,0x1f,0xfe,0x00,0x7f,0xf0,0x0f,0xfe,0x00,0x7f, 
 0xe0,0x0f,0xfe,0x00,0xff,0xe0,0x07,0xff,0x03,0xff,0xc0,0x07,0xff,0x8f,0xff,0x00, 
 0x01,0xff,0xff,0xfe,0x00,0x00,0xff,0xff,0xf8,0x00,0x00,0x1f,0xff,0xc0,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3f,0xfe,0x00,0x00, // '6'
 0x01,0xff,0xff,0x80,0x00,0x07,0xff,0xff,0xe0,0x00,0x1f,0xfc,0x7f,0xf0,0x00,0x3f, 
 0xf0,0x3f,0xf0,0x00,0x7f,0xe0,0x1f,0xf8,0x00,0xff,0xc0,0x1f,0xf8,0x00,0xff,0x80, 
 0x1f,0xf8,0x01,0xff,0x80,0x3f,0xf8,0x03,0xff,0x00,0x3f,0xf8,0x03,0xff,0x00,0x3f, 
 0xf8,0x03,0xff,0x00,0x1f,0xf0,0x07,0xfe,0x00,0x07,0xc0,0x07,0xfe,0x00,0x00,0x00, 
 0x07,0xfe,0x00,0x00,0x00,0x0f,0xfe,0x00,0x00,0x00,0x0f,0xfe,0x00,0x00,0x00,0x0f, 
 0xfc,0x00,0x00,0x00,0x0f,0xfc,0x3f,0xfe,0x00,0x0f,0xfd,0xff,0xff,0x80,0x0f,0xff, 
 0xff,0xff,0xc0,0x1f,0xff,0xf9,0xff,0xe0,0x1f,0xff,0xc0,0x7f,0xf0,0x1f,0xff,0x80, 
 0x3f,0xf8,0x1f,0xff,0x00,0x1f,0xf8,0x1f,0xfe,0x00,0x1f,0xf8,0x1f,0xfe,0x00,0x1f, 
 0xfc,0x1f,0xfc,0x00,0x1f,0xfc,0x1f,0xfc,0x00,0x0f,0xfc,0x1f,0xfc,0x00,0x0f,0xfc, 
 0x1f,0xfc,0x00,0x0f,0xfc,0x0f,0xfc,0x00,0x0f,0xfc,0x0f,0xfc,0x00,0x0f,0xfc,0x0f, 
 0xfc,0x00,0x0f,0xfc,0x0f,0xfc,0x00,0x0f,0xfc,0x0f,0xfc,0x00,0x0f,0xfc,0x0f,0xfe, 
 0x00,0x0f,0xfc,0x07,0xfe,0x00,0x1f,0xfc,0x07,0xfe,0x00,0x1f,0xfc,0x07,0xfe,0x00, 
 0x1f,0xf8,0x03,0xff,0x00,0x1f,0xf8,0x03,0xff,0x00,0x3f,0xf8,0x01,0xff,0x00,0x3f, 
 0xf0,0x01,0xff,0x80,0x7f,0xe0,0x00,0xff,0xc0,0xff,0xe0,0x00,0x7f,0xf1,0xff,0xc0, 
 0x00,0x3f,0xff,0xff,0x00,0x00,0x0f,0xff,0xfc,0x00,0x00,0x01,0xff,0xe0,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07, // '7'
 0xff,0xff,0xff,0xf8,0x07,0xff,0xff,0xff,0xf8,0x07,0xff,0xff,0xff,0xf8,0x07,0xff, 
 0xff,0xff,0xf8,0x0f,0xff,0xff,0xff,0xf8,0x0f,0xff,0xff,0xff,0xf8,0x0f,0xff,0xff, 
 0xff,0xf0,0x0f,0xf0,0x00,0x0f,0xe0,0x0f,0xc0,0x00,0x1f,0xe0,0x0f,0xc0,0x00,0x3f, 
 0xc0,0x1f,0x80,0x00,0x3f,0xc0,0x1f,0x80,0x00,0x7f,0x80,0x1f,0x00,0x00,0xff,0x00, 
 0x1f,0x00,0x00,0xff,0x00,0x1f,0x00,0x01,0xfe,0x00,0x00,0x00,0x01,0xfe,0x00,0x00, 
 0x00,0x03,0xfc,0x00,0x00,0x00,0x07,0xfc,0x00,0x00,0x00,0x07,0xf8,0x00,0x00,0x00, 
 0x0f,0xf8,0x00,0x00,0x00,0x1f,0xf0,0x00,0x00,0x00,0x1f,0xf0,0x00,0x00,0x00,0x3f, 
 0xe0,0x00,0x00,0x00,0x3f,0xe0,0x00,0x00,0x00,0x7f,0xc0,0x00,0x00,0x00,0x7f,0xc0, 
 0x00,0x00,0x00,0xff,0xc0,0x00,0x00,0x00,0xff,0x80,0x00,0x00,0x01,0xff,0x80,0x00, 
 0x00,0x01,0xff,0x80,0x00,0x00,0x03,0xff,0x80,0x00,0x00,0x03,0xff,0x00,0x00,0x00, 
 0x03,0xff,0x00,0x00,0x00,0x07,0xff,0x00,0x00,0x00,0x07,0xff,0x00,0x00,0x00,0x07, 
 0xff,0x00,0x00,0x00,0x07,0xff,0x00,0x00,0x00,0x0f,0xff,0x00,0x00,0x00,0x0f,0xff, 
 0x00,0x00,0x00,0x0f,0xff,0x00,0x00,0x00,0x0f,0xff,0x00,0x00,0x00,0x0f,0xff,0x00, 
 0x00,0x00,0x0f,0xff,0x00,0x00,0x00,0x0f,0xff,0x00,0x00,0x00,0x0f,0xff,0x00,0x00, 
 0x00,0x0f,0xff,0x00,0x00,0x00,0x07,0xfe,0x00,0x00,0x00,0x07,0xfc,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xff,0xe0,0x00,0x00, // '8'
 0x3f,0xff,0xfc,0x00,0x00,0xff,0xff,0xff,0x00,0x01,0xff,0xc7,0xff,0x80,0x03,0xff, 
 0x01,0xff,0xc0,0x07,0xfe,0x00,0xff,0xe0,0x07,0xfc,0x00,0x7f,0xe0,0x0f,0xfc,0x00, 
 0x3f,0xf0,0x0f,0xfc,0x00,0x3f,0xf0,0x0f,0xf8,0x00,0x1f,0xf0,0x0f,0xf8,0x00,0x1f, 
 0xf0,0x0f,0xf8,0x00,0x1f,0xf0,0x0f,0xfc,0x00,0x1f,0xf0,0x0f,0xfc,0x00,0x3f,0xf0, 
 0x0f,0xfe,0x00,0x3f,0xf0,0x0f,0xff,0x00,0x7f,0xe0,0x07,0xff,0x80,0x7f,0xc0,0x07, 
 0xff,0xe0,0xff,0xc0,0x03,0xff,0xf1,0xff,0x80,0x01,0xff,0xff,0xff,0x00,0x00,0xff, 
 0xff,0xfc,0x00,0x00,0x7f,0xff,0xf0,0x00,0x00,0x1f,0xff,0xf0,0x00,0x00,0x0f,0xff, 
 0xfc,0x00,0x00,0x1f,0xff,0xff,0x00,0x00,0x7f,0xff,0xff,0x80,0x01,0xff,0xff,0xff, 
 0xc0,0x03,0xff,0x1f,0xff,0xe0,0x07,0xfe,0x07,0xff,0xf0,0x07,0xfe,0x03,0xff,0xf0, 
 0x0f,0xfc,0x01,0xff,0xf8,0x1f,0xfc,0x00,0x7f,0xf8,0x1f,0xf8,0x00,0x3f,0xfc,0x1f, 
 0xf8,0x00,0x1f,0xfc,0x3f,0xf0,0x00,0x1f,0xfc,0x3f,0xf0,0x00,0x0f,0xfc,0x3f,0xf0, 
 0x00,0x0f,0xfc,0x3f,0xf0,0x00,0x0f,0xfc,0x3f,0xf0,0x00,0x0f,0xfc,0x3f,0xf8,0x00, 
 0x0f,0xf8,0x1f,0xf8,0x00,0x1f,0xf8,0x1f,0xfc,0x00,0x1f,0xf8,0x1f,0xfc,0x00,0x3f, 
 0xf0,0x0f,0xfe,0x00,0x7f,0xe0,0x0f,0xff,0x01,0xff,0xe0,0x07,0xff,0xc7,0xff,0x80, 
 0x01,0xff,0xff,0xff,0x00,0x00,0x7f,0xff,0xfc,0x00,0x00,0x0f,0xff,0xc0,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xff,0x80,0x00,0x00, // '9'
 0x3f,0xff,0xf0,0x00,0x00,0x7f,0xff,0xfc,0x00,0x01,0xff,0xcf,0xfe,0x00,0x03,0xff, 
 0x87,0xff,0x00,0x03,0xff,0x03,0xff,0x80,0x07,0xfe,0x01,0xff,0x80,0x0f,0xfe,0x00, 
 0xff,0xc0,0x0f,0xfc,0x00,0xff,0xc0,0x1f,0xfc,0x00,0xff,0xe0,0x1f,0xfc,0x00,0x7f, 
 0xe0,0x1f,0xf8,0x00,0x7f,0xe0,0x1f,0xf8,0x00,0x7f,0xe0,0x1f,0xf8,0x00,0x7f,0xf0, 
 0x1f,0xf8,0x00,0x3f,0xf0,0x1f,0xf8,0x00,0x3f,0xf0,0x1f,0xf8,0x00,0x3f,0xf0,0x1f, 
 0xf8,0x00,0x3f,0xf0,0x1f,0xf8,0x00,0x3f,0xf0,0x1f,0xf8,0x00,0x3f,0xf0,0x1f,0xfc, 
 0x00,0x3f,0xf8,0x1f,0xfc,0x00,0x3f,0xf8,0x1f,0xfc,0x00,0x7f,0xf8,0x0f,0xfe,0x00, 
 0xff,0xf8,0x0f,0xfe,0x01,0xff,0xf8,0x07,0xff,0x03,0xff,0xf8,0x03,0xff,0xdf,0xff, 
 0xf8,0x03,0xff,0xff,0xff,0xf8,0x00,0xff,0xff,0xff,0xf8,0x00,0x7f,0xff,0xbf,0xf0, 
 0x00,0x1f,0xfc,0x3f,0xf0,0x00,0x00,0x00,0x3f,0xf0,0x00,0x00,0x00,0x3f,0xf0,0x00, 
 0x00,0x00,0x7f,0xf0,0x00,0x00,0x00,0x7f,0xf0,0x00,0x00,0x00,0x7f,0xe0,0x03,0xfc, 
 0x00,0x7f,0xe0,0x07,0xff,0x00,0x7f,0xe0,0x0f,0xff,0x00,0xff,0xc0,0x0f,0xff,0x80, 
 0xff,0xc0,0x0f,0xff,0x81,0xff,0x80,0x0f,0xff,0x01,0xff,0x80,0x0f,0xfe,0x03,0xff, 
 0x00,0x0f,0xfe,0x03,0xfe,0x00,0x0f,0xff,0x07,0xfc,0x00,0x07,0xff,0x9f,0xf8,0x00, 
 0x03,0xff,0xff,0xf0,0x00,0x00,0xff,0xff,0xc0,0x00,0x00,0x3f,0xfe,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, //  ' '(space)
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // '+'(plus)
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x7e,0x00,0x00,0x00,0x00,0x7e,0x00,0x00,0x00,0x00,0x7e,0x00,0x00, 
 0x00,0x00,0x7e,0x00,0x00,0x00,0x00,0x7e,0x00,0x00,0x00,0x00,0x7e,0x00,0x00,0x00, 
 0x00,0x7e,0x00,0x00,0x00,0x00,0x7e,0x00,0x00,0x00,0x00,0x7e,0x00,0x00,0x00,0x00, 
 0x7e,0x00,0x00,0x00,0x00,0x7e,0x00,0x00,0x03,0xff,0xff,0xff,0xc0,0x03,0xff,0xff, 
 0xff,0xc0,0x03,0xff,0xff,0xff,0xc0,0x03,0xff,0xff,0xff,0xc0,0x03,0xff,0xff,0xff, 
 0xc0,0x03,0xff,0xff,0xff,0xc0,0x00,0x00,0x7e,0x00,0x00,0x00,0x00,0x7e,0x00,0x00, 
 0x00,0x00,0x7e,0x00,0x00,0x00,0x00,0x7e,0x00,0x00,0x00,0x00,0x7e,0x00,0x00,0x00, 
 0x00,0x7e,0x00,0x00,0x00,0x00,0x7e,0x00,0x00,0x00,0x00,0x7e,0x00,0x00,0x00,0x00, 
 0x7e,0x00,0x00,0x00,0x00,0x7e,0x00,0x00,0x00,0x00,0x7e,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // '-'(minus)
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xff,0xff,0xff,0xc0,0x03,0xff,0xff, 
 0xff,0xc0,0x03,0xff,0xff,0xff,0xc0,0x03,0xff,0xff,0xff,0xc0,0x03,0xff,0xff,0xff, 
 0xc0,0x03,0xff,0xff,0xff,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
};

const unsigned char font_24x56[3][168] = {		/* 24x56 character font */
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	// ' '(space)
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	// '.'(period)
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x3c,0x00,0x00,0xff,0x00,0x01,0xff,0x80,0x01,0xff,0x80,
 0x03,0xff,0xc0,0x03,0xff,0xc0,0x03,0xff,0xc0,0x03,0xff,0xc0,0x01,0xff,
 0x80,0x01,0xff,0x80,0x00,0xff,0x00,0x00,0x3c,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	// ':'(colon)
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x3c,0x00,0x00,0xff,0x00,0x01,0xff,0x80,0x01,0xff,0x80,
 0x03,0xff,0xc0,0x03,0xff,0xc0,0x03,0xff,0xc0,0x03,0xff,0xc0,0x01,0xff,
 0x80,0x01,0xff,0x80,0x00,0xff,0x00,0x00,0x3c,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x3c,0x00,0x00,0xff,0x00,0x01,0xff,0x80,0x01,
 0xff,0x80,0x03,0xff,0xc0,0x03,0xff,0xc0,0x03,0xff,0xc0,0x03,0xff,0xc0,
 0x01,0xff,0x80,0x01,0xff,0x80,0x00,0xff,0x00,0x00,0x3c,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}};

/* ---------------------------------------------------------------------------- */
/*		사용자 정의 함수 선언						*/
/* ---------------------------------------------------------------------------- */

void TFT_English_xlarge(U08 code);		// write 40x56 font(0~9) character
void TFT_font40x56(U08 code);			// write 40x56 font character
void TFT_font24x56(U08 code);			// write 24x56 font character
void TFT_unsigned_decimal_xlarge(U32 number, U08 zerofill, U08 digit); // display unsigned decimal number
void TFT_hexadecimal_xlarge(U32 number, U08 digit);	// display hexadecimal number
void TFT_unsigned_float_xlarge(float number, U08 integral, U08 fractional); // display unsigned floating-point number

/* ---------------------------------------------------------------------------- */
/*	TFT-LCD 가장 큰 글씨(숫자:40x56 픽셀, 기호:24x56 픽셀) 출력 함수	*/
/* ---------------------------------------------------------------------------- */

void TFT_English_xlarge(U08 code)		/* write 40x56 font(0~9) character */
{
  if((code >= '0') && (code <= '9'))		// if '0'~'9', 40x56 font character
    TFT_font40x56(code);
  else if(code == ' ') 				// if space, 40x56 font character
    TFT_font40x56(code);
  else if((code == '+') || (code == '-'))	// if '+' or '-', 40x56 font character
    TFT_font40x56(code);
  else						// if not, 24x56 font character
    TFT_font24x56(code);
}

void TFT_font40x56(U08 code)			/* write 40x56 font(0~9) character */
{
  unsigned char data, x, y;
  unsigned short i, xPos, yPos;

  if(code == ' ')      code = 10;		// code conversion
  else if(code == '+') code = 11;
  else if(code == '-') code = 12;
  else                 code -= '0';

  i = 0;
  xPos = Xcharacter*8;
  yPos = Ycharacter*8;
  for(y = 0; y < 56; y++)			// repeat 56 pixel line
    { TFT_write(0x02, xPos >> 8);		// xPos = 0~319
      TFT_write(0x03, xPos & 0x00FF);
      TFT_write(0x06, 0x0000);			// yPos = 0~239
      TFT_write(0x07, yPos + y);

      TFT_command(0x22);

      data = font_40x56[code][i++];		// display 1 pixel line(8 x 5 = 40 pixel)
      for(x = 0; x < 8; x++)
        { if(data & 0x80) TFT_data(foreground);
	  else            TFT_data(background);
	  data = data << 1;
	}

      data = font_40x56[code][i++];
      for(x = 0; x < 8; x++)
        { if(data & 0x80) TFT_data(foreground);
	  else            TFT_data(background);
	  data = data << 1;
	}

      data = font_40x56[code][i++];
      for(x = 0; x < 8; x++)
        { if(data & 0x80) TFT_data(foreground);
	  else            TFT_data(background);
	  data = data << 1;
	}

      data = font_40x56[code][i++];
      for(x = 0; x < 8; x++)
        { if(data & 0x80) TFT_data(foreground);
	  else            TFT_data(background);
	  data = data << 1;
	}

      data = font_40x56[code][i++];
      for(x = 0; x < 8; x++)
        { if(data & 0x80) TFT_data(foreground);
	  else            TFT_data(background);
	  data = data << 1;
	}
    }

  Xcharacter += 5;
  if(Xcharacter >= XcharacterLimit)		// end of line ?
    { Xcharacter = 0;
      Ycharacter += 7;
    }
}

void TFT_font24x56(U08 code)			/* write 24x56 font(space,period,colon) character */
{
  unsigned char data, x, y;
  unsigned short i, xPos, yPos;

  if(code == '/')      code = 0;		// code conversion
  else if(code == '.') code = 1;
  else if(code == ':') code = 2;

  i = 0;
  xPos = Xcharacter*8;
  yPos = Ycharacter*8;
  for(y = 0; y < 56; y++)			// repeat 56 pixel line
    { TFT_write(0x02, xPos >> 8);		// xPos = 0~319
      TFT_write(0x03, xPos & 0x00FF);
      TFT_write(0x06, 0x0000);			// yPos = 0~239
      TFT_write(0x07, yPos + y);

      TFT_command(0x22);

      data = font_24x56[code][i++];		// display 1 pixel line(8 x 3 = 24 pixel)
      for(x = 0; x < 8; x++)
        { if(data & 0x80) TFT_data(foreground);
	  else            TFT_data(background);
	  data = data << 1;
	}

      data = font_24x56[code][i++];
      for(x = 0; x < 8; x++)
        { if(data & 0x80) TFT_data(foreground);
	  else            TFT_data(background);
	  data = data << 1;
	}

      data = font_24x56[code][i++];
      for(x = 0; x < 8; x++)
        { if(data & 0x80) TFT_data(foreground);
	  else            TFT_data(background);
	  data = data << 1;
	}
    }

  Xcharacter += 3;
  if(Xcharacter >= XcharacterLimit)		// end of line ?
    { Xcharacter = 0;
      Ycharacter += 7;
    }
}

void TFT_unsigned_decimal_xlarge(U32 number, U08 zerofill, U08 digit) /* display unsigned decimal number */
{
  unsigned char zero_flag, character;
  unsigned int  div;

  if((digit == 0) || (digit > 9)) return;

  div = 1;
  while(--digit) div *= 10;

  zero_flag = zerofill;
  while(div > 0)				// display number
    { character = number / div;
      if((character == 0) && (zero_flag == 0) && (div != 1))
        TFT_English_xlarge(character + ' ');
      else
        { zero_flag = 1;
          TFT_English_xlarge(character + '0');
        }
      number %= div;
      div /= 10;
    }
}

void TFT_hexadecimal_xlarge(U32 number, U08 digit)	/* display hexadecimal number */
{
  unsigned char i, character;

  if((digit == 0) || (digit > 8)) return;

  for(i = digit; i > 0; i--)
    { character = (number >> 4*(i-1)) & 0x0F;
      if(character < 10) TFT_English_xlarge(character + '0');
      else               TFT_English_xlarge(character - 10 + 'A');
    }
}

void TFT_unsigned_float_xlarge(float number, U08 integral, U08 fractional) /* display unsigned floating-point number */
{
  unsigned char zero_flag, digit, character;	// integral = digits of integral part
  unsigned int  div, integer;			// fractional = digits of fractional part

  digit = integral + fractional;
  if((integral == 0) || (fractional == 0) || (digit > 9)) return;

  div = 1;
  while(--digit) div *= 10;

  while(fractional--) number *= 10.;
  integer = (U32)(number + 0.5);

  zero_flag = 0;
  digit = 1;
  while(div > 0)				// display number
    { character = integer / div;
      if((character == 0) && (zero_flag == 0) && (digit != integral))
        TFT_English_xlarge(character + ' ');
      else
        { zero_flag = 1;
          TFT_English_xlarge(character + '0');
        }
      integer %= div;
      div /= 10;

      if(digit == integral)
        TFT_English_xlarge('.');
      digit++;
    }
}
